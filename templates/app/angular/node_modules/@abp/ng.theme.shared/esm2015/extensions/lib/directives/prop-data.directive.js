import { Directive, Injector, Input, TemplateRef, ViewContainerRef, } from '@angular/core';
import { PropData } from '../models/props';
export class PropDataDirective extends PropData {
    constructor(tempRef, vcRef, injector) {
        super();
        this.tempRef = tempRef;
        this.vcRef = vcRef;
        // tslint:disable-next-line
        this.getInjected = injector.get.bind(injector);
    }
    ngOnChanges() {
        this.vcRef.clear();
        this.vcRef.createEmbeddedView(this.tempRef, {
            $implicit: this.data,
            index: 0,
        });
    }
    ngOnDestroy() {
        this.vcRef.clear();
    }
}
PropDataDirective.decorators = [
    { type: Directive, args: [{
                exportAs: 'abpPropData',
                selector: '[abpPropData]',
            },] }
];
PropDataDirective.ctorParameters = () => [
    { type: TemplateRef },
    { type: ViewContainerRef },
    { type: Injector }
];
PropDataDirective.propDecorators = {
    propList: [{ type: Input, args: ['abpPropDataFromList',] }],
    record: [{ type: Input, args: ['abpPropDataWithRecord',] }],
    index: [{ type: Input, args: ['abpPropDataAtIndex',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvcC1kYXRhLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lLXNoYXJlZC9leHRlbnNpb25zL3NyYy9saWIvZGlyZWN0aXZlcy9wcm9wLWRhdGEuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsUUFBUSxFQUNSLEtBQUssRUFHTCxXQUFXLEVBQ1gsZ0JBQWdCLEdBQ2pCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxRQUFRLEVBQVksTUFBTSxpQkFBaUIsQ0FBQztBQU1yRCxNQUFNLE9BQU8saUJBQTJDLFNBQVEsUUFBeUI7SUFZdkYsWUFDVSxPQUF5QixFQUN6QixLQUF1QixFQUMvQixRQUFrQjtRQUVsQixLQUFLLEVBQUUsQ0FBQztRQUpBLFlBQU8sR0FBUCxPQUFPLENBQWtCO1FBQ3pCLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBSy9CLDJCQUEyQjtRQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUVuQixJQUFJLENBQUMsS0FBSyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDMUMsU0FBUyxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ3BCLEtBQUssRUFBRSxDQUFDO1NBQ1QsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ3JCLENBQUM7OztZQXRDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGFBQWE7Z0JBQ3ZCLFFBQVEsRUFBRSxlQUFlO2FBQzFCOzs7WUFSQyxXQUFXO1lBQ1gsZ0JBQWdCO1lBTGhCLFFBQVE7Ozt1QkFnQlAsS0FBSyxTQUFDLHFCQUFxQjtxQkFFM0IsS0FBSyxTQUFDLHVCQUF1QjtvQkFFN0IsS0FBSyxTQUFDLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERpcmVjdGl2ZSxcbiAgSW5qZWN0b3IsXG4gIElucHV0LFxuICBPbkNoYW5nZXMsXG4gIE9uRGVzdHJveSxcbiAgVGVtcGxhdGVSZWYsXG4gIFZpZXdDb250YWluZXJSZWYsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJvcERhdGEsIFByb3BMaXN0IH0gZnJvbSAnLi4vbW9kZWxzL3Byb3BzJztcblxuQERpcmVjdGl2ZSh7XG4gIGV4cG9ydEFzOiAnYWJwUHJvcERhdGEnLFxuICBzZWxlY3RvcjogJ1thYnBQcm9wRGF0YV0nLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9wRGF0YURpcmVjdGl2ZTxMIGV4dGVuZHMgUHJvcExpc3Q8YW55Pj4gZXh0ZW5kcyBQcm9wRGF0YTxJbmZlcnJlZERhdGE8TD4+XG4gIGltcGxlbWVudHMgT25DaGFuZ2VzLCBPbkRlc3Ryb3kge1xuICAvKiB0c2xpbnQ6ZGlzYWJsZTpuby1pbnB1dC1yZW5hbWUgKi9cbiAgQElucHV0KCdhYnBQcm9wRGF0YUZyb21MaXN0JykgcmVhZG9ubHkgcHJvcExpc3Q6IEw7XG5cbiAgQElucHV0KCdhYnBQcm9wRGF0YVdpdGhSZWNvcmQnKSByZWFkb25seSByZWNvcmQ6IEluZmVycmVkRGF0YTxMPlsncmVjb3JkJ107XG5cbiAgQElucHV0KCdhYnBQcm9wRGF0YUF0SW5kZXgnKSByZWFkb25seSBpbmRleDogbnVtYmVyO1xuICAvKiB0c2xpbnQ6ZW5hYmxlOm5vLWlucHV0LXJlbmFtZSAqL1xuXG4gIHJlYWRvbmx5IGdldEluamVjdGVkOiBJbmZlcnJlZERhdGE8TD5bJ2dldEluamVjdGVkJ107XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB0ZW1wUmVmOiBUZW1wbGF0ZVJlZjxhbnk+LFxuICAgIHByaXZhdGUgdmNSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgaW5qZWN0b3I6IEluamVjdG9yLFxuICApIHtcbiAgICBzdXBlcigpO1xuXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lXG4gICAgdGhpcy5nZXRJbmplY3RlZCA9IGluamVjdG9yLmdldC5iaW5kKGluamVjdG9yKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKCkge1xuICAgIHRoaXMudmNSZWYuY2xlYXIoKTtcblxuICAgIHRoaXMudmNSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcFJlZiwge1xuICAgICAgJGltcGxpY2l0OiB0aGlzLmRhdGEsXG4gICAgICBpbmRleDogMCxcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMudmNSZWYuY2xlYXIoKTtcbiAgfVxufVxuXG50eXBlIEluZmVycmVkRGF0YTxMPiA9IFByb3BEYXRhPEluZmVycmVkUmVjb3JkPEw+PjtcbnR5cGUgSW5mZXJyZWRSZWNvcmQ8TD4gPSBMIGV4dGVuZHMgUHJvcExpc3Q8aW5mZXIgUj4gPyBSIDogbmV2ZXI7XG4iXX0=