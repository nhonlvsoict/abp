import { of } from 'rxjs';
import { Prop, PropList, Props, PropsFactory, } from './props';
export class EntityPropList extends PropList {
}
export class EntityProps extends Props {
    constructor() {
        super(...arguments);
        this._ctor = EntityPropList;
    }
}
export class EntityPropsFactory extends PropsFactory {
    constructor() {
        super(...arguments);
        this._ctor = EntityProps;
    }
}
export class EntityProp extends Prop {
    constructor(options) {
        super(options.type, options.name, options.displayName, options.permission, options.visible, options.isExtra);
        this.columnWidth = options.columnWidth;
        this.sortable = options.sortable || false;
        this.valueResolver = options.valueResolver || (data => of(data.record[this.name]));
        this.action = options.action;
    }
    static create(options) {
        return new EntityProp(options);
    }
    static createMany(arrayOfOptions) {
        return arrayOfOptions.map(EntityProp.create);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LXByb3BzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtc2hhcmVkL2V4dGVuc2lvbnMvc3JjL2xpYi9tb2RlbHMvZW50aXR5LXByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFdEMsT0FBTyxFQUNMLElBQUksRUFJSixRQUFRLEVBQ1IsS0FBSyxFQUNMLFlBQVksR0FDYixNQUFNLFNBQVMsQ0FBQztBQUdqQixNQUFNLE9BQU8sY0FBd0IsU0FBUSxRQUEwQjtDQUFHO0FBRTFFLE1BQU0sT0FBTyxXQUFxQixTQUFRLEtBQXdCO0lBQWxFOztRQUNZLFVBQUssR0FBNEIsY0FBYyxDQUFDO0lBQzVELENBQUM7Q0FBQTtBQUVELE1BQU0sT0FBTyxrQkFBNEIsU0FBUSxZQUE0QjtJQUE3RTs7UUFDWSxVQUFLLEdBQXlCLFdBQVcsQ0FBQztJQUN0RCxDQUFDO0NBQUE7QUFFRCxNQUFNLE9BQU8sVUFBb0IsU0FBUSxJQUFPO0lBTTlDLFlBQVksT0FBNkI7UUFDdkMsS0FBSyxDQUNILE9BQU8sQ0FBQyxJQUFJLEVBQ1osT0FBTyxDQUFDLElBQUksRUFDWixPQUFPLENBQUMsV0FBVyxFQUNuQixPQUFPLENBQUMsVUFBVSxFQUNsQixPQUFPLENBQUMsT0FBTyxFQUNmLE9BQU8sQ0FBQyxPQUFPLENBQ2hCLENBQUM7UUFFRixJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQztRQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkYsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQy9CLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFVLE9BQTZCO1FBQ2xELE9BQU8sSUFBSSxVQUFVLENBQUksT0FBTyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQVUsY0FBc0M7UUFDL0QsT0FBTyxjQUFjLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUMvQyxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiB0c2xpbnQ6ZGlzYWJsZTp2YXJpYWJsZS1uYW1lICovXG5pbXBvcnQgeyBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTyB9IGZyb20gJ3RzLXRvb2xiZWx0JztcbmltcG9ydCB7XG4gIFByb3AsXG4gIFByb3BDYWxsYmFjayxcbiAgUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2ssXG4gIFByb3BDb250cmlidXRvckNhbGxiYWNrcyxcbiAgUHJvcExpc3QsXG4gIFByb3BzLFxuICBQcm9wc0ZhY3RvcnksXG59IGZyb20gJy4vcHJvcHMnO1xuaW1wb3J0IHsgQWN0aW9uQ2FsbGJhY2sgfSBmcm9tICcuL2FjdGlvbnMnO1xuXG5leHBvcnQgY2xhc3MgRW50aXR5UHJvcExpc3Q8UiA9IGFueT4gZXh0ZW5kcyBQcm9wTGlzdDxSLCBFbnRpdHlQcm9wPFI+PiB7fVxuXG5leHBvcnQgY2xhc3MgRW50aXR5UHJvcHM8UiA9IGFueT4gZXh0ZW5kcyBQcm9wczxFbnRpdHlQcm9wTGlzdDxSPj4ge1xuICBwcm90ZWN0ZWQgX2N0b3I6IFR5cGU8RW50aXR5UHJvcExpc3Q8Uj4+ID0gRW50aXR5UHJvcExpc3Q7XG59XG5cbmV4cG9ydCBjbGFzcyBFbnRpdHlQcm9wc0ZhY3Rvcnk8UiA9IGFueT4gZXh0ZW5kcyBQcm9wc0ZhY3Rvcnk8RW50aXR5UHJvcHM8Uj4+IHtcbiAgcHJvdGVjdGVkIF9jdG9yOiBUeXBlPEVudGl0eVByb3BzPFI+PiA9IEVudGl0eVByb3BzO1xufVxuXG5leHBvcnQgY2xhc3MgRW50aXR5UHJvcDxSID0gYW55PiBleHRlbmRzIFByb3A8Uj4ge1xuICByZWFkb25seSBjb2x1bW5XaWR0aDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICByZWFkb25seSBzb3J0YWJsZTogYm9vbGVhbjtcbiAgcmVhZG9ubHkgdmFsdWVSZXNvbHZlcjogUHJvcENhbGxiYWNrPFIsIE9ic2VydmFibGU8YW55Pj47XG4gIHJlYWRvbmx5IGFjdGlvbjogQWN0aW9uQ2FsbGJhY2s8Uj47XG5cbiAgY29uc3RydWN0b3Iob3B0aW9uczogRW50aXR5UHJvcE9wdGlvbnM8Uj4pIHtcbiAgICBzdXBlcihcbiAgICAgIG9wdGlvbnMudHlwZSxcbiAgICAgIG9wdGlvbnMubmFtZSxcbiAgICAgIG9wdGlvbnMuZGlzcGxheU5hbWUsXG4gICAgICBvcHRpb25zLnBlcm1pc3Npb24sXG4gICAgICBvcHRpb25zLnZpc2libGUsXG4gICAgICBvcHRpb25zLmlzRXh0cmEsXG4gICAgKTtcblxuICAgIHRoaXMuY29sdW1uV2lkdGggPSBvcHRpb25zLmNvbHVtbldpZHRoO1xuICAgIHRoaXMuc29ydGFibGUgPSBvcHRpb25zLnNvcnRhYmxlIHx8IGZhbHNlO1xuICAgIHRoaXMudmFsdWVSZXNvbHZlciA9IG9wdGlvbnMudmFsdWVSZXNvbHZlciB8fCAoZGF0YSA9PiBvZihkYXRhLnJlY29yZFt0aGlzLm5hbWVdKSk7XG4gICAgdGhpcy5hY3Rpb24gPSBvcHRpb25zLmFjdGlvbjtcbiAgfVxuXG4gIHN0YXRpYyBjcmVhdGU8UiA9IGFueT4ob3B0aW9uczogRW50aXR5UHJvcE9wdGlvbnM8Uj4pIHtcbiAgICByZXR1cm4gbmV3IEVudGl0eVByb3A8Uj4ob3B0aW9ucyk7XG4gIH1cblxuICBzdGF0aWMgY3JlYXRlTWFueTxSID0gYW55PihhcnJheU9mT3B0aW9uczogRW50aXR5UHJvcE9wdGlvbnM8Uj5bXSkge1xuICAgIHJldHVybiBhcnJheU9mT3B0aW9ucy5tYXAoRW50aXR5UHJvcC5jcmVhdGUpO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEVudGl0eVByb3BPcHRpb25zPFIgPSBhbnk+ID0gTy5PcHRpb25hbDxcbiAgTy5Xcml0YWJsZTxFbnRpdHlQcm9wPFI+PixcbiAgfCAncGVybWlzc2lvbidcbiAgfCAndmlzaWJsZSdcbiAgfCAnZGlzcGxheU5hbWUnXG4gIHwgJ2lzRXh0cmEnXG4gIHwgJ2NvbHVtbldpZHRoJ1xuICB8ICdzb3J0YWJsZSdcbiAgfCAndmFsdWVSZXNvbHZlcidcbiAgfCAnYWN0aW9uJ1xuPjtcblxuZXhwb3J0IHR5cGUgRW50aXR5UHJvcERlZmF1bHRzPFIgPSBhbnk+ID0gUmVjb3JkPHN0cmluZywgRW50aXR5UHJvcDxSPltdPjtcbmV4cG9ydCB0eXBlIEVudGl0eVByb3BDb250cmlidXRvckNhbGxiYWNrPFIgPSBhbnk+ID0gUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2s8RW50aXR5UHJvcExpc3Q8Uj4+O1xuZXhwb3J0IHR5cGUgRW50aXR5UHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2tzPFIgPSBhbnk+ID0gUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2tzPEVudGl0eVByb3BMaXN0PFI+PjtcbiJdfQ==