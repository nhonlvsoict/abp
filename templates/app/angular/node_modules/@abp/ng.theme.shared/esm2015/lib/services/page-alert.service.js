import { Injectable } from '@angular/core';
import { InternalStore } from '@abp/ng.core';
import * as i0 from "@angular/core";
export class PageAlertService {
    constructor() {
        this.alerts = new InternalStore([]);
        this.alerts$ = this.alerts.sliceState(state => state);
    }
    show(alert) {
        var _a;
        const newAlert = Object.assign(Object.assign({}, alert), { dismissible: (_a = alert.dismissible) !== null && _a !== void 0 ? _a : true });
        this.alerts.set([newAlert, ...this.alerts.state]);
    }
    remove(index) {
        const alerts = [...this.alerts.state];
        alerts.splice(index, 1);
        this.alerts.set(alerts);
    }
}
PageAlertService.ɵprov = i0.ɵɵdefineInjectable({ factory: function PageAlertService_Factory() { return new PageAlertService(); }, token: PageAlertService, providedIn: "root" });
PageAlertService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
PageAlertService.ctorParameters = () => [];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1hbGVydC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtc2hhcmVkL3NyYy9saWIvc2VydmljZXMvcGFnZS1hbGVydC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFZN0MsTUFBTSxPQUFPLGdCQUFnQjtJQUszQjtRQUpRLFdBQU0sR0FBRyxJQUFJLGFBQWEsQ0FBYyxFQUFFLENBQUMsQ0FBQztRQUVwRCxZQUFPLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVsQyxDQUFDO0lBRWhCLElBQUksQ0FBQyxLQUFnQjs7UUFDbkIsTUFBTSxRQUFRLG1DQUNULEtBQUssS0FDUixXQUFXLFFBQUUsS0FBSyxDQUFDLFdBQVcsbUNBQUksSUFBSSxHQUN2QyxDQUFDO1FBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDcEQsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFhO1FBQ2xCLE1BQU0sTUFBTSxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzFCLENBQUM7Ozs7WUFwQkYsVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEludGVybmFsU3RvcmUgfSBmcm9tICdAYWJwL25nLmNvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBhZ2VBbGVydCB7XG4gIHR5cGU6ICdwcmltYXJ5JyB8ICdzZWNvbmRhcnknIHwgJ3N1Y2Nlc3MnIHwgJ2RhbmdlcicgfCAnd2FybmluZycgfCAnaW5mbycgfCAnbGlnaHQnIHwgJ2RhcmsnO1xuICBtZXNzYWdlOiBzdHJpbmc7XG4gIGRpc21pc3NpYmxlPzogYm9vbGVhbjtcbiAgdGl0bGU/OiBzdHJpbmc7XG4gIG1lc3NhZ2VMb2NhbGl6YXRpb25QYXJhbXM/OiBzdHJpbmdbXTtcbiAgdGl0bGVMb2NhbGl6YXRpb25QYXJhbXM/OiBzdHJpbmdbXTtcbn1cblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBQYWdlQWxlcnRTZXJ2aWNlIHtcbiAgcHJpdmF0ZSBhbGVydHMgPSBuZXcgSW50ZXJuYWxTdG9yZTxQYWdlQWxlcnRbXT4oW10pO1xuXG4gIGFsZXJ0cyQgPSB0aGlzLmFsZXJ0cy5zbGljZVN0YXRlKHN0YXRlID0+IHN0YXRlKTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgc2hvdyhhbGVydDogUGFnZUFsZXJ0KSB7XG4gICAgY29uc3QgbmV3QWxlcnQ6IFBhZ2VBbGVydCA9IHtcbiAgICAgIC4uLmFsZXJ0LFxuICAgICAgZGlzbWlzc2libGU6IGFsZXJ0LmRpc21pc3NpYmxlID8/IHRydWUsXG4gICAgfTtcbiAgICB0aGlzLmFsZXJ0cy5zZXQoW25ld0FsZXJ0LCAuLi50aGlzLmFsZXJ0cy5zdGF0ZV0pO1xuICB9XG5cbiAgcmVtb3ZlKGluZGV4OiBudW1iZXIpIHtcbiAgICBjb25zdCBhbGVydHMgPSBbLi4udGhpcy5hbGVydHMuc3RhdGVdO1xuICAgIGFsZXJ0cy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHRoaXMuYWxlcnRzLnNldChhbGVydHMpO1xuICB9XG59XG4iXX0=