(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@abp/ng.theme.shared'), require('@angular/core'), require('@angular/router/testing'), require('@ng-bootstrap/ng-bootstrap'), require('@ngx-validate/core')) :
    typeof define === 'function' && define.amd ? define('@abp/ng.theme.shared/testing', ['exports', '@abp/ng.theme.shared', '@angular/core', '@angular/router/testing', '@ng-bootstrap/ng-bootstrap', '@ngx-validate/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.abp = global.abp || {}, global.abp.ng = global.abp.ng || {}, global.abp.ng.theme = global.abp.ng.theme || {}, global.abp.ng.theme.shared = global.abp.ng.theme.shared || {}, global.abp.ng.theme.shared.testing = {}), global.abp.ng.theme.shared, global.ng.core, global.ng.router.testing, global.ngBootstrap, global.core));
}(this, (function (exports, ng_theme_shared, core$1, testing, ngBootstrap, core) { 'use strict';

    var index = /*#__PURE__*/Object.freeze({
        __proto__: null
    });

    /**
     * ThemeSharedTestingModule is the module that will be used in tests
     */
    var ThemeSharedTestingModule = /** @class */ (function () {
        function ThemeSharedTestingModule() {
        }
        ThemeSharedTestingModule.withConfig = function (_a) {
            var _b = _a === void 0 ? {} : _a, _c = _b.validation, validation = _c === void 0 ? {} : _c;
            return {
                ngModule: ThemeSharedTestingModule,
                providers: [
                    ng_theme_shared.THEME_SHARED_ROUTE_PROVIDERS,
                    { provide: ngBootstrap.NgbDateParserFormatter, useClass: ng_theme_shared.DateParserFormatter },
                    {
                        provide: core.VALIDATION_BLUEPRINTS,
                        useValue: Object.assign(Object.assign({}, ng_theme_shared.DEFAULT_VALIDATION_BLUEPRINTS), (validation.blueprints || {})),
                    },
                    {
                        provide: core.VALIDATION_MAP_ERRORS_FN,
                        useValue: validation.mapErrorsFn || core.defaultMapErrorsFn,
                    },
                    {
                        provide: core.VALIDATION_VALIDATE_ON_SUBMIT,
                        useValue: validation.validateOnSubmit,
                    },
                ],
            };
        };
        return ThemeSharedTestingModule;
    }());
    ThemeSharedTestingModule.decorators = [
        { type: core$1.NgModule, args: [{
                    exports: [testing.RouterTestingModule, ng_theme_shared.BaseThemeSharedModule],
                    imports: [testing.RouterTestingModule, ng_theme_shared.BaseThemeSharedModule],
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ThemeSharedTesting = index;
    exports.ThemeSharedTestingModule = ThemeSharedTestingModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=abp-ng.theme.shared-testing.umd.js.map
