{"version":3,"file":"abp-ng.theme.shared-extensions.js","sources":["../../../packages/theme-shared/extensions/src/lib/adapters/date-time.adapter.ts","../../../packages/theme-shared/extensions/src/lib/adapters/date.adapter.ts","../../../packages/theme-shared/extensions/src/lib/adapters/time.adapter.ts","../../../packages/theme-shared/extensions/src/lib/utils/factory.util.ts","../../../packages/theme-shared/extensions/src/lib/components/date-time-picker/date-time-picker.component.ts","../../../packages/theme-shared/extensions/src/lib/constants/extra-properties.ts","../../../packages/theme-shared/extensions/src/lib/utils/typeahead.util.ts","../../../packages/theme-shared/extensions/src/lib/components/extensible-form/extensible-form-prop.component.ts","../../../packages/theme-shared/extensions/src/lib/models/actions.ts","../../../packages/theme-shared/extensions/src/lib/models/entity-actions.ts","../../../packages/theme-shared/extensions/src/lib/models/props.ts","../../../packages/theme-shared/extensions/src/lib/models/entity-props.ts","../../../packages/theme-shared/extensions/src/lib/models/form-props.ts","../../../packages/theme-shared/extensions/src/lib/models/toolbar-actions.ts","../../../packages/theme-shared/extensions/src/lib/services/extensions.service.ts","../../../packages/theme-shared/extensions/src/lib/tokens/extensions.token.ts","../../../packages/theme-shared/extensions/src/lib/components/extensible-form/extensible-form.component.ts","../../../packages/theme-shared/extensions/src/lib/components/extensible-table/extensible-table.component.ts","../../../packages/theme-shared/extensions/src/lib/components/abstract-actions/abstract-actions.component.ts","../../../packages/theme-shared/extensions/src/lib/components/grid-actions/grid-actions.component.ts","../../../packages/theme-shared/extensions/src/lib/components/page-toolbar/page-toolbar.component.ts","../../../packages/theme-shared/extensions/src/lib/directives/disabled.directive.ts","../../../packages/theme-shared/extensions/src/lib/directives/prop-data.directive.ts","../../../packages/theme-shared/extensions/src/lib/ui-extensions.module.ts","../../../packages/theme-shared/extensions/src/lib/utils/actions.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/form-props.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/props.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/enum.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/localization.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/validation.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/state.util.ts","../../../packages/theme-shared/extensions/src/abp-ng.theme.shared-extensions.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class DateTimeAdapter {\n  value: NgbDateTimeStruct;\n\n  fromModel(value: string | Date): NgbDateTimeStruct | null {\n    if (!value) return null;\n\n    const date = new Date(value);\n\n    if (isNaN((date as unknown) as number)) return null;\n\n    this.value = {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      second: date.getSeconds(),\n    };\n\n    return this.value;\n  }\n\n  toModel(value: NgbDateTimeStruct | null): string {\n    if (!value) return '';\n\n    const now = new Date();\n\n    value = {\n      year: now.getUTCFullYear(),\n      month: now.getMonth() + 1,\n      day: now.getDate(),\n      hour: 0,\n      minute: 0,\n      second: 0,\n      ...this.value,\n      ...value,\n    };\n\n    const date = new Date(\n      value.year,\n      value.month - 1,\n      value.day,\n      value.hour,\n      value.minute,\n      value.second,\n    );\n\n    return new Date(date).toISOString();\n  }\n}\n\ntype NgbDateTimeStruct = NgbDateStruct & NgbTimeStruct;\n","import { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class DateAdapter extends NgbDateAdapter<string> {\n  fromModel(value: string | Date): NgbDateStruct | null {\n    if (!value) return null;\n\n    const date = new Date(value);\n\n    if (isNaN((date as unknown) as number)) return null;\n\n    return {\n      day: date.getDate(),\n      month: date.getMonth() + 1,\n      year: date.getFullYear(),\n    };\n  }\n\n  toModel(value: NgbDateStruct | null): string {\n    if (!value) return '';\n\n    const date = new Date(value.year, value.month - 1, value.day);\n    const formattedDate = formatDate(date, 'yyyy-MM-dd', 'en');\n\n    return formattedDate;\n  }\n}\n","import { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NgbTimeAdapter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class TimeAdapter extends NgbTimeAdapter<string> {\n  fromModel(value: string | Date): NgbTimeStruct | null {\n    if (!value) return null;\n\n    const date = isTimeStr(value)\n      ? new Date(0, 0, 1, ...value.split(':').map(Number))\n      : new Date(value);\n\n    if (isNaN((date as unknown) as number)) return null;\n\n    return {\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      second: date.getSeconds(),\n    };\n  }\n\n  toModel(value: NgbTimeStruct | null): string {\n    if (!value) return '';\n\n    const date = new Date(0, 0, 1, value.hour, value.minute, value.second);\n    const formattedDate = formatDate(date, 'HH:mm', 'en');\n\n    return formattedDate;\n  }\n}\n\nfunction isTimeStr(value: string | Date): value is string {\n  return /^((2[123])|[01][0-9])(\\:[0-5][0-9]){1,2}$/.test(String(value));\n}\n","export function selfFactory(dependency?: any) {\n  return dependency;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Optional,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport {\n  NgbDateAdapter,\n  NgbInputDatepicker,\n  NgbTimeAdapter,\n  NgbTimepicker,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { DateTimeAdapter } from '../../adapters/date-time.adapter';\nimport { FormProp } from '../../models/form-props';\nimport { selfFactory } from '../../utils/factory.util';\n\n@Component({\n  exportAs: 'abpDateTimePicker',\n  selector: 'abp-date-time-picker',\n  template: `\n    <input\n      [id]=\"prop.id\"\n      [formControlName]=\"prop.name\"\n      (ngModelChange)=\"setTime($event)\"\n      (click)=\"datepicker.open()\"\n      (keyup.space)=\"datepicker.open()\"\n      ngbDatepicker\n      #datepicker=\"ngbDatepicker\"\n      type=\"text\"\n      class=\"form-control\"\n    />\n    <ngb-timepicker\n      #timepicker\n      [formControlName]=\"prop.name\"\n      (ngModelChange)=\"setDate($event)\"\n      [meridian]=\"meridian\"\n    ></ngb-timepicker>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n    },\n    {\n      provide: NgbDateAdapter,\n      useClass: DateTimeAdapter,\n    },\n    {\n      provide: NgbTimeAdapter,\n      useClass: DateTimeAdapter,\n    },\n  ],\n})\nexport class DateTimePickerComponent {\n  @Input() prop: FormProp;\n  @Input() meridian = false;\n\n  @ViewChild(NgbInputDatepicker) date: NgbInputDatepicker;\n  @ViewChild(NgbTimepicker) time: NgbTimepicker;\n\n  constructor(public readonly cdRef: ChangeDetectorRef) {}\n\n  setDate(datestr: string) {\n    this.date.writeValue(datestr);\n  }\n\n  setTime(datestr: string) {\n    this.time.writeValue(datestr);\n  }\n}\n","export const EXTRA_PROPERTIES_KEY = 'extraProperties';\n","import { ABP, ExtensionPropertyUiLookupDto, RestService } from '@abp/ng.core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ePropType } from '../enums/props.enum';\nimport { ObjectExtensions } from '../models/object-extensions';\nimport { PropCallback } from '../models/props';\n\nconst TYPEAHEAD_TEXT_SUFFIX = '_Text';\nconst TYPEAHEAD_TEXT_SUFFIX_REGEX = /_Text$/;\n\nexport function createTypeaheadOptions(\n  lookup: ExtensionPropertyUiLookupDto,\n): PropCallback<any, Observable<ABP.Option<any>[]>> {\n  return (data, searchText) =>\n    searchText\n      ? data\n          .getInjected(RestService)\n          .request(\n            {\n              method: 'GET',\n              url: lookup.url,\n              params: {\n                [lookup.filterParamName]: searchText,\n              },\n            },\n            { apiName: 'Default' },\n          )\n          .pipe(\n            map(response => {\n              const list = response[lookup.resultListPropertyName];\n              const mapToOption = (item: any) => ({\n                key: item[lookup.displayPropertyName],\n                value: item[lookup.valuePropertyName],\n              });\n              return list.map(mapToOption);\n            }),\n          )\n      : of([]);\n}\n\nexport function getTypeaheadType(lookup: ExtensionPropertyUiLookupDto, name: string) {\n  return Boolean(lookup.url)\n    ? ePropType.Typeahead\n    : name.endsWith(TYPEAHEAD_TEXT_SUFFIX)\n    ? ePropType.Hidden\n    : undefined;\n}\n\nexport function createTypeaheadDisplayNameGenerator(\n  displayNameGeneratorFn: ObjectExtensions.DisplayNameGeneratorFn,\n  properties: ObjectExtensions.EntityExtensionProperties,\n): ObjectExtensions.DisplayNameGeneratorFn {\n  return (displayName, fallback) => {\n    const name = removeTypeaheadTextSuffix(fallback.name);\n    return displayNameGeneratorFn(displayName || properties[name].displayName, {\n      name,\n      resource: fallback.resource,\n    });\n  };\n}\n\nexport function addTypeaheadTextSuffix(name: string) {\n  return name + TYPEAHEAD_TEXT_SUFFIX;\n}\n\nexport function hasTypeaheadTextSuffix(name: string) {\n  return TYPEAHEAD_TEXT_SUFFIX_REGEX.test(name);\n}\n\nexport function removeTypeaheadTextSuffix(name: string) {\n  return name.replace(TYPEAHEAD_TEXT_SUFFIX_REGEX, '');\n}\n","import { ABP, AbpValidators, ConfigStateService, TrackByService } from '@abp/ng.core';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormGroup,\n  FormGroupDirective,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { NgbDateAdapter, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { DateAdapter } from '../../adapters/date.adapter';\nimport { TimeAdapter } from '../../adapters/time.adapter';\nimport { EXTRA_PROPERTIES_KEY } from '../../constants/extra-properties';\nimport { ePropType } from '../../enums/props.enum';\nimport { FormProp } from '../../models/form-props';\nimport { PropData } from '../../models/props';\nimport { selfFactory } from '../../utils/factory.util';\nimport { addTypeaheadTextSuffix } from '../../utils/typeahead.util';\n\n@Component({\n  selector: 'abp-extensible-form-prop',\n  templateUrl: './extensible-form-prop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n    },\n    { provide: NgbDateAdapter, useClass: DateAdapter },\n    { provide: NgbTimeAdapter, useClass: TimeAdapter },\n  ],\n})\nexport class ExtensibleFormPropComponent implements OnChanges, AfterViewInit {\n  @Input() data: PropData;\n\n  @Input() prop: FormProp;\n\n  @Input() first: boolean;\n\n  @ViewChild('field') private fieldRef: ElementRef<HTMLElement>;\n\n  asterisk = '';\n\n  options$: Observable<ABP.Option<any>[]> = of([]);\n\n  validators: ValidatorFn[] = [];\n\n  readonly: boolean;\n\n  disabled: boolean;\n\n  private readonly form: FormGroup;\n\n  typeaheadModel: any;\n\n  setTypeaheadValue(selectedOption: ABP.Option<string>) {\n    this.typeaheadModel = selectedOption || { key: null, value: null };\n    const { key, value } = this.typeaheadModel;\n    const [keyControl, valueControl] = this.getTypeaheadControls();\n    if (valueControl.value && !value) valueControl.markAsDirty();\n    keyControl.setValue(key);\n    valueControl.setValue(value);\n  }\n\n  search = (text$: Observable<string>) =>\n    text$\n      ? text$.pipe(\n          debounceTime(300),\n          distinctUntilChanged(),\n          switchMap(text => this.prop.options(this.data, text)),\n        )\n      : of([]);\n\n  typeaheadFormatter = (option: ABP.Option<any>) => option.key;\n\n  get meridian() {\n    return (\n      this.configState.getDeep('localization.currentCulture.dateTimeFormat.shortTimePattern') || ''\n    ).includes('tt');\n  }\n\n  get isInvalid() {\n    const control = this.form.get(this.prop.name);\n    return control.touched && control.invalid;\n  }\n\n  constructor(\n    public readonly cdRef: ChangeDetectorRef,\n    public readonly track: TrackByService,\n    protected configState: ConfigStateService,\n    groupDirective: FormGroupDirective,\n  ) {\n    this.form = groupDirective.form;\n  }\n\n  private getTypeaheadControls() {\n    const { name } = this.prop;\n    const extraPropName = `${EXTRA_PROPERTIES_KEY}.${name}`;\n    const keyControl =\n      this.form.get(addTypeaheadTextSuffix(extraPropName)) ||\n      this.form.get(addTypeaheadTextSuffix(name));\n    const valueControl = this.form.get(extraPropName) || this.form.get(name);\n    return [keyControl, valueControl];\n  }\n\n  private setAsterisk() {\n    this.asterisk = this.validators.some(isRequired) ? '*' : '';\n  }\n\n  ngAfterViewInit() {\n    if (this.first && this.fieldRef) {\n      this.fieldRef.nativeElement.focus();\n    }\n  }\n\n  getComponent(prop: FormProp): string {\n    switch (prop.type) {\n      case ePropType.Boolean:\n        return 'checkbox';\n      case ePropType.Date:\n        return 'date';\n      case ePropType.DateTime:\n        return 'dateTime';\n      case ePropType.Hidden:\n        return 'hidden';\n      case ePropType.MultiSelect:\n        return 'multiselect';\n      case ePropType.Text:\n        return 'textarea';\n      case ePropType.Time:\n        return 'time';\n      case ePropType.Typeahead:\n        return 'typeahead';\n      default:\n        return prop.options ? 'select' : 'input';\n    }\n  }\n\n  getType(prop: FormProp): string {\n    switch (prop.type) {\n      case ePropType.Date:\n      case ePropType.String:\n        return 'text';\n      case ePropType.Boolean:\n        return 'checkbox';\n      case ePropType.Number:\n        return 'number';\n      case ePropType.Email:\n        return 'email';\n      case ePropType.Password:\n        return 'password';\n      default:\n        return 'hidden';\n    }\n  }\n\n  ngOnChanges({ prop }: SimpleChanges) {\n    const currentProp = snq<FormProp>(() => prop.currentValue);\n    const { options, readonly, disabled, validators } = currentProp || {};\n\n    if (options) this.options$ = options(this.data);\n    if (readonly) this.readonly = readonly(this.data);\n    if (disabled) this.disabled = disabled(this.data);\n    if (validators) {\n      this.validators = validators(this.data);\n      this.setAsterisk();\n    }\n\n    const [keyControl, valueControl] = this.getTypeaheadControls();\n    if (keyControl && valueControl)\n      this.typeaheadModel = { key: keyControl.value, value: valueControl.value };\n  }\n}\n\nfunction isRequired(validator: ValidatorFn) {\n  return validator === Validators.required || validator === AbpValidators.required;\n}\n","/* tslint:disable:variable-name */\nimport { LinkedList } from '@abp/utils';\nimport { InjectFlags, InjectionToken, Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\n\nexport abstract class ActionList<R = any, A = Action<R>> extends LinkedList<A> {}\n\nexport abstract class ActionData<R = any> {\n  abstract getInjected: <T>(\n    token: Type<T> | InjectionToken<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags,\n  ) => T;\n  index?: number;\n  abstract record: R;\n\n  get data(): ReadonlyActionData<R> {\n    return {\n      getInjected: this.getInjected,\n      index: this.index,\n      record: this.record,\n    };\n  }\n}\n\nexport type ReadonlyActionData<R = any> = O.Readonly<Omit<ActionData<R>, 'data'>>;\n\nexport abstract class Action<R = any> {\n  constructor(\n    public readonly permission: string,\n    public readonly visible: ActionPredicate<R> = _ => true,\n    public readonly action: ActionCallback<R> = _ => {},\n  ) {}\n}\n\nexport type ActionCallback<T, R = any> = (data?: Omit<ActionData<T>, 'data'>) => R;\nexport type ActionPredicate<T> = (data?: Omit<ActionData<T>, 'data'>) => boolean;\n\nexport abstract class ActionsFactory<C extends Actions<any>> {\n  protected abstract _ctor: Type<C>;\n  private contributorCallbacks: ActionContributorCallbacks<InferredActionList<C>> = {};\n\n  get(name: string): C {\n    this.contributorCallbacks[name] = this.contributorCallbacks[name] || [];\n\n    return new this._ctor(this.contributorCallbacks[name]);\n  }\n}\n\nexport abstract class Actions<L extends ActionList> {\n  protected abstract _ctor: Type<L>;\n\n  get actions(): L {\n    const actionList = new this._ctor();\n\n    this.callbackList.forEach(callback => callback(actionList));\n\n    return actionList;\n  }\n\n  constructor(private readonly callbackList: ActionContributorCallback<L>[]) {}\n\n  addContributor(contributeCallback: ActionContributorCallback<L>) {\n    this.callbackList.push(contributeCallback);\n  }\n\n  clearContributors() {\n    while (this.callbackList.length) this.callbackList.pop();\n  }\n}\n\nexport type ActionContributorCallbacks<L extends ActionList<any>> = Record<\n  string,\n  ActionContributorCallback<L>[]\n>;\n\nexport type ActionContributorCallback<L extends ActionList<any>> = (actionList: L) => any;\n\ntype InferredActionList<C> = C extends Actions<infer L> ? L : never;\n","/* tslint:disable:variable-name */\nimport { Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\nimport {\n  Action,\n  ActionContributorCallback,\n  ActionContributorCallbacks,\n  ActionList,\n  Actions,\n  ActionsFactory,\n} from './actions';\n\nexport class EntityActionList<R = any> extends ActionList<R, EntityAction<R>> {}\n\nexport class EntityActions<R = any> extends Actions<EntityActionList<R>> {\n  protected _ctor: Type<EntityActionList<R>> = EntityActionList;\n}\n\nexport class EntityActionsFactory<R = any> extends ActionsFactory<EntityActions<R>> {\n  protected _ctor: Type<EntityActions<R>> = EntityActions;\n}\n\nexport class EntityAction<R = any> extends Action<R> {\n  readonly text: string;\n  readonly icon: string;\n\n  constructor(options: EntityActionOptions<R>) {\n    super(options.permission, options.visible, options.action);\n    this.text = options.text;\n    this.icon = options.icon || '';\n  }\n\n  static create<R = any>(options: EntityActionOptions<R>) {\n    return new EntityAction<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: EntityActionOptions<R>[]) {\n    return arrayOfOptions.map(EntityAction.create);\n  }\n}\n\nexport type EntityActionOptions<R = any> = O.Optional<\n  O.Writable<EntityAction<R>>,\n  'permission' | 'visible' | 'icon'\n>;\n\nexport type EntityActionDefaults<R = any> = Record<string, EntityAction<R>[]>;\nexport type EntityActionContributorCallback<R = any> = ActionContributorCallback<\n  EntityActionList<R>\n>;\nexport type EntityActionContributorCallbacks<R = any> = ActionContributorCallbacks<\n  EntityActionList<R>\n>;\n","/* tslint:disable:variable-name */\nimport { LinkedList } from '@abp/utils';\nimport { InjectFlags, InjectionToken, Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\nimport { ePropType } from '../enums/props.enum';\n\nexport abstract class PropList<R = any, A = Prop<R>> extends LinkedList<A> {}\n\nexport abstract class PropData<R = any> {\n  abstract getInjected: <T>(\n    token: Type<T> | InjectionToken<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags,\n  ) => T;\n  index?: number;\n  abstract record: R;\n\n  get data(): ReadonlyPropData<R> {\n    return {\n      getInjected: this.getInjected,\n      index: this.index,\n      record: this.record,\n    };\n  }\n}\n\nexport type ReadonlyPropData<R = any> = O.Readonly<Omit<PropData<R>, 'data'>>;\n\nexport abstract class Prop<R = any> {\n  constructor(\n    public readonly type: ePropType,\n    public readonly name: string,\n    public readonly displayName: string,\n    public readonly permission: string,\n    public readonly visible: PropPredicate<R> = _ => true,\n    public readonly isExtra = false,\n  ) {\n    this.displayName = this.displayName || this.name;\n  }\n}\n\nexport type PropCallback<T, R = any> = (data?: Omit<PropData<T>, 'data'>, auxData?: any) => R;\nexport type PropPredicate<T> = (data?: Omit<PropData<T>, 'data'>, auxData?: any) => boolean;\n\nexport abstract class PropsFactory<C extends Props<any>> {\n  protected abstract _ctor: Type<C>;\n  private contributorCallbacks: PropContributorCallbacks<InferredPropList<C>> = {};\n\n  get(name: string): C {\n    this.contributorCallbacks[name] = this.contributorCallbacks[name] || [];\n\n    return new this._ctor(this.contributorCallbacks[name]);\n  }\n}\n\nexport abstract class Props<L extends PropList> {\n  protected abstract _ctor: Type<L>;\n\n  get props(): L {\n    const propList = new this._ctor();\n\n    this.callbackList.forEach(callback => callback(propList));\n\n    return propList;\n  }\n\n  constructor(private readonly callbackList: PropContributorCallback<L>[]) {}\n\n  addContributor(contributeCallback: PropContributorCallback<L>) {\n    this.callbackList.push(contributeCallback);\n  }\n\n  clearContributors() {\n    while (this.callbackList.length) this.callbackList.pop();\n  }\n}\n\nexport type PropContributorCallbacks<L extends PropList<any>> = Record<\n  string,\n  PropContributorCallback<L>[]\n>;\n\nexport type PropContributorCallback<L extends PropList<any>> = (propList: L) => any;\n\ntype InferredPropList<C> = C extends Props<infer L> ? L : never;\n","/* tslint:disable:variable-name */\nimport { Type } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { O } from 'ts-toolbelt';\nimport {\n  Prop,\n  PropCallback,\n  PropContributorCallback,\n  PropContributorCallbacks,\n  PropList,\n  Props,\n  PropsFactory,\n} from './props';\nimport { ActionCallback } from './actions';\n\nexport class EntityPropList<R = any> extends PropList<R, EntityProp<R>> {}\n\nexport class EntityProps<R = any> extends Props<EntityPropList<R>> {\n  protected _ctor: Type<EntityPropList<R>> = EntityPropList;\n}\n\nexport class EntityPropsFactory<R = any> extends PropsFactory<EntityProps<R>> {\n  protected _ctor: Type<EntityProps<R>> = EntityProps;\n}\n\nexport class EntityProp<R = any> extends Prop<R> {\n  readonly columnWidth: number | undefined;\n  readonly sortable: boolean;\n  readonly valueResolver: PropCallback<R, Observable<any>>;\n  readonly action: ActionCallback<R>;\n\n  constructor(options: EntityPropOptions<R>) {\n    super(\n      options.type,\n      options.name,\n      options.displayName,\n      options.permission,\n      options.visible,\n      options.isExtra,\n    );\n\n    this.columnWidth = options.columnWidth;\n    this.sortable = options.sortable || false;\n    this.valueResolver = options.valueResolver || (data => of(data.record[this.name]));\n    this.action = options.action;\n  }\n\n  static create<R = any>(options: EntityPropOptions<R>) {\n    return new EntityProp<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: EntityPropOptions<R>[]) {\n    return arrayOfOptions.map(EntityProp.create);\n  }\n}\n\nexport type EntityPropOptions<R = any> = O.Optional<\n  O.Writable<EntityProp<R>>,\n  | 'permission'\n  | 'visible'\n  | 'displayName'\n  | 'isExtra'\n  | 'columnWidth'\n  | 'sortable'\n  | 'valueResolver'\n  | 'action'\n>;\n\nexport type EntityPropDefaults<R = any> = Record<string, EntityProp<R>[]>;\nexport type EntityPropContributorCallback<R = any> = PropContributorCallback<EntityPropList<R>>;\nexport type EntityPropContributorCallbacks<R = any> = PropContributorCallbacks<EntityPropList<R>>;\n","/* tslint:disable:variable-name */\nimport { ABP } from '@abp/ng.core';\nimport { Injector, Type } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { O } from 'ts-toolbelt';\nimport {\n  Prop,\n  PropCallback,\n  PropContributorCallback,\n  PropContributorCallbacks,\n  PropData,\n  PropList,\n  PropPredicate,\n  Props,\n  PropsFactory,\n} from './props';\n\nexport class FormPropList<R = any> extends PropList<R, FormProp<R>> {}\n\nexport class FormProps<R = any> extends Props<FormPropList<R>> {\n  protected _ctor: Type<FormPropList<R>> = FormPropList;\n}\n\nexport class CreateFormPropsFactory<R = any> extends PropsFactory<FormProps<R>> {\n  protected _ctor: Type<FormProps<R>> = FormProps;\n}\n\nexport class EditFormPropsFactory<R = any> extends PropsFactory<FormProps<R>> {\n  protected _ctor: Type<FormProps<R>> = FormProps;\n}\n\nexport class FormProp<R = any> extends Prop<R> {\n  readonly validators: PropCallback<R, ValidatorFn[]>;\n  readonly asyncValidators: PropCallback<R, AsyncValidatorFn[]>;\n  readonly disabled: PropPredicate<R>;\n  readonly readonly: PropPredicate<R>;\n  readonly autocomplete: string;\n  readonly defaultValue: boolean | number | string | Date;\n  readonly options: PropCallback<R, Observable<ABP.Option<any>[]>> | undefined;\n  readonly id: string | undefined;\n\n  constructor(options: FormPropOptions<R>) {\n    super(\n      options.type,\n      options.name,\n      options.displayName,\n      options.permission,\n      options.visible,\n      options.isExtra,\n    );\n\n    this.asyncValidators = options.asyncValidators || (_ => []);\n    this.validators = options.validators || (_ => []);\n    this.disabled = options.disabled || (_ => false);\n    this.readonly = options.readonly || (_ => false);\n    this.autocomplete = options.autocomplete || 'off';\n    this.options = options.options;\n    this.id = options.id || options.name;\n    const defaultValue = options.defaultValue;\n    this.defaultValue = isFalsyValue(defaultValue) ? defaultValue : defaultValue || null;\n  }\n\n  static create<R = any>(options: FormPropOptions<R>) {\n    return new FormProp<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: FormPropOptions<R>[]) {\n    return arrayOfOptions.map(FormProp.create);\n  }\n}\n\nexport class FormPropData<R = any> extends PropData<R> {\n  getInjected: PropData<R>['getInjected'];\n\n  constructor(injector: Injector, public readonly record: R) {\n    super();\n\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n  }\n}\n\nexport type FormPropOptions<R = any> = O.Optional<\n  O.Writable<FormProp<R>>,\n  | 'permission'\n  | 'visible'\n  | 'displayName'\n  | 'isExtra'\n  | 'validators'\n  | 'asyncValidators'\n  | 'disabled'\n  | 'readonly'\n  | 'autocomplete'\n  | 'defaultValue'\n  | 'options'\n  | 'id'\n>;\n\nexport type CreateFormPropDefaults<R = any> = Record<string, FormProp<R>[]>;\nexport type CreateFormPropContributorCallback<R = any> = PropContributorCallback<FormPropList<R>>;\nexport type CreateFormPropContributorCallbacks<R = any> = PropContributorCallbacks<FormPropList<R>>;\nexport type EditFormPropDefaults<R = any> = Record<string, FormProp<R>[]>;\nexport type EditFormPropContributorCallback<R = any> = PropContributorCallback<FormPropList<R>>;\nexport type EditFormPropContributorCallbacks<R = any> = PropContributorCallbacks<FormPropList<R>>;\n\nfunction isFalsyValue(defaultValue: FormProp['defaultValue']): boolean {\n  return [0, '', false].indexOf(defaultValue as any) > -1;\n}\n","/* tslint:disable:variable-name */\nimport { Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\nimport {\n  Action,\n  ActionContributorCallback,\n  ActionContributorCallbacks,\n  ActionList,\n  Actions,\n  ActionsFactory,\n} from './actions';\n\nexport class ToolbarActionList<R = any> extends ActionList<\n  R,\n  ToolbarAction<R> | ToolbarComponent<R>\n> {}\n\nexport class ToolbarActions<R = any> extends Actions<ToolbarActionList<R>> {\n  protected _ctor: Type<ToolbarActionList<R>> = ToolbarActionList;\n}\n\nexport class ToolbarActionsFactory<R = any> extends ActionsFactory<ToolbarActions<R>> {\n  protected _ctor: Type<ToolbarActions<R>> = ToolbarActions;\n}\n\nexport class ToolbarAction<R = any> extends Action<R> {\n  readonly text: string;\n  readonly icon: string;\n\n  constructor(options: ToolbarActionOptions<R>) {\n    super(options.permission, options.visible, options.action);\n    this.text = options.text;\n    this.icon = options.icon || '';\n  }\n\n  static create<R = any>(options: ToolbarActionOptions<R>) {\n    return new ToolbarAction<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: ToolbarActionOptions<R>[]) {\n    return arrayOfOptions.map(ToolbarAction.create);\n  }\n}\n\nexport class ToolbarComponent<R = any> extends Action<R> {\n  readonly component: Type<any>;\n\n  constructor(options: ToolbarComponentOptions<R>) {\n    super(options.permission, options.visible, options.action);\n    this.component = options.component;\n  }\n\n  static create<R = any>(options: ToolbarComponentOptions<R>) {\n    return new ToolbarComponent<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: ToolbarComponentOptions<R>[]) {\n    return arrayOfOptions.map(ToolbarComponent.create);\n  }\n}\n\nexport type ToolbarActionOptions<R = any> = O.Optional<\n  O.Writable<ToolbarAction<R>>,\n  'permission' | 'visible' | 'icon'\n>;\n\nexport type ToolbarComponentOptions<R = any> = O.Optional<\n  O.Writable<ToolbarComponent<R>>,\n  'permission' | 'visible' | 'action'\n>;\n\nexport type ToolbarActionDefaults<R = any> = Record<string, ToolbarAction<R>[]>;\nexport type ToolbarActionContributorCallback<R = any> = ActionContributorCallback<\n  ToolbarActionList<R>\n>;\nexport type ToolbarActionContributorCallbacks<R = any> = ActionContributorCallbacks<\n  ToolbarActionList<R>\n>;\n","import { Injectable } from '@angular/core';\nimport { EntityActionsFactory } from '../models/entity-actions';\nimport { EntityPropsFactory } from '../models/entity-props';\nimport { CreateFormPropsFactory, EditFormPropsFactory } from '../models/form-props';\nimport { ToolbarActionsFactory } from '../models/toolbar-actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExtensionsService<R = any> {\n  readonly entityActions = new EntityActionsFactory<R>();\n  readonly toolbarActions = new ToolbarActionsFactory<R[]>();\n  readonly entityProps = new EntityPropsFactory<R>();\n  readonly createFormProps = new CreateFormPropsFactory<R>();\n  readonly editFormProps = new EditFormPropsFactory<R>();\n}\n","import { InjectionToken } from '@angular/core';\nimport { ActionCallback, ReadonlyActionData as ActionData } from '../models/actions';\nimport { ExtensionsService } from '../services/extensions.service';\n\nexport const EXTENSIONS_IDENTIFIER = new InjectionToken<string>('EXTENSIONS_IDENTIFIER');\nexport type ActionKeys = Extract<'entityActions' | 'toolbarActions', keyof ExtensionsService>;\n\nexport const EXTENSIONS_ACTION_TYPE = new InjectionToken<ActionKeys>('EXTENSIONS_ACTION_TYPE');\n\nexport const EXTENSIONS_ACTION_DATA = new InjectionToken<ActionData>('EXTENSIONS_ACTION_DATA');\nexport const EXTENSIONS_ACTION_CALLBACK = new InjectionToken<ActionCallback<unknown>>(\n  'EXTENSIONS_ACTION_DATA',\n);\n","import { TrackByService } from '@abp/ng.core';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Input,\n  Optional,\n  QueryList,\n  SkipSelf,\n  ViewChildren,\n} from '@angular/core';\nimport { ControlContainer, FormGroup } from '@angular/forms';\nimport { EXTRA_PROPERTIES_KEY } from '../../constants/extra-properties';\nimport { FormPropList } from '../../models/form-props';\nimport { ExtensionsService } from '../../services/extensions.service';\nimport { EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';\nimport { selfFactory } from '../../utils/factory.util';\nimport { ExtensibleFormPropComponent } from './extensible-form-prop.component';\n\n@Component({\n  exportAs: 'abpExtensibleForm',\n  selector: 'abp-extensible-form',\n  templateUrl: './extensible-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n    },\n  ],\n})\nexport class ExtensibleFormComponent<R = any> {\n  @ViewChildren(ExtensibleFormPropComponent)\n  formProps: QueryList<ExtensibleFormPropComponent>;\n\n  @Input()\n  set selectedRecord(record: R) {\n    const type = !record || JSON.stringify(record) === '{}' ? 'create' : 'edit';\n    this.propList = this.extensions[`${type}FormProps`].get(this.identifier).props;\n    this.record = record;\n  }\n\n  extraPropertiesKey = EXTRA_PROPERTIES_KEY;\n  propList: FormPropList<R>;\n  record: R;\n\n  get form(): FormGroup {\n    return (this.container ? this.container.control : { controls: {} }) as FormGroup;\n  }\n\n  get extraProperties(): FormGroup {\n    return (this.form.controls.extraProperties || { controls: {} }) as FormGroup;\n  }\n\n  constructor(\n    public readonly cdRef: ChangeDetectorRef,\n    public readonly track: TrackByService,\n    private container: ControlContainer,\n    private extensions: ExtensionsService,\n    @Inject(EXTENSIONS_IDENTIFIER) private identifier: string,\n  ) {}\n}\n","import {\n  ListService,\n  ConfigStateService,\n  getShortDateFormat,\n  getShortDateShortTimeFormat,\n  getShortTimeFormat,\n} from '@abp/ng.core';\nimport { formatDate } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Injector,\n  Input,\n  LOCALE_ID,\n  TemplateRef,\n  TrackByFunction,\n  Type,\n  InjectionToken,\n  InjectFlags,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ePropType } from '../../enums/props.enum';\nimport { EntityProp, EntityPropList } from '../../models/entity-props';\nimport { PropData } from '../../models/props';\nimport { ExtensionsService } from '../../services/extensions.service';\nimport { EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';\nimport { EntityActionList } from '../../models/entity-actions';\nconst DEFAULT_ACTIONS_COLUMN_WIDTH = 150;\n\n@Component({\n  exportAs: 'abpExtensibleTable',\n  selector: 'abp-extensible-table',\n  templateUrl: './extensible-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExtensibleTableComponent<R = any> implements OnChanges {\n  protected _actionsText: string;\n  @Input()\n  set actionsText(value: string) {\n    this._actionsText = value;\n  }\n  get actionsText(): string {\n    return this._actionsText ?? (this.actionList.length > 1 ? 'AbpUi::Actions' : '');\n  }\n\n  @Input() data: R[];\n  @Input() list: ListService;\n  @Input() recordsTotal: number;\n  @Input() set actionsColumnWidth(width: number) {\n    this.setColumnWidths(width ? Number(width) : undefined);\n  }\n  @Input() actionsTemplate: TemplateRef<any>;\n\n  getInjected: <T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags) => T;\n\n  readonly columnWidths: number[];\n\n  readonly propList: EntityPropList<R>;\n\n  readonly actionList: EntityActionList<R>;\n\n  readonly trackByFn: TrackByFunction<EntityProp<R>> = (_, item) => item.name;\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private config: ConfigStateService,\n    injector: Injector,\n  ) {\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n    const extensions = injector.get(ExtensionsService);\n    const name = injector.get(EXTENSIONS_IDENTIFIER);\n    this.propList = extensions.entityProps.get(name).props;\n    this.actionList = (extensions['entityActions'].get(name)\n      .actions as unknown) as EntityActionList<R>;\n    this.setColumnWidths(DEFAULT_ACTIONS_COLUMN_WIDTH);\n  }\n\n  private setColumnWidths(actionsColumn: number) {\n    const widths = [actionsColumn];\n    this.propList.forEach(({ value: prop }) => {\n      widths.push(prop.columnWidth);\n    });\n    (this.columnWidths as any) = widths;\n  }\n\n  private getDate(value: Date, format: string) {\n    return value ? formatDate(value, format, this.locale) : '';\n  }\n\n  private getIcon(value: boolean) {\n    return value\n      ? '<div class=\"text-center text-success\"><i class=\"fa fa-check\"></i></div>'\n      : '<div class=\"text-center text-danger\"><i class=\"fa fa-times\"></i></div>';\n  }\n\n  getContent(prop: EntityProp<R>, data: PropData): Observable<string> {\n    return prop.valueResolver(data).pipe(\n      map(value => {\n        switch (prop.type) {\n          case ePropType.Boolean:\n            return this.getIcon(value);\n          case ePropType.Date:\n            return this.getDate(value, getShortDateFormat(this.config));\n          case ePropType.Time:\n            return this.getDate(value, getShortTimeFormat(this.config));\n          case ePropType.DateTime:\n            return this.getDate(value, getShortDateShortTimeFormat(this.config));\n          default:\n            return value;\n          // More types can be handled in the future\n        }\n      }),\n    );\n  }\n\n  ngOnChanges({ data }: SimpleChanges) {\n    if (!data?.currentValue) return;\n\n    this.data = data.currentValue.map((record, index) => {\n      this.propList.forEach(prop => {\n        const propData = { getInjected: this.getInjected, record, index } as any;\n        record[`_${prop.value.name}`] = {\n          visible: prop.value.visible(propData),\n          value: this.getContent(prop.value, propData),\n        };\n      });\n\n      return record;\n    });\n  }\n}\n","import { Directive, Injector, Input } from '@angular/core';\nimport { ActionData, ActionList } from '../../models/actions';\nimport { ExtensionsService } from '../../services/extensions.service';\nimport { EXTENSIONS_ACTION_TYPE, EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';\n\n// tslint:disable: directive-class-suffix\n// Fix for https://github.com/angular/angular/issues/23904\n// @dynamic\n@Directive()\nexport abstract class AbstractActionsComponent<L extends ActionList<any>> extends ActionData<\n  InferredRecord<L>\n> {\n  readonly actionList: L;\n\n  readonly getInjected: InferredData<L>['getInjected'];\n\n  @Input() readonly record: InferredData<L>['record'];\n\n  constructor(injector: Injector) {\n    super();\n\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n    const extensions = injector.get(ExtensionsService);\n    const name = injector.get(EXTENSIONS_IDENTIFIER);\n    const type = injector.get(EXTENSIONS_ACTION_TYPE);\n    this.actionList = (extensions[type].get(name).actions as unknown) as L;\n  }\n}\n\ntype InferredData<L> = ActionData<InferredRecord<L>>;\ntype InferredRecord<L> = L extends ActionList<infer R> ? R : never;\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Injector,\n  Input,\n  TrackByFunction,\n} from '@angular/core';\nimport { EntityAction, EntityActionList } from '../../models/entity-actions';\nimport { EXTENSIONS_ACTION_TYPE } from '../../tokens/extensions.token';\nimport { AbstractActionsComponent } from '../abstract-actions/abstract-actions.component';\n\n@Component({\n  exportAs: 'abpGridActions',\n  selector: 'abp-grid-actions',\n  templateUrl: './grid-actions.component.html',\n  providers: [\n    {\n      provide: EXTENSIONS_ACTION_TYPE,\n      useValue: 'entityActions',\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GridActionsComponent<R = any> extends AbstractActionsComponent<EntityActionList<R>> {\n  @Input() icon = 'fa fa-cog';\n\n  @Input() readonly index: number;\n\n  @Input() text = '';\n\n  readonly trackByFn: TrackByFunction<EntityAction<R>> = (_, item) => item.text;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  TrackByFunction,\n  Type,\n} from '@angular/core';\nimport { ToolbarActionList, ToolbarComponent } from '../../models/toolbar-actions';\nimport {\n  EXTENSIONS_ACTION_CALLBACK,\n  EXTENSIONS_ACTION_DATA,\n  EXTENSIONS_ACTION_TYPE,\n} from '../../tokens/extensions.token';\nimport { AbstractActionsComponent } from '../abstract-actions/abstract-actions.component';\n\n@Component({\n  exportAs: 'abpPageToolbar',\n  selector: 'abp-page-toolbar',\n  templateUrl: './page-toolbar.component.html',\n  providers: [\n    {\n      provide: EXTENSIONS_ACTION_TYPE,\n      useValue: 'toolbarActions',\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageToolbarComponent<R = any> extends AbstractActionsComponent<ToolbarActionList<R>> {\n  readonly trackByFn: TrackByFunction<ToolbarComponent<R>> = (_, item) =>\n    item.action || item.component;\n\n  constructor(private readonly injector: Injector) {\n    super(injector);\n  }\n\n  createInjector(action: ToolbarComponent<R>): Injector {\n    const get = <T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags) => {\n      return token === EXTENSIONS_ACTION_DATA\n        ? this.data\n        : token === EXTENSIONS_ACTION_CALLBACK\n        ? (data = this.data) => action.action(data)\n        : this.getInjected.call(this.injector, token, notFoundValue, flags);\n    };\n\n    return { get };\n  }\n}\n","import { Directive, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[abpDisabled]',\n})\nexport class DisabledDirective implements OnChanges {\n  @Input()\n  abpDisabled: boolean;\n\n  constructor(@Host() private ngControl: NgControl) {}\n\n  // Related issue: https://github.com/angular/angular/issues/35330\n  ngOnChanges({ abpDisabled }: SimpleChanges) {\n    if (this.ngControl.control && abpDisabled) {\n      this.ngControl.control[abpDisabled.currentValue ? 'disable' : 'enable']();\n    }\n  }\n}\n","import {\n  Directive,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { PropData, PropList } from '../models/props';\n\n@Directive({\n  exportAs: 'abpPropData',\n  selector: '[abpPropData]',\n})\nexport class PropDataDirective<L extends PropList<any>> extends PropData<InferredData<L>>\n  implements OnChanges, OnDestroy {\n  /* tslint:disable:no-input-rename */\n  @Input('abpPropDataFromList') readonly propList: L;\n\n  @Input('abpPropDataWithRecord') readonly record: InferredData<L>['record'];\n\n  @Input('abpPropDataAtIndex') readonly index: number;\n  /* tslint:enable:no-input-rename */\n\n  readonly getInjected: InferredData<L>['getInjected'];\n\n  constructor(\n    private tempRef: TemplateRef<any>,\n    private vcRef: ViewContainerRef,\n    injector: Injector,\n  ) {\n    super();\n\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n  }\n\n  ngOnChanges() {\n    this.vcRef.clear();\n\n    this.vcRef.createEmbeddedView(this.tempRef, {\n      $implicit: this.data,\n      index: 0,\n    });\n  }\n\n  ngOnDestroy() {\n    this.vcRef.clear();\n  }\n}\n\ntype InferredData<L> = PropData<InferredRecord<L>>;\ntype InferredRecord<L> = L extends PropList<infer R> ? R : never;\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport {\n  NgbDatepickerModule,\n  NgbDropdownModule,\n  NgbTimepickerModule,\n  NgbTypeaheadModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { DateTimePickerComponent } from './components/date-time-picker/date-time-picker.component';\nimport { ExtensibleFormPropComponent } from './components/extensible-form/extensible-form-prop.component';\nimport { ExtensibleFormComponent } from './components/extensible-form/extensible-form.component';\nimport { ExtensibleTableComponent } from './components/extensible-table/extensible-table.component';\nimport { GridActionsComponent } from './components/grid-actions/grid-actions.component';\nimport { PageToolbarComponent } from './components/page-toolbar/page-toolbar.component';\nimport { DisabledDirective } from './directives/disabled.directive';\nimport { PropDataDirective } from './directives/prop-data.directive';\n\n@NgModule({\n  exports: [\n    DateTimePickerComponent,\n    PageToolbarComponent,\n    GridActionsComponent,\n    ExtensibleFormComponent,\n    ExtensibleTableComponent,\n    PropDataDirective,\n    DisabledDirective,\n  ],\n  declarations: [\n    DateTimePickerComponent,\n    PageToolbarComponent,\n    GridActionsComponent,\n    ExtensibleFormPropComponent,\n    ExtensibleFormComponent,\n    ExtensibleTableComponent,\n    PropDataDirective,\n    DisabledDirective,\n  ],\n  imports: [\n    CoreModule,\n    ThemeSharedModule,\n    NgxValidateCoreModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbTimepickerModule,\n    NgbTypeaheadModule,\n  ],\n})\nexport class BaseUiExtensionsModule {}\n\n@NgModule({\n  exports: [BaseUiExtensionsModule],\n  imports: [BaseUiExtensionsModule],\n})\nexport class UiExtensionsModule {}\n","import { ActionContributorCallback, ActionList, ActionsFactory } from '../models/actions';\nimport {\n  EntityActionContributorCallbacks,\n  EntityActionDefaults,\n  EntityActions,\n  EntityActionsFactory,\n} from '../models/entity-actions';\nimport {\n  ToolbarActionContributorCallbacks,\n  ToolbarActionDefaults,\n  ToolbarActions,\n  ToolbarActionsFactory,\n} from '../models/toolbar-actions';\n\nexport function mergeWithDefaultActions<F extends ActionsFactory<any>>(\n  extension: F,\n  defaultActions: InferredActionDefaults<F>,\n  ...contributors: InferredActionContributorCallbacks<F>[]\n) {\n  Object.keys(defaultActions).forEach((name: string) => {\n    const actions: InferredActions<F> = extension.get(name);\n    actions.clearContributors();\n    actions.addContributor((actionList: ActionList) =>\n      actionList.addManyTail(defaultActions[name]),\n    );\n    contributors.forEach(contributor =>\n      (contributor[name] || []).forEach((callback: ActionContributorCallback<any>) =>\n        actions.addContributor(callback),\n      ),\n    );\n  });\n}\ntype InferredActionDefaults<F> = F extends EntityActionsFactory<infer RE>\n  ? EntityActionDefaults<RE>\n  : F extends ToolbarActionsFactory<infer RT>\n  ? ToolbarActionDefaults<RT>\n  : never;\n\ntype InferredActionContributorCallbacks<F> = F extends EntityActionsFactory<infer RE>\n  ? EntityActionContributorCallbacks<RE>\n  : F extends ToolbarActionsFactory<infer RT>\n  ? ToolbarActionContributorCallbacks<RT>\n  : never;\n\ntype InferredActions<F> = F extends EntityActionsFactory<infer RE>\n  ? EntityActions<RE>\n  : F extends ToolbarActionsFactory<infer RT>\n  ? ToolbarActions<RT>\n  : never;\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { DateTimeAdapter } from '../adapters/date-time.adapter';\nimport { DateAdapter } from '../adapters/date.adapter';\nimport { TimeAdapter } from '../adapters/time.adapter';\nimport { EXTRA_PROPERTIES_KEY } from '../constants/extra-properties';\nimport { ePropType } from '../enums/props.enum';\nimport { FormPropList } from '../models/form-props';\nimport { PropData } from '../models/props';\nimport { ExtensionsService } from '../services/extensions.service';\nimport { EXTENSIONS_IDENTIFIER } from '../tokens/extensions.token';\n\nexport function generateFormFromProps<R extends any>(data: PropData<R>) {\n  const extensions = data.getInjected(ExtensionsService);\n  const identifier = data.getInjected(EXTENSIONS_IDENTIFIER);\n\n  const form = new FormGroup({});\n  const extraForm = new FormGroup({});\n  form.addControl(EXTRA_PROPERTIES_KEY, extraForm);\n\n  const record = data.record || {};\n  const type = JSON.stringify(record) === '{}' ? 'create' : 'edit';\n  const props: FormPropList<R> = extensions[`${type}FormProps`].get(identifier).props;\n  const extraProperties = record[EXTRA_PROPERTIES_KEY] || {};\n\n  props.forEach(({ value: prop }) => {\n    const name = prop.name;\n    const isExtraProperty = prop.isExtra || name in extraProperties;\n    let value = isExtraProperty ? extraProperties[name] : name in record ? record[name] : undefined;\n\n    if (typeof value === 'undefined') value = prop.defaultValue;\n\n    if (value) {\n      let adapter: DateAdapter | TimeAdapter | DateTimeAdapter;\n      switch (prop.type) {\n        case ePropType.Date:\n          adapter = new DateAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n        case ePropType.Time:\n          adapter = new TimeAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n        case ePropType.DateTime:\n          adapter = new DateTimeAdapter();\n          value = adapter.toModel(adapter.fromModel(value) as any);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const formControl = new FormControl(value, {\n      asyncValidators: prop.asyncValidators(data),\n      validators: prop.validators(data),\n    });\n\n    (isExtraProperty ? extraForm : form).addControl(name, formControl);\n  });\n\n  return form;\n}\n","import { of } from 'rxjs';\nimport { EXTRA_PROPERTIES_KEY } from '../constants/extra-properties';\nimport {\n  EntityPropContributorCallbacks,\n  EntityPropDefaults,\n  EntityProps,\n  EntityPropsFactory,\n} from '../models/entity-props';\nimport {\n  CreateFormPropContributorCallbacks,\n  CreateFormPropDefaults,\n  CreateFormPropsFactory,\n  EditFormPropContributorCallbacks,\n  EditFormPropDefaults,\n  EditFormPropsFactory,\n  FormProps,\n} from '../models/form-props';\nimport { PropContributorCallback, PropData, PropList, PropsFactory } from '../models/props';\n\nexport function createExtraPropertyValueResolver<T>(name: string) {\n  return (data?: PropData<T>) => of(data.record[EXTRA_PROPERTIES_KEY][name]);\n}\n\nexport function mergeWithDefaultProps<F extends PropsFactory<any>>(\n  extension: F,\n  defaultProps: InferredPropDefaults<F>,\n  ...contributors: InferredPropContributorCallbacks<F>[]\n) {\n  Object.keys(defaultProps).forEach((name: string) => {\n    const props: InferredProps<F> = extension.get(name);\n    props.clearContributors();\n    props.addContributor((propList: PropList) => propList.addManyTail(defaultProps[name]));\n    contributors.forEach(contributor =>\n      (contributor[name] || []).forEach((callback: PropContributorCallback<any>) =>\n        props.addContributor(callback),\n      ),\n    );\n  });\n}\ntype InferredPropDefaults<F> = F extends EntityPropsFactory<infer RE>\n  ? EntityPropDefaults<RE>\n  : F extends CreateFormPropsFactory<infer RCF>\n  ? CreateFormPropDefaults<RCF>\n  : F extends EditFormPropsFactory<infer REF>\n  ? EditFormPropDefaults<REF>\n  : never;\n\ntype InferredPropContributorCallbacks<F> = F extends EntityPropsFactory<infer RE>\n  ? EntityPropContributorCallbacks<RE>\n  : F extends CreateFormPropsFactory<infer RCF>\n  ? CreateFormPropContributorCallbacks<RCF>\n  : F extends EditFormPropsFactory<infer REF>\n  ? EditFormPropContributorCallbacks<REF>\n  : never;\n\ntype InferredProps<F> = F extends EntityPropsFactory<infer RE>\n  ? EntityProps<RE>\n  : F extends CreateFormPropsFactory<infer RCF>\n  ? FormProps<RCF>\n  : F extends EditFormPropsFactory<infer REF>\n  ? FormProps<REF>\n  : never;\n","import { ABP, LocalizationService } from '@abp/ng.core';\nimport { merge, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EXTRA_PROPERTIES_KEY } from '../constants/extra-properties';\nimport { ObjectExtensions } from '../models/object-extensions';\nimport { PropCallback } from '../models/props';\n\nexport function createEnum(members: ObjectExtensions.ExtensionEnumFieldDto[]) {\n  const enumObject: any = {};\n\n  members.forEach(({ name, value }) => {\n    enumObject[(enumObject[name] = value as any)] = name;\n  });\n\n  return enumObject;\n}\n\nexport function createEnumValueResolver<T = any>(\n  enumType: string,\n  lookupEnum: ObjectExtensions.ExtensionEnumDto,\n  propName: string,\n): PropCallback<T, Observable<string>> {\n  return data => {\n    const value = data.record[EXTRA_PROPERTIES_KEY][propName];\n    const key = lookupEnum.transformed[value];\n    const l10n = data.getInjected(LocalizationService);\n    const localizeEnum = createEnumLocalizer(l10n, enumType, lookupEnum);\n\n    return createLocalizationStream(l10n, localizeEnum(key));\n  };\n}\n\nexport function createEnumOptions<T = any>(\n  enumType: string,\n  lookupEnum: ObjectExtensions.ExtensionEnumDto,\n): PropCallback<T, Observable<ABP.Option<any>[]>> {\n  return data => {\n    const l10n = data.getInjected(LocalizationService);\n    const localizeEnum = createEnumLocalizer(l10n, enumType, lookupEnum);\n\n    return createLocalizationStream(\n      l10n,\n      lookupEnum.fields.map(({ name, value }) => ({\n        key: localizeEnum(name),\n        value,\n      })),\n    );\n  };\n}\n\nfunction createLocalizationStream(l10n: LocalizationService, mapTarget: any) {\n  return merge(of(null), l10n.languageChange$).pipe(map(() => mapTarget));\n}\n\nfunction createEnumLocalizer(\n  l10n: LocalizationService,\n  enumType: string,\n  lookupEnum: ObjectExtensions.ExtensionEnumDto,\n): (key: string) => string {\n  const resource = lookupEnum.localizationResource;\n  const shortType = getShortEnumType(enumType);\n\n  return key =>\n    l10n.localizeWithFallbackSync(\n      [resource],\n      ['Enum:' + shortType + '.' + key, shortType + '.' + key, key],\n      key,\n    );\n}\n\nfunction getShortEnumType(enumType: string): string {\n  return enumType.split('.').pop();\n}\n","import {\n  ApplicationLocalizationConfigurationDto,\n  createLocalizationPipeKeyGenerator,\n} from '@abp/ng.core';\nimport { ObjectExtensions } from '../models/object-extensions';\n\nexport function createDisplayNameLocalizationPipeKeyGenerator(\n  localization: ApplicationLocalizationConfigurationDto,\n) {\n  const generateLocalizationPipeKey = createLocalizationPipeKeyGenerator(localization);\n\n  return (\n    displayName: ObjectExtensions.LocalizableStringDto,\n    fallback: ObjectExtensions.LocalizableStringDto,\n  ) => {\n    if (displayName && displayName.name)\n      return generateLocalizationPipeKey(\n        [displayName.resource],\n        [displayName.name],\n        displayName.name,\n      );\n\n    const key = generateLocalizationPipeKey(\n      [fallback.resource],\n      ['DisplayName:' + fallback.name],\n      undefined,\n    );\n\n    if (key) return key;\n\n    return generateLocalizationPipeKey([fallback.resource], [fallback.name], fallback.name);\n  };\n}\n","import { AbpValidators } from '@abp/ng.core';\nimport { ValidatorFn } from '@angular/forms';\nimport { ObjectExtensions } from '../models/object-extensions';\n\nexport function getValidatorsFromProperty(\n  property: ObjectExtensions.ExtensionPropertyDto,\n): ValidatorFn[] {\n  const validators: ValidatorFn[] = [];\n\n  property.attributes.forEach(attr => {\n    if (attr.typeSimple in AbpValidators)\n      validators.push(AbpValidators[attr.typeSimple](attr.config));\n  });\n\n  return validators;\n}\n","import {\n  ABP,\n  ApplicationLocalizationConfigurationDto,\n  ConfigStateService,\n  ExtensionPropertyUiLookupDto,\n} from '@abp/ng.core';\nimport { Observable, pipe, zip } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { ePropType } from '../enums/props.enum';\nimport { EntityProp, EntityPropList } from '../models/entity-props';\nimport { FormProp, FormPropList } from '../models/form-props';\nimport { ObjectExtensions } from '../models/object-extensions';\nimport { PropCallback } from '../models/props';\nimport { createEnum, createEnumOptions, createEnumValueResolver } from './enum.util';\nimport { createDisplayNameLocalizationPipeKeyGenerator } from './localization.util';\nimport { createExtraPropertyValueResolver } from './props.util';\nimport {\n  createTypeaheadDisplayNameGenerator,\n  createTypeaheadOptions,\n  getTypeaheadType,\n  hasTypeaheadTextSuffix,\n} from './typeahead.util';\nimport { getValidatorsFromProperty } from './validation.util';\n\nfunction selectObjectExtensions(\n  configState: ConfigStateService,\n): Observable<ObjectExtensions.ObjectExtensionsDto> {\n  return configState.getOne$('objectExtensions');\n}\n\nfunction selectLocalization(\n  configState: ConfigStateService,\n): Observable<ApplicationLocalizationConfigurationDto> {\n  return configState.getOne$('localization');\n}\n\nfunction selectEnums(\n  configState: ConfigStateService,\n): Observable<Record<string, ObjectExtensions.ExtensionEnumDto>> {\n  return selectObjectExtensions(configState).pipe(\n    map((extensions: ObjectExtensions.ObjectExtensionsDto) =>\n      Object.keys(extensions.enums).reduce((acc, key) => {\n        const { fields, localizationResource } = extensions.enums[key];\n        acc[key] = {\n          fields,\n          localizationResource,\n          transformed: createEnum(fields),\n        };\n        return acc;\n      }, {} as Record<string, ObjectExtensions.ExtensionEnumDto>),\n    ),\n  );\n}\n\nexport function getObjectExtensionEntitiesFromStore(\n  configState: ConfigStateService,\n  moduleKey: string,\n) {\n  return selectObjectExtensions(configState).pipe(\n    map(extensions => {\n      if (!extensions) return null;\n\n      return (extensions.modules[moduleKey] || ({} as ObjectExtensions.ModuleExtensionDto))\n        .entities;\n    }),\n    map(entities => (isUndefined(entities) ? {} : entities)),\n    filter<ObjectExtensions.EntityExtensions>(Boolean),\n    take(1),\n  );\n}\n\nexport function mapEntitiesToContributors<T = any>(\n  configState: ConfigStateService,\n  resource: string,\n) {\n  return pipe(\n    switchMap(entities =>\n      zip(selectLocalization(configState), selectEnums(configState)).pipe(\n        map(([localization, enums]) => {\n          const generateDisplayName = createDisplayNameLocalizationPipeKeyGenerator(localization);\n\n          return Object.keys(entities).reduce(\n            (acc, key: keyof ObjectExtensions.EntityExtensions) => {\n              acc.prop[key] = [];\n              acc.createForm[key] = [];\n              acc.editForm[key] = [];\n\n              const entity: ObjectExtensions.EntityExtensionDto = entities[key];\n              if (!entity) return acc;\n\n              const properties = entity.properties;\n              if (!properties) return acc;\n\n              const mapPropertiesToContributors = createPropertiesToContributorsMapper<T>(\n                generateDisplayName,\n                resource,\n                enums,\n              );\n\n              return mapPropertiesToContributors(properties, acc, key);\n            },\n            {\n              prop: {},\n              createForm: {},\n              editForm: {},\n            } as ObjectExtensions.PropContributors,\n          );\n        }),\n      ),\n    ),\n    take(1),\n  );\n}\n\nfunction createPropertiesToContributorsMapper<T = any>(\n  generateDisplayName: ObjectExtensions.DisplayNameGeneratorFn,\n  resource: string,\n  enums: Record<string, ObjectExtensions.ExtensionEnumDto>,\n) {\n  return (\n    properties: ObjectExtensions.EntityExtensionProperties,\n    contributors: ObjectExtensions.PropContributors<T>,\n    key: string,\n  ) => {\n    const isExtra = true;\n    const generateTypeaheadDisplayName = createTypeaheadDisplayNameGenerator(\n      generateDisplayName,\n      properties,\n    );\n\n    Object.keys(properties).forEach((name: string) => {\n      const property = properties[name];\n      const propName = name;\n      const lookup = property.ui.lookup || ({} as ExtensionPropertyUiLookupDto);\n      const type = getTypeaheadType(lookup, name) || getTypeFromProperty(property);\n      const generateDN = hasTypeaheadTextSuffix(name)\n        ? generateTypeaheadDisplayName\n        : generateDisplayName;\n      const displayName = generateDN(property.displayName, { name, resource });\n\n      if (property.ui.onTable.isVisible) {\n        const sortable = Boolean(property.ui.onTable.isSortable);\n        const columnWidth = type === ePropType.Boolean ? 150 : 250;\n        const valueResolver =\n          type === ePropType.Enum\n            ? createEnumValueResolver(property.type, enums[property.type], propName)\n            : createExtraPropertyValueResolver<T>(propName);\n\n        const entityProp = new EntityProp<T>({\n          type,\n          name: propName,\n          displayName,\n          sortable,\n          columnWidth,\n          valueResolver,\n          isExtra,\n        });\n\n        const contributor = (propList: EntityPropList<T>) => propList.addTail(entityProp);\n        contributors.prop[key].push(contributor);\n      }\n\n      const isOnCreateForm = property.ui.onCreateForm.isVisible;\n      const isOnEditForm = property.ui.onEditForm.isVisible;\n\n      if (isOnCreateForm || isOnEditForm) {\n        const defaultValue = property.defaultValue;\n        const validators = () => getValidatorsFromProperty(property);\n        let options: PropCallback<any, Observable<ABP.Option<any>[]>>;\n        if (type === ePropType.Enum) options = createEnumOptions(propName, enums[property.type]);\n        else if (type === ePropType.Typeahead) options = createTypeaheadOptions(lookup);\n\n        const formProp = new FormProp({\n          type,\n          name: propName,\n          displayName,\n          options,\n          defaultValue,\n          validators,\n          isExtra,\n        });\n\n        const formContributor = (propList: FormPropList<T>) => propList.addTail(formProp);\n\n        if (isOnCreateForm) contributors.createForm[key].push(formContributor);\n        if (isOnEditForm) contributors.editForm[key].push(formContributor);\n      }\n    });\n\n    return contributors;\n  };\n}\n\nfunction getTypeFromProperty(property: ObjectExtensions.ExtensionPropertyDto): ePropType {\n  return (property.typeSimple.replace(/\\?$/, '') as string) as ePropType;\n}\n\nfunction isUndefined(obj: any): obj is undefined {\n  return typeof obj === 'undefined';\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AbstractActionsComponent as ɵj} from './lib/components/abstract-actions/abstract-actions.component';\nexport {Action as ɵb,ActionData as ɵa,Actions as ɵd,ActionsFactory as ɵc} from './lib/models/actions';\nexport {Prop as ɵf,PropData as ɵe,Props as ɵh,PropsFactory as ɵg} from './lib/models/props';\nexport {selfFactory as ɵi} from './lib/utils/factory.util';"],"names":[],"mappings":"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"}