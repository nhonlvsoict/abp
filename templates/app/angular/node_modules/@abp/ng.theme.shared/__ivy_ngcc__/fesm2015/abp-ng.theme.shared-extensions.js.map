{"version":3,"file":"abp-ng.theme.shared-extensions.js","sources":["../../../packages/theme-shared/extensions/src/lib/adapters/date-time.adapter.ts","../../../packages/theme-shared/extensions/src/lib/adapters/date.adapter.ts","../../../packages/theme-shared/extensions/src/lib/adapters/time.adapter.ts","../../../packages/theme-shared/extensions/src/lib/utils/factory.util.ts","../../../packages/theme-shared/extensions/src/lib/components/date-time-picker/date-time-picker.component.ts","../../../packages/theme-shared/extensions/src/lib/constants/extra-properties.ts","../../../packages/theme-shared/extensions/src/lib/utils/typeahead.util.ts","../../../packages/theme-shared/extensions/src/lib/components/extensible-form/extensible-form-prop.component.ts","../../../packages/theme-shared/extensions/src/lib/models/actions.ts","../../../packages/theme-shared/extensions/src/lib/models/entity-actions.ts","../../../packages/theme-shared/extensions/src/lib/models/props.ts","../../../packages/theme-shared/extensions/src/lib/models/entity-props.ts","../../../packages/theme-shared/extensions/src/lib/models/form-props.ts","../../../packages/theme-shared/extensions/src/lib/models/toolbar-actions.ts","../../../packages/theme-shared/extensions/src/lib/services/extensions.service.ts","../../../packages/theme-shared/extensions/src/lib/tokens/extensions.token.ts","../../../packages/theme-shared/extensions/src/lib/components/extensible-form/extensible-form.component.ts","../../../packages/theme-shared/extensions/src/lib/components/extensible-table/extensible-table.component.ts","../../../packages/theme-shared/extensions/src/lib/components/abstract-actions/abstract-actions.component.ts","../../../packages/theme-shared/extensions/src/lib/components/grid-actions/grid-actions.component.ts","../../../packages/theme-shared/extensions/src/lib/components/page-toolbar/page-toolbar.component.ts","../../../packages/theme-shared/extensions/src/lib/directives/disabled.directive.ts","../../../packages/theme-shared/extensions/src/lib/directives/prop-data.directive.ts","../../../packages/theme-shared/extensions/src/lib/ui-extensions.module.ts","../../../packages/theme-shared/extensions/src/lib/utils/actions.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/form-props.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/props.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/enum.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/localization.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/validation.util.ts","../../../packages/theme-shared/extensions/src/lib/utils/state.util.ts","../../../packages/theme-shared/extensions/src/abp-ng.theme.shared-extensions.ts"],"names":[],"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class DateTimeAdapter {\n  value: NgbDateTimeStruct;\n\n  fromModel(value: string | Date): NgbDateTimeStruct | null {\n    if (!value) return null;\n\n    const date = new Date(value);\n\n    if (isNaN((date as unknown) as number)) return null;\n\n    this.value = {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      second: date.getSeconds(),\n    };\n\n    return this.value;\n  }\n\n  toModel(value: NgbDateTimeStruct | null): string {\n    if (!value) return '';\n\n    const now = new Date();\n\n    value = {\n      year: now.getUTCFullYear(),\n      month: now.getMonth() + 1,\n      day: now.getDate(),\n      hour: 0,\n      minute: 0,\n      second: 0,\n      ...this.value,\n      ...value,\n    };\n\n    const date = new Date(\n      value.year,\n      value.month - 1,\n      value.day,\n      value.hour,\n      value.minute,\n      value.second,\n    );\n\n    return new Date(date).toISOString();\n  }\n}\n\ntype NgbDateTimeStruct = NgbDateStruct & NgbTimeStruct;\n","import { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class DateAdapter extends NgbDateAdapter<string> {\n  fromModel(value: string | Date): NgbDateStruct | null {\n    if (!value) return null;\n\n    const date = new Date(value);\n\n    if (isNaN((date as unknown) as number)) return null;\n\n    return {\n      day: date.getDate(),\n      month: date.getMonth() + 1,\n      year: date.getFullYear(),\n    };\n  }\n\n  toModel(value: NgbDateStruct | null): string {\n    if (!value) return '';\n\n    const date = new Date(value.year, value.month - 1, value.day);\n    const formattedDate = formatDate(date, 'yyyy-MM-dd', 'en');\n\n    return formattedDate;\n  }\n}\n","import { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { NgbTimeAdapter, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\n\n@Injectable()\nexport class TimeAdapter extends NgbTimeAdapter<string> {\n  fromModel(value: string | Date): NgbTimeStruct | null {\n    if (!value) return null;\n\n    const date = isTimeStr(value)\n      ? new Date(0, 0, 1, ...value.split(':').map(Number))\n      : new Date(value);\n\n    if (isNaN((date as unknown) as number)) return null;\n\n    return {\n      hour: date.getHours(),\n      minute: date.getMinutes(),\n      second: date.getSeconds(),\n    };\n  }\n\n  toModel(value: NgbTimeStruct | null): string {\n    if (!value) return '';\n\n    const date = new Date(0, 0, 1, value.hour, value.minute, value.second);\n    const formattedDate = formatDate(date, 'HH:mm', 'en');\n\n    return formattedDate;\n  }\n}\n\nfunction isTimeStr(value: string | Date): value is string {\n  return /^((2[123])|[01][0-9])(\\:[0-5][0-9]){1,2}$/.test(String(value));\n}\n","export function selfFactory(dependency?: any) {\n  return dependency;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Optional,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { ControlContainer } from '@angular/forms';\nimport {\n  NgbDateAdapter,\n  NgbInputDatepicker,\n  NgbTimeAdapter,\n  NgbTimepicker,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { DateTimeAdapter } from '../../adapters/date-time.adapter';\nimport { FormProp } from '../../models/form-props';\nimport { selfFactory } from '../../utils/factory.util';\n\n@Component({\n  exportAs: 'abpDateTimePicker',\n  selector: 'abp-date-time-picker',\n  template: `\n    <input\n      [id]=\"prop.id\"\n      [formControlName]=\"prop.name\"\n      (ngModelChange)=\"setTime($event)\"\n      (click)=\"datepicker.open()\"\n      (keyup.space)=\"datepicker.open()\"\n      ngbDatepicker\n      #datepicker=\"ngbDatepicker\"\n      type=\"text\"\n      class=\"form-control\"\n    />\n    <ngb-timepicker\n      #timepicker\n      [formControlName]=\"prop.name\"\n      (ngModelChange)=\"setDate($event)\"\n      [meridian]=\"meridian\"\n    ></ngb-timepicker>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n    },\n    {\n      provide: NgbDateAdapter,\n      useClass: DateTimeAdapter,\n    },\n    {\n      provide: NgbTimeAdapter,\n      useClass: DateTimeAdapter,\n    },\n  ],\n})\nexport class DateTimePickerComponent {\n  @Input() prop: FormProp;\n  @Input() meridian = false;\n\n  @ViewChild(NgbInputDatepicker) date: NgbInputDatepicker;\n  @ViewChild(NgbTimepicker) time: NgbTimepicker;\n\n  constructor(public readonly cdRef: ChangeDetectorRef) {}\n\n  setDate(datestr: string) {\n    this.date.writeValue(datestr);\n  }\n\n  setTime(datestr: string) {\n    this.time.writeValue(datestr);\n  }\n}\n","export const EXTRA_PROPERTIES_KEY = 'extraProperties';\n","import { ABP, ExtensionPropertyUiLookupDto, RestService } from '@abp/ng.core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ePropType } from '../enums/props.enum';\nimport { ObjectExtensions } from '../models/object-extensions';\nimport { PropCallback } from '../models/props';\n\nconst TYPEAHEAD_TEXT_SUFFIX = '_Text';\nconst TYPEAHEAD_TEXT_SUFFIX_REGEX = /_Text$/;\n\nexport function createTypeaheadOptions(\n  lookup: ExtensionPropertyUiLookupDto,\n): PropCallback<any, Observable<ABP.Option<any>[]>> {\n  return (data, searchText) =>\n    searchText\n      ? data\n          .getInjected(RestService)\n          .request(\n            {\n              method: 'GET',\n              url: lookup.url,\n              params: {\n                [lookup.filterParamName]: searchText,\n              },\n            },\n            { apiName: 'Default' },\n          )\n          .pipe(\n            map(response => {\n              const list = response[lookup.resultListPropertyName];\n              const mapToOption = (item: any) => ({\n                key: item[lookup.displayPropertyName],\n                value: item[lookup.valuePropertyName],\n              });\n              return list.map(mapToOption);\n            }),\n          )\n      : of([]);\n}\n\nexport function getTypeaheadType(lookup: ExtensionPropertyUiLookupDto, name: string) {\n  return Boolean(lookup.url)\n    ? ePropType.Typeahead\n    : name.endsWith(TYPEAHEAD_TEXT_SUFFIX)\n    ? ePropType.Hidden\n    : undefined;\n}\n\nexport function createTypeaheadDisplayNameGenerator(\n  displayNameGeneratorFn: ObjectExtensions.DisplayNameGeneratorFn,\n  properties: ObjectExtensions.EntityExtensionProperties,\n): ObjectExtensions.DisplayNameGeneratorFn {\n  return (displayName, fallback) => {\n    const name = removeTypeaheadTextSuffix(fallback.name);\n    return displayNameGeneratorFn(displayName || properties[name].displayName, {\n      name,\n      resource: fallback.resource,\n    });\n  };\n}\n\nexport function addTypeaheadTextSuffix(name: string) {\n  return name + TYPEAHEAD_TEXT_SUFFIX;\n}\n\nexport function hasTypeaheadTextSuffix(name: string) {\n  return TYPEAHEAD_TEXT_SUFFIX_REGEX.test(name);\n}\n\nexport function removeTypeaheadTextSuffix(name: string) {\n  return name.replace(TYPEAHEAD_TEXT_SUFFIX_REGEX, '');\n}\n","import { ABP, AbpValidators, ConfigStateService, TrackByService } from '@abp/ng.core';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  Optional,\n  SimpleChanges,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ControlContainer,\n  FormGroup,\n  FormGroupDirective,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport { NgbDateAdapter, NgbTimeAdapter } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { DateAdapter } from '../../adapters/date.adapter';\nimport { TimeAdapter } from '../../adapters/time.adapter';\nimport { EXTRA_PROPERTIES_KEY } from '../../constants/extra-properties';\nimport { ePropType } from '../../enums/props.enum';\nimport { FormProp } from '../../models/form-props';\nimport { PropData } from '../../models/props';\nimport { selfFactory } from '../../utils/factory.util';\nimport { addTypeaheadTextSuffix } from '../../utils/typeahead.util';\n\n@Component({\n  selector: 'abp-extensible-form-prop',\n  templateUrl: './extensible-form-prop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n    },\n    { provide: NgbDateAdapter, useClass: DateAdapter },\n    { provide: NgbTimeAdapter, useClass: TimeAdapter },\n  ],\n})\nexport class ExtensibleFormPropComponent implements OnChanges, AfterViewInit {\n  @Input() data: PropData;\n\n  @Input() prop: FormProp;\n\n  @Input() first: boolean;\n\n  @ViewChild('field') private fieldRef: ElementRef<HTMLElement>;\n\n  asterisk = '';\n\n  options$: Observable<ABP.Option<any>[]> = of([]);\n\n  validators: ValidatorFn[] = [];\n\n  readonly: boolean;\n\n  disabled: boolean;\n\n  private readonly form: FormGroup;\n\n  typeaheadModel: any;\n\n  setTypeaheadValue(selectedOption: ABP.Option<string>) {\n    this.typeaheadModel = selectedOption || { key: null, value: null };\n    const { key, value } = this.typeaheadModel;\n    const [keyControl, valueControl] = this.getTypeaheadControls();\n    if (valueControl.value && !value) valueControl.markAsDirty();\n    keyControl.setValue(key);\n    valueControl.setValue(value);\n  }\n\n  search = (text$: Observable<string>) =>\n    text$\n      ? text$.pipe(\n          debounceTime(300),\n          distinctUntilChanged(),\n          switchMap(text => this.prop.options(this.data, text)),\n        )\n      : of([]);\n\n  typeaheadFormatter = (option: ABP.Option<any>) => option.key;\n\n  get meridian() {\n    return (\n      this.configState.getDeep('localization.currentCulture.dateTimeFormat.shortTimePattern') || ''\n    ).includes('tt');\n  }\n\n  get isInvalid() {\n    const control = this.form.get(this.prop.name);\n    return control.touched && control.invalid;\n  }\n\n  constructor(\n    public readonly cdRef: ChangeDetectorRef,\n    public readonly track: TrackByService,\n    protected configState: ConfigStateService,\n    groupDirective: FormGroupDirective,\n  ) {\n    this.form = groupDirective.form;\n  }\n\n  private getTypeaheadControls() {\n    const { name } = this.prop;\n    const extraPropName = `${EXTRA_PROPERTIES_KEY}.${name}`;\n    const keyControl =\n      this.form.get(addTypeaheadTextSuffix(extraPropName)) ||\n      this.form.get(addTypeaheadTextSuffix(name));\n    const valueControl = this.form.get(extraPropName) || this.form.get(name);\n    return [keyControl, valueControl];\n  }\n\n  private setAsterisk() {\n    this.asterisk = this.validators.some(isRequired) ? '*' : '';\n  }\n\n  ngAfterViewInit() {\n    if (this.first && this.fieldRef) {\n      this.fieldRef.nativeElement.focus();\n    }\n  }\n\n  getComponent(prop: FormProp): string {\n    switch (prop.type) {\n      case ePropType.Boolean:\n        return 'checkbox';\n      case ePropType.Date:\n        return 'date';\n      case ePropType.DateTime:\n        return 'dateTime';\n      case ePropType.Hidden:\n        return 'hidden';\n      case ePropType.MultiSelect:\n        return 'multiselect';\n      case ePropType.Text:\n        return 'textarea';\n      case ePropType.Time:\n        return 'time';\n      case ePropType.Typeahead:\n        return 'typeahead';\n      default:\n        return prop.options ? 'select' : 'input';\n    }\n  }\n\n  getType(prop: FormProp): string {\n    switch (prop.type) {\n      case ePropType.Date:\n      case ePropType.String:\n        return 'text';\n      case ePropType.Boolean:\n        return 'checkbox';\n      case ePropType.Number:\n        return 'number';\n      case ePropType.Email:\n        return 'email';\n      case ePropType.Password:\n        return 'password';\n      default:\n        return 'hidden';\n    }\n  }\n\n  ngOnChanges({ prop }: SimpleChanges) {\n    const currentProp = snq<FormProp>(() => prop.currentValue);\n    const { options, readonly, disabled, validators } = currentProp || {};\n\n    if (options) this.options$ = options(this.data);\n    if (readonly) this.readonly = readonly(this.data);\n    if (disabled) this.disabled = disabled(this.data);\n    if (validators) {\n      this.validators = validators(this.data);\n      this.setAsterisk();\n    }\n\n    const [keyControl, valueControl] = this.getTypeaheadControls();\n    if (keyControl && valueControl)\n      this.typeaheadModel = { key: keyControl.value, value: valueControl.value };\n  }\n}\n\nfunction isRequired(validator: ValidatorFn) {\n  return validator === Validators.required || validator === AbpValidators.required;\n}\n","/* tslint:disable:variable-name */\nimport { LinkedList } from '@abp/utils';\nimport { InjectFlags, InjectionToken, Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\n\nexport abstract class ActionList<R = any, A = Action<R>> extends LinkedList<A> {}\n\nexport abstract class ActionData<R = any> {\n  abstract getInjected: <T>(\n    token: Type<T> | InjectionToken<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags,\n  ) => T;\n  index?: number;\n  abstract record: R;\n\n  get data(): ReadonlyActionData<R> {\n    return {\n      getInjected: this.getInjected,\n      index: this.index,\n      record: this.record,\n    };\n  }\n}\n\nexport type ReadonlyActionData<R = any> = O.Readonly<Omit<ActionData<R>, 'data'>>;\n\nexport abstract class Action<R = any> {\n  constructor(\n    public readonly permission: string,\n    public readonly visible: ActionPredicate<R> = _ => true,\n    public readonly action: ActionCallback<R> = _ => {},\n  ) {}\n}\n\nexport type ActionCallback<T, R = any> = (data?: Omit<ActionData<T>, 'data'>) => R;\nexport type ActionPredicate<T> = (data?: Omit<ActionData<T>, 'data'>) => boolean;\n\nexport abstract class ActionsFactory<C extends Actions<any>> {\n  protected abstract _ctor: Type<C>;\n  private contributorCallbacks: ActionContributorCallbacks<InferredActionList<C>> = {};\n\n  get(name: string): C {\n    this.contributorCallbacks[name] = this.contributorCallbacks[name] || [];\n\n    return new this._ctor(this.contributorCallbacks[name]);\n  }\n}\n\nexport abstract class Actions<L extends ActionList> {\n  protected abstract _ctor: Type<L>;\n\n  get actions(): L {\n    const actionList = new this._ctor();\n\n    this.callbackList.forEach(callback => callback(actionList));\n\n    return actionList;\n  }\n\n  constructor(private readonly callbackList: ActionContributorCallback<L>[]) {}\n\n  addContributor(contributeCallback: ActionContributorCallback<L>) {\n    this.callbackList.push(contributeCallback);\n  }\n\n  clearContributors() {\n    while (this.callbackList.length) this.callbackList.pop();\n  }\n}\n\nexport type ActionContributorCallbacks<L extends ActionList<any>> = Record<\n  string,\n  ActionContributorCallback<L>[]\n>;\n\nexport type ActionContributorCallback<L extends ActionList<any>> = (actionList: L) => any;\n\ntype InferredActionList<C> = C extends Actions<infer L> ? L : never;\n","/* tslint:disable:variable-name */\nimport { Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\nimport {\n  Action,\n  ActionContributorCallback,\n  ActionContributorCallbacks,\n  ActionList,\n  Actions,\n  ActionsFactory,\n} from './actions';\n\nexport class EntityActionList<R = any> extends ActionList<R, EntityAction<R>> {}\n\nexport class EntityActions<R = any> extends Actions<EntityActionList<R>> {\n  protected _ctor: Type<EntityActionList<R>> = EntityActionList;\n}\n\nexport class EntityActionsFactory<R = any> extends ActionsFactory<EntityActions<R>> {\n  protected _ctor: Type<EntityActions<R>> = EntityActions;\n}\n\nexport class EntityAction<R = any> extends Action<R> {\n  readonly text: string;\n  readonly icon: string;\n\n  constructor(options: EntityActionOptions<R>) {\n    super(options.permission, options.visible, options.action);\n    this.text = options.text;\n    this.icon = options.icon || '';\n  }\n\n  static create<R = any>(options: EntityActionOptions<R>) {\n    return new EntityAction<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: EntityActionOptions<R>[]) {\n    return arrayOfOptions.map(EntityAction.create);\n  }\n}\n\nexport type EntityActionOptions<R = any> = O.Optional<\n  O.Writable<EntityAction<R>>,\n  'permission' | 'visible' | 'icon'\n>;\n\nexport type EntityActionDefaults<R = any> = Record<string, EntityAction<R>[]>;\nexport type EntityActionContributorCallback<R = any> = ActionContributorCallback<\n  EntityActionList<R>\n>;\nexport type EntityActionContributorCallbacks<R = any> = ActionContributorCallbacks<\n  EntityActionList<R>\n>;\n","/* tslint:disable:variable-name */\nimport { LinkedList } from '@abp/utils';\nimport { InjectFlags, InjectionToken, Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\nimport { ePropType } from '../enums/props.enum';\n\nexport abstract class PropList<R = any, A = Prop<R>> extends LinkedList<A> {}\n\nexport abstract class PropData<R = any> {\n  abstract getInjected: <T>(\n    token: Type<T> | InjectionToken<T>,\n    notFoundValue?: T,\n    flags?: InjectFlags,\n  ) => T;\n  index?: number;\n  abstract record: R;\n\n  get data(): ReadonlyPropData<R> {\n    return {\n      getInjected: this.getInjected,\n      index: this.index,\n      record: this.record,\n    };\n  }\n}\n\nexport type ReadonlyPropData<R = any> = O.Readonly<Omit<PropData<R>, 'data'>>;\n\nexport abstract class Prop<R = any> {\n  constructor(\n    public readonly type: ePropType,\n    public readonly name: string,\n    public readonly displayName: string,\n    public readonly permission: string,\n    public readonly visible: PropPredicate<R> = _ => true,\n    public readonly isExtra = false,\n  ) {\n    this.displayName = this.displayName || this.name;\n  }\n}\n\nexport type PropCallback<T, R = any> = (data?: Omit<PropData<T>, 'data'>, auxData?: any) => R;\nexport type PropPredicate<T> = (data?: Omit<PropData<T>, 'data'>, auxData?: any) => boolean;\n\nexport abstract class PropsFactory<C extends Props<any>> {\n  protected abstract _ctor: Type<C>;\n  private contributorCallbacks: PropContributorCallbacks<InferredPropList<C>> = {};\n\n  get(name: string): C {\n    this.contributorCallbacks[name] = this.contributorCallbacks[name] || [];\n\n    return new this._ctor(this.contributorCallbacks[name]);\n  }\n}\n\nexport abstract class Props<L extends PropList> {\n  protected abstract _ctor: Type<L>;\n\n  get props(): L {\n    const propList = new this._ctor();\n\n    this.callbackList.forEach(callback => callback(propList));\n\n    return propList;\n  }\n\n  constructor(private readonly callbackList: PropContributorCallback<L>[]) {}\n\n  addContributor(contributeCallback: PropContributorCallback<L>) {\n    this.callbackList.push(contributeCallback);\n  }\n\n  clearContributors() {\n    while (this.callbackList.length) this.callbackList.pop();\n  }\n}\n\nexport type PropContributorCallbacks<L extends PropList<any>> = Record<\n  string,\n  PropContributorCallback<L>[]\n>;\n\nexport type PropContributorCallback<L extends PropList<any>> = (propList: L) => any;\n\ntype InferredPropList<C> = C extends Props<infer L> ? L : never;\n","/* tslint:disable:variable-name */\nimport { Type } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { O } from 'ts-toolbelt';\nimport {\n  Prop,\n  PropCallback,\n  PropContributorCallback,\n  PropContributorCallbacks,\n  PropList,\n  Props,\n  PropsFactory,\n} from './props';\nimport { ActionCallback } from './actions';\n\nexport class EntityPropList<R = any> extends PropList<R, EntityProp<R>> {}\n\nexport class EntityProps<R = any> extends Props<EntityPropList<R>> {\n  protected _ctor: Type<EntityPropList<R>> = EntityPropList;\n}\n\nexport class EntityPropsFactory<R = any> extends PropsFactory<EntityProps<R>> {\n  protected _ctor: Type<EntityProps<R>> = EntityProps;\n}\n\nexport class EntityProp<R = any> extends Prop<R> {\n  readonly columnWidth: number | undefined;\n  readonly sortable: boolean;\n  readonly valueResolver: PropCallback<R, Observable<any>>;\n  readonly action: ActionCallback<R>;\n\n  constructor(options: EntityPropOptions<R>) {\n    super(\n      options.type,\n      options.name,\n      options.displayName,\n      options.permission,\n      options.visible,\n      options.isExtra,\n    );\n\n    this.columnWidth = options.columnWidth;\n    this.sortable = options.sortable || false;\n    this.valueResolver = options.valueResolver || (data => of(data.record[this.name]));\n    this.action = options.action;\n  }\n\n  static create<R = any>(options: EntityPropOptions<R>) {\n    return new EntityProp<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: EntityPropOptions<R>[]) {\n    return arrayOfOptions.map(EntityProp.create);\n  }\n}\n\nexport type EntityPropOptions<R = any> = O.Optional<\n  O.Writable<EntityProp<R>>,\n  | 'permission'\n  | 'visible'\n  | 'displayName'\n  | 'isExtra'\n  | 'columnWidth'\n  | 'sortable'\n  | 'valueResolver'\n  | 'action'\n>;\n\nexport type EntityPropDefaults<R = any> = Record<string, EntityProp<R>[]>;\nexport type EntityPropContributorCallback<R = any> = PropContributorCallback<EntityPropList<R>>;\nexport type EntityPropContributorCallbacks<R = any> = PropContributorCallbacks<EntityPropList<R>>;\n","/* tslint:disable:variable-name */\nimport { ABP } from '@abp/ng.core';\nimport { Injector, Type } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { O } from 'ts-toolbelt';\nimport {\n  Prop,\n  PropCallback,\n  PropContributorCallback,\n  PropContributorCallbacks,\n  PropData,\n  PropList,\n  PropPredicate,\n  Props,\n  PropsFactory,\n} from './props';\n\nexport class FormPropList<R = any> extends PropList<R, FormProp<R>> {}\n\nexport class FormProps<R = any> extends Props<FormPropList<R>> {\n  protected _ctor: Type<FormPropList<R>> = FormPropList;\n}\n\nexport class CreateFormPropsFactory<R = any> extends PropsFactory<FormProps<R>> {\n  protected _ctor: Type<FormProps<R>> = FormProps;\n}\n\nexport class EditFormPropsFactory<R = any> extends PropsFactory<FormProps<R>> {\n  protected _ctor: Type<FormProps<R>> = FormProps;\n}\n\nexport class FormProp<R = any> extends Prop<R> {\n  readonly validators: PropCallback<R, ValidatorFn[]>;\n  readonly asyncValidators: PropCallback<R, AsyncValidatorFn[]>;\n  readonly disabled: PropPredicate<R>;\n  readonly readonly: PropPredicate<R>;\n  readonly autocomplete: string;\n  readonly defaultValue: boolean | number | string | Date;\n  readonly options: PropCallback<R, Observable<ABP.Option<any>[]>> | undefined;\n  readonly id: string | undefined;\n\n  constructor(options: FormPropOptions<R>) {\n    super(\n      options.type,\n      options.name,\n      options.displayName,\n      options.permission,\n      options.visible,\n      options.isExtra,\n    );\n\n    this.asyncValidators = options.asyncValidators || (_ => []);\n    this.validators = options.validators || (_ => []);\n    this.disabled = options.disabled || (_ => false);\n    this.readonly = options.readonly || (_ => false);\n    this.autocomplete = options.autocomplete || 'off';\n    this.options = options.options;\n    this.id = options.id || options.name;\n    const defaultValue = options.defaultValue;\n    this.defaultValue = isFalsyValue(defaultValue) ? defaultValue : defaultValue || null;\n  }\n\n  static create<R = any>(options: FormPropOptions<R>) {\n    return new FormProp<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: FormPropOptions<R>[]) {\n    return arrayOfOptions.map(FormProp.create);\n  }\n}\n\nexport class FormPropData<R = any> extends PropData<R> {\n  getInjected: PropData<R>['getInjected'];\n\n  constructor(injector: Injector, public readonly record: R) {\n    super();\n\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n  }\n}\n\nexport type FormPropOptions<R = any> = O.Optional<\n  O.Writable<FormProp<R>>,\n  | 'permission'\n  | 'visible'\n  | 'displayName'\n  | 'isExtra'\n  | 'validators'\n  | 'asyncValidators'\n  | 'disabled'\n  | 'readonly'\n  | 'autocomplete'\n  | 'defaultValue'\n  | 'options'\n  | 'id'\n>;\n\nexport type CreateFormPropDefaults<R = any> = Record<string, FormProp<R>[]>;\nexport type CreateFormPropContributorCallback<R = any> = PropContributorCallback<FormPropList<R>>;\nexport type CreateFormPropContributorCallbacks<R = any> = PropContributorCallbacks<FormPropList<R>>;\nexport type EditFormPropDefaults<R = any> = Record<string, FormProp<R>[]>;\nexport type EditFormPropContributorCallback<R = any> = PropContributorCallback<FormPropList<R>>;\nexport type EditFormPropContributorCallbacks<R = any> = PropContributorCallbacks<FormPropList<R>>;\n\nfunction isFalsyValue(defaultValue: FormProp['defaultValue']): boolean {\n  return [0, '', false].indexOf(defaultValue as any) > -1;\n}\n","/* tslint:disable:variable-name */\nimport { Type } from '@angular/core';\nimport { O } from 'ts-toolbelt';\nimport {\n  Action,\n  ActionContributorCallback,\n  ActionContributorCallbacks,\n  ActionList,\n  Actions,\n  ActionsFactory,\n} from './actions';\n\nexport class ToolbarActionList<R = any> extends ActionList<\n  R,\n  ToolbarAction<R> | ToolbarComponent<R>\n> {}\n\nexport class ToolbarActions<R = any> extends Actions<ToolbarActionList<R>> {\n  protected _ctor: Type<ToolbarActionList<R>> = ToolbarActionList;\n}\n\nexport class ToolbarActionsFactory<R = any> extends ActionsFactory<ToolbarActions<R>> {\n  protected _ctor: Type<ToolbarActions<R>> = ToolbarActions;\n}\n\nexport class ToolbarAction<R = any> extends Action<R> {\n  readonly text: string;\n  readonly icon: string;\n\n  constructor(options: ToolbarActionOptions<R>) {\n    super(options.permission, options.visible, options.action);\n    this.text = options.text;\n    this.icon = options.icon || '';\n  }\n\n  static create<R = any>(options: ToolbarActionOptions<R>) {\n    return new ToolbarAction<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: ToolbarActionOptions<R>[]) {\n    return arrayOfOptions.map(ToolbarAction.create);\n  }\n}\n\nexport class ToolbarComponent<R = any> extends Action<R> {\n  readonly component: Type<any>;\n\n  constructor(options: ToolbarComponentOptions<R>) {\n    super(options.permission, options.visible, options.action);\n    this.component = options.component;\n  }\n\n  static create<R = any>(options: ToolbarComponentOptions<R>) {\n    return new ToolbarComponent<R>(options);\n  }\n\n  static createMany<R = any>(arrayOfOptions: ToolbarComponentOptions<R>[]) {\n    return arrayOfOptions.map(ToolbarComponent.create);\n  }\n}\n\nexport type ToolbarActionOptions<R = any> = O.Optional<\n  O.Writable<ToolbarAction<R>>,\n  'permission' | 'visible' | 'icon'\n>;\n\nexport type ToolbarComponentOptions<R = any> = O.Optional<\n  O.Writable<ToolbarComponent<R>>,\n  'permission' | 'visible' | 'action'\n>;\n\nexport type ToolbarActionDefaults<R = any> = Record<string, ToolbarAction<R>[]>;\nexport type ToolbarActionContributorCallback<R = any> = ActionContributorCallback<\n  ToolbarActionList<R>\n>;\nexport type ToolbarActionContributorCallbacks<R = any> = ActionContributorCallbacks<\n  ToolbarActionList<R>\n>;\n","import { Injectable } from '@angular/core';\nimport { EntityActionsFactory } from '../models/entity-actions';\nimport { EntityPropsFactory } from '../models/entity-props';\nimport { CreateFormPropsFactory, EditFormPropsFactory } from '../models/form-props';\nimport { ToolbarActionsFactory } from '../models/toolbar-actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExtensionsService<R = any> {\n  readonly entityActions = new EntityActionsFactory<R>();\n  readonly toolbarActions = new ToolbarActionsFactory<R[]>();\n  readonly entityProps = new EntityPropsFactory<R>();\n  readonly createFormProps = new CreateFormPropsFactory<R>();\n  readonly editFormProps = new EditFormPropsFactory<R>();\n}\n","import { InjectionToken } from '@angular/core';\nimport { ActionCallback, ReadonlyActionData as ActionData } from '../models/actions';\nimport { ExtensionsService } from '../services/extensions.service';\n\nexport const EXTENSIONS_IDENTIFIER = new InjectionToken<string>('EXTENSIONS_IDENTIFIER');\nexport type ActionKeys = Extract<'entityActions' | 'toolbarActions', keyof ExtensionsService>;\n\nexport const EXTENSIONS_ACTION_TYPE = new InjectionToken<ActionKeys>('EXTENSIONS_ACTION_TYPE');\n\nexport const EXTENSIONS_ACTION_DATA = new InjectionToken<ActionData>('EXTENSIONS_ACTION_DATA');\nexport const EXTENSIONS_ACTION_CALLBACK = new InjectionToken<ActionCallback<unknown>>(\n  'EXTENSIONS_ACTION_DATA',\n);\n","import { TrackByService } from '@abp/ng.core';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  Input,\n  Optional,\n  QueryList,\n  SkipSelf,\n  ViewChildren,\n} from '@angular/core';\nimport { ControlContainer, FormGroup } from '@angular/forms';\nimport { EXTRA_PROPERTIES_KEY } from '../../constants/extra-properties';\nimport { FormPropList } from '../../models/form-props';\nimport { ExtensionsService } from '../../services/extensions.service';\nimport { EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';\nimport { selfFactory } from '../../utils/factory.util';\nimport { ExtensibleFormPropComponent } from './extensible-form-prop.component';\n\n@Component({\n  exportAs: 'abpExtensibleForm',\n  selector: 'abp-extensible-form',\n  templateUrl: './extensible-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  viewProviders: [\n    {\n      provide: ControlContainer,\n      useFactory: selfFactory,\n      deps: [[new Optional(), new SkipSelf(), ControlContainer]],\n    },\n  ],\n})\nexport class ExtensibleFormComponent<R = any> {\n  @ViewChildren(ExtensibleFormPropComponent)\n  formProps: QueryList<ExtensibleFormPropComponent>;\n\n  @Input()\n  set selectedRecord(record: R) {\n    const type = !record || JSON.stringify(record) === '{}' ? 'create' : 'edit';\n    this.propList = this.extensions[`${type}FormProps`].get(this.identifier).props;\n    this.record = record;\n  }\n\n  extraPropertiesKey = EXTRA_PROPERTIES_KEY;\n  propList: FormPropList<R>;\n  record: R;\n\n  get form(): FormGroup {\n    return (this.container ? this.container.control : { controls: {} }) as FormGroup;\n  }\n\n  get extraProperties(): FormGroup {\n    return (this.form.controls.extraProperties || { controls: {} }) as FormGroup;\n  }\n\n  constructor(\n    public readonly cdRef: ChangeDetectorRef,\n    public readonly track: TrackByService,\n    private container: ControlContainer,\n    private extensions: ExtensionsService,\n    @Inject(EXTENSIONS_IDENTIFIER) private identifier: string,\n  ) {}\n}\n","import {\n  ListService,\n  ConfigStateService,\n  getShortDateFormat,\n  getShortDateShortTimeFormat,\n  getShortTimeFormat,\n} from '@abp/ng.core';\nimport { formatDate } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Injector,\n  Input,\n  LOCALE_ID,\n  TemplateRef,\n  TrackByFunction,\n  Type,\n  InjectionToken,\n  InjectFlags,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ePropType } from '../../enums/props.enum';\nimport { EntityProp, EntityPropList } from '../../models/entity-props';\nimport { PropData } from '../../models/props';\nimport { ExtensionsService } from '../../services/extensions.service';\nimport { EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';\nimport { EntityActionList } from '../../models/entity-actions';\nconst DEFAULT_ACTIONS_COLUMN_WIDTH = 150;\n\n@Component({\n  exportAs: 'abpExtensibleTable',\n  selector: 'abp-extensible-table',\n  templateUrl: './extensible-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExtensibleTableComponent<R = any> implements OnChanges {\n  protected _actionsText: string;\n  @Input()\n  set actionsText(value: string) {\n    this._actionsText = value;\n  }\n  get actionsText(): string {\n    return this._actionsText ?? (this.actionList.length > 1 ? 'AbpUi::Actions' : '');\n  }\n\n  @Input() data: R[];\n  @Input() list: ListService;\n  @Input() recordsTotal: number;\n  @Input() set actionsColumnWidth(width: number) {\n    this.setColumnWidths(width ? Number(width) : undefined);\n  }\n  @Input() actionsTemplate: TemplateRef<any>;\n\n  getInjected: <T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags) => T;\n\n  readonly columnWidths: number[];\n\n  readonly propList: EntityPropList<R>;\n\n  readonly actionList: EntityActionList<R>;\n\n  readonly trackByFn: TrackByFunction<EntityProp<R>> = (_, item) => item.name;\n\n  constructor(\n    @Inject(LOCALE_ID) private locale: string,\n    private config: ConfigStateService,\n    injector: Injector,\n  ) {\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n    const extensions = injector.get(ExtensionsService);\n    const name = injector.get(EXTENSIONS_IDENTIFIER);\n    this.propList = extensions.entityProps.get(name).props;\n    this.actionList = (extensions['entityActions'].get(name)\n      .actions as unknown) as EntityActionList<R>;\n    this.setColumnWidths(DEFAULT_ACTIONS_COLUMN_WIDTH);\n  }\n\n  private setColumnWidths(actionsColumn: number) {\n    const widths = [actionsColumn];\n    this.propList.forEach(({ value: prop }) => {\n      widths.push(prop.columnWidth);\n    });\n    (this.columnWidths as any) = widths;\n  }\n\n  private getDate(value: Date, format: string) {\n    return value ? formatDate(value, format, this.locale) : '';\n  }\n\n  private getIcon(value: boolean) {\n    return value\n      ? '<div class=\"text-center text-success\"><i class=\"fa fa-check\"></i></div>'\n      : '<div class=\"text-center text-danger\"><i class=\"fa fa-times\"></i></div>';\n  }\n\n  getContent(prop: EntityProp<R>, data: PropData): Observable<string> {\n    return prop.valueResolver(data).pipe(\n      map(value => {\n        switch (prop.type) {\n          case ePropType.Boolean:\n            return this.getIcon(value);\n          case ePropType.Date:\n            return this.getDate(value, getShortDateFormat(this.config));\n          case ePropType.Time:\n            return this.getDate(value, getShortTimeFormat(this.config));\n          case ePropType.DateTime:\n            return this.getDate(value, getShortDateShortTimeFormat(this.config));\n          default:\n            return value;\n          // More types can be handled in the future\n        }\n      }),\n    );\n  }\n\n  ngOnChanges({ data }: SimpleChanges) {\n    if (!data?.currentValue) return;\n\n    this.data = data.currentValue.map((record, index) => {\n      this.propList.forEach(prop => {\n        const propData = { getInjected: this.getInjected, record, index } as any;\n        record[`_${prop.value.name}`] = {\n          visible: prop.value.visible(propData),\n          value: this.getContent(prop.value, propData),\n        };\n      });\n\n      return record;\n    });\n  }\n}\n","import { Directive, Injector, Input } from '@angular/core';\nimport { ActionData, ActionList } from '../../models/actions';\nimport { ExtensionsService } from '../../services/extensions.service';\nimport { EXTENSIONS_ACTION_TYPE, EXTENSIONS_IDENTIFIER } from '../../tokens/extensions.token';\n\n// tslint:disable: directive-class-suffix\n// Fix for https://github.com/angular/angular/issues/23904\n// @dynamic\n@Directive()\nexport abstract class AbstractActionsComponent<L extends ActionList<any>> extends ActionData<\n  InferredRecord<L>\n> {\n  readonly actionList: L;\n\n  readonly getInjected: InferredData<L>['getInjected'];\n\n  @Input() readonly record: InferredData<L>['record'];\n\n  constructor(injector: Injector) {\n    super();\n\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n    const extensions = injector.get(ExtensionsService);\n    const name = injector.get(EXTENSIONS_IDENTIFIER);\n    const type = injector.get(EXTENSIONS_ACTION_TYPE);\n    this.actionList = (extensions[type].get(name).actions as unknown) as L;\n  }\n}\n\ntype InferredData<L> = ActionData<InferredRecord<L>>;\ntype InferredRecord<L> = L extends ActionList<infer R> ? R : never;\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Injector,\n  Input,\n  TrackByFunction,\n} from '@angular/core';\nimport { EntityAction, EntityActionList } from '../../models/entity-actions';\nimport { EXTENSIONS_ACTION_TYPE } from '../../tokens/extensions.token';\nimport { AbstractActionsComponent } from '../abstract-actions/abstract-actions.component';\n\n@Component({\n  exportAs: 'abpGridActions',\n  selector: 'abp-grid-actions',\n  templateUrl: './grid-actions.component.html',\n  providers: [\n    {\n      provide: EXTENSIONS_ACTION_TYPE,\n      useValue: 'entityActions',\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GridActionsComponent<R = any> extends AbstractActionsComponent<EntityActionList<R>> {\n  @Input() icon = 'fa fa-cog';\n\n  @Input() readonly index: number;\n\n  @Input() text = '';\n\n  readonly trackByFn: TrackByFunction<EntityAction<R>> = (_, item) => item.text;\n\n  constructor(injector: Injector) {\n    super(injector);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  InjectFlags,\n  InjectionToken,\n  Injector,\n  TrackByFunction,\n  Type,\n} from '@angular/core';\nimport { ToolbarActionList, ToolbarComponent } from '../../models/toolbar-actions';\nimport {\n  EXTENSIONS_ACTION_CALLBACK,\n  EXTENSIONS_ACTION_DATA,\n  EXTENSIONS_ACTION_TYPE,\n} from '../../tokens/extensions.token';\nimport { AbstractActionsComponent } from '../abstract-actions/abstract-actions.component';\n\n@Component({\n  exportAs: 'abpPageToolbar',\n  selector: 'abp-page-toolbar',\n  templateUrl: './page-toolbar.component.html',\n  providers: [\n    {\n      provide: EXTENSIONS_ACTION_TYPE,\n      useValue: 'toolbarActions',\n    },\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageToolbarComponent<R = any> extends AbstractActionsComponent<ToolbarActionList<R>> {\n  readonly trackByFn: TrackByFunction<ToolbarComponent<R>> = (_, item) =>\n    item.action || item.component;\n\n  constructor(private readonly injector: Injector) {\n    super(injector);\n  }\n\n  createInjector(action: ToolbarComponent<R>): Injector {\n    const get = <T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags) => {\n      return token === EXTENSIONS_ACTION_DATA\n        ? this.data\n        : token === EXTENSIONS_ACTION_CALLBACK\n        ? (data = this.data) => action.action(data)\n        : this.getInjected.call(this.injector, token, notFoundValue, flags);\n    };\n\n    return { get };\n  }\n}\n","import { Directive, Host, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[abpDisabled]',\n})\nexport class DisabledDirective implements OnChanges {\n  @Input()\n  abpDisabled: boolean;\n\n  constructor(@Host() private ngControl: NgControl) {}\n\n  // Related issue: https://github.com/angular/angular/issues/35330\n  ngOnChanges({ abpDisabled }: SimpleChanges) {\n    if (this.ngControl.control && abpDisabled) {\n      this.ngControl.control[abpDisabled.currentValue ? 'disable' : 'enable']();\n    }\n  }\n}\n","import {\n  Directive,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { PropData, PropList } from '../models/props';\n\n@Directive({\n  exportAs: 'abpPropData',\n  selector: '[abpPropData]',\n})\nexport class PropDataDirective<L extends PropList<any>> extends PropData<InferredData<L>>\n  implements OnChanges, OnDestroy {\n  /* tslint:disable:no-input-rename */\n  @Input('abpPropDataFromList') readonly propList: L;\n\n  @Input('abpPropDataWithRecord') readonly record: InferredData<L>['record'];\n\n  @Input('abpPropDataAtIndex') readonly index: number;\n  /* tslint:enable:no-input-rename */\n\n  readonly getInjected: InferredData<L>['getInjected'];\n\n  constructor(\n    private tempRef: TemplateRef<any>,\n    private vcRef: ViewContainerRef,\n    injector: Injector,\n  ) {\n    super();\n\n    // tslint:disable-next-line\n    this.getInjected = injector.get.bind(injector);\n  }\n\n  ngOnChanges() {\n    this.vcRef.clear();\n\n    this.vcRef.createEmbeddedView(this.tempRef, {\n      $implicit: this.data,\n      index: 0,\n    });\n  }\n\n  ngOnDestroy() {\n    this.vcRef.clear();\n  }\n}\n\ntype InferredData<L> = PropData<InferredRecord<L>>;\ntype InferredRecord<L> = L extends PropList<infer R> ? R : never;\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport {\n  NgbDatepickerModule,\n  NgbDropdownModule,\n  NgbTimepickerModule,\n  NgbTypeaheadModule,\n} from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { DateTimePickerComponent } from './components/date-time-picker/date-time-picker.component';\nimport { ExtensibleFormPropComponent } from './components/extensible-form/extensible-form-prop.component';\nimport { ExtensibleFormComponent } from './components/extensible-form/extensible-form.component';\nimport { ExtensibleTableComponent } from './components/extensible-table/extensible-table.component';\nimport { GridActionsComponent } from './components/grid-actions/grid-actions.component';\nimport { PageToolbarComponent } from './components/page-toolbar/page-toolbar.component';\nimport { DisabledDirective } from './directives/disabled.directive';\nimport { PropDataDirective } from './directives/prop-data.directive';\n\n@NgModule({\n  exports: [\n    DateTimePickerComponent,\n    PageToolbarComponent,\n    GridActionsComponent,\n    ExtensibleFormComponent,\n    ExtensibleTableComponent,\n    PropDataDirective,\n    DisabledDirective,\n  ],\n  declarations: [\n    DateTimePickerComponent,\n    PageToolbarComponent,\n    GridActionsComponent,\n    ExtensibleFormPropComponent,\n    ExtensibleFormComponent,\n    ExtensibleTableComponent,\n    PropDataDirective,\n    DisabledDirective,\n  ],\n  imports: [\n    CoreModule,\n    ThemeSharedModule,\n    NgxValidateCoreModule,\n    NgbDatepickerModule,\n    NgbDropdownModule,\n    NgbTimepickerModule,\n    NgbTypeaheadModule,\n  ],\n})\nexport class BaseUiExtensionsModule {}\n\n@NgModule({\n  exports: [BaseUiExtensionsModule],\n  imports: [BaseUiExtensionsModule],\n})\nexport class UiExtensionsModule {}\n","import { ActionContributorCallback, ActionList, ActionsFactory } from '../models/actions';\nimport {\n  EntityActionContributorCallbacks,\n  EntityActionDefaults,\n  EntityActions,\n  EntityActionsFactory,\n} from '../models/entity-actions';\nimport {\n  ToolbarActionContributorCallbacks,\n  ToolbarActionDefaults,\n  ToolbarActions,\n  ToolbarActionsFactory,\n} from '../models/toolbar-actions';\n\nexport function mergeWithDefaultActions<F extends ActionsFactory<any>>(\n  extension: F,\n  defaultActions: InferredActionDefaults<F>,\n  ...contributors: InferredActionContributorCallbacks<F>[]\n) {\n  Object.keys(defaultActions).forEach((name: string) => {\n    const actions: InferredActions<F> = extension.get(name);\n    actions.clearContributors();\n    actions.addContributor((actionList: ActionList) =>\n      actionList.addManyTail(defaultActions[name]),\n    );\n    contributors.forEach(contributor =>\n      (contributor[name] || []).forEach((callback: ActionContributorCallback<any>) =>\n        actions.addContributor(callback),\n      ),\n    );\n  });\n}\ntype InferredActionDefaults<F> = F extends EntityActionsFactory<infer RE>\n  ? EntityActionDefaults<RE>\n  : F extends ToolbarActionsFactory<infer RT>\n  ? ToolbarActionDefaults<RT>\n  : never;\n\ntype InferredActionContributorCallbacks<F> = F extends EntityActionsFactory<infer RE>\n  ? EntityActionContributorCallbacks<RE>\n  : F extends ToolbarActionsFactory<infer RT>\n  ? ToolbarActionContributorCallbacks<RT>\n  : never;\n\ntype InferredActions<F> = F extends EntityActionsFactory<infer RE>\n  ? EntityActions<RE>\n  : F extends ToolbarActionsFactory<infer RT>\n  ? ToolbarActions<RT>\n  : never;\n","import { FormControl, FormGroup } from '@angular/forms';\nimport { DateTimeAdapter } from '../adapters/date-time.adapter';\nimport { DateAdapter } from '../adapters/date.adapter';\nimport { TimeAdapter } from '../adapters/time.adapter';\nimport { EXTRA_PROPERTIES_KEY } from '../constants/extra-properties';\nimport { ePropType } from '../enums/props.enum';\nimport { FormPropList } from '../models/form-props';\nimport { PropData } from '../models/props';\nimport { ExtensionsService } from '../services/extensions.service';\nimport { EXTENSIONS_IDENTIFIER } from '../tokens/extensions.token';\n\nexport function generateFormFromProps<R extends any>(data: PropData<R>) {\n  const extensions = data.getInjected(ExtensionsService);\n  const identifier = data.getInjected(EXTENSIONS_IDENTIFIER);\n\n  const form = new FormGroup({});\n  const extraForm = new FormGroup({});\n  form.addControl(EXTRA_PROPERTIES_KEY, extraForm);\n\n  const record = data.record || {};\n  const type = JSON.stringify(record) === '{}' ? 'create' : 'edit';\n  const props: FormPropList<R> = extensions[`${type}FormProps`].get(identifier).props;\n  const extraProperties = record[EXTRA_PROPERTIES_KEY] || {};\n\n  props.forEach(({ value: prop }) => {\n    const name = prop.name;\n    const isExtraProperty = prop.isExtra || name in extraProperties;\n    let value = isExtraProperty ? extraProperties[name] : name in record ? record[name] : undefined;\n\n    if (typeof value === 'undefined') value = prop.defaultValue;\n\n    if (value) {\n      let adapter: DateAdapter | TimeAdapter | DateTimeAdapter;\n      switch (prop.type) {\n        case ePropType.Date:\n          adapter = new DateAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n        case ePropType.Time:\n          adapter = new TimeAdapter();\n          value = adapter.toModel(adapter.fromModel(value));\n          break;\n        case ePropType.DateTime:\n          adapter = new DateTimeAdapter();\n          value = adapter.toModel(adapter.fromModel(value) as any);\n          break;\n        default:\n          break;\n      }\n    }\n\n    const formControl = new FormControl(value, {\n      asyncValidators: prop.asyncValidators(data),\n      validators: prop.validators(data),\n    });\n\n    (isExtraProperty ? extraForm : form).addControl(name, formControl);\n  });\n\n  return form;\n}\n","import { of } from 'rxjs';\nimport { EXTRA_PROPERTIES_KEY } from '../constants/extra-properties';\nimport {\n  EntityPropContributorCallbacks,\n  EntityPropDefaults,\n  EntityProps,\n  EntityPropsFactory,\n} from '../models/entity-props';\nimport {\n  CreateFormPropContributorCallbacks,\n  CreateFormPropDefaults,\n  CreateFormPropsFactory,\n  EditFormPropContributorCallbacks,\n  EditFormPropDefaults,\n  EditFormPropsFactory,\n  FormProps,\n} from '../models/form-props';\nimport { PropContributorCallback, PropData, PropList, PropsFactory } from '../models/props';\n\nexport function createExtraPropertyValueResolver<T>(name: string) {\n  return (data?: PropData<T>) => of(data.record[EXTRA_PROPERTIES_KEY][name]);\n}\n\nexport function mergeWithDefaultProps<F extends PropsFactory<any>>(\n  extension: F,\n  defaultProps: InferredPropDefaults<F>,\n  ...contributors: InferredPropContributorCallbacks<F>[]\n) {\n  Object.keys(defaultProps).forEach((name: string) => {\n    const props: InferredProps<F> = extension.get(name);\n    props.clearContributors();\n    props.addContributor((propList: PropList) => propList.addManyTail(defaultProps[name]));\n    contributors.forEach(contributor =>\n      (contributor[name] || []).forEach((callback: PropContributorCallback<any>) =>\n        props.addContributor(callback),\n      ),\n    );\n  });\n}\ntype InferredPropDefaults<F> = F extends EntityPropsFactory<infer RE>\n  ? EntityPropDefaults<RE>\n  : F extends CreateFormPropsFactory<infer RCF>\n  ? CreateFormPropDefaults<RCF>\n  : F extends EditFormPropsFactory<infer REF>\n  ? EditFormPropDefaults<REF>\n  : never;\n\ntype InferredPropContributorCallbacks<F> = F extends EntityPropsFactory<infer RE>\n  ? EntityPropContributorCallbacks<RE>\n  : F extends CreateFormPropsFactory<infer RCF>\n  ? CreateFormPropContributorCallbacks<RCF>\n  : F extends EditFormPropsFactory<infer REF>\n  ? EditFormPropContributorCallbacks<REF>\n  : never;\n\ntype InferredProps<F> = F extends EntityPropsFactory<infer RE>\n  ? EntityProps<RE>\n  : F extends CreateFormPropsFactory<infer RCF>\n  ? FormProps<RCF>\n  : F extends EditFormPropsFactory<infer REF>\n  ? FormProps<REF>\n  : never;\n","import { ABP, LocalizationService } from '@abp/ng.core';\nimport { merge, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EXTRA_PROPERTIES_KEY } from '../constants/extra-properties';\nimport { ObjectExtensions } from '../models/object-extensions';\nimport { PropCallback } from '../models/props';\n\nexport function createEnum(members: ObjectExtensions.ExtensionEnumFieldDto[]) {\n  const enumObject: any = {};\n\n  members.forEach(({ name, value }) => {\n    enumObject[(enumObject[name] = value as any)] = name;\n  });\n\n  return enumObject;\n}\n\nexport function createEnumValueResolver<T = any>(\n  enumType: string,\n  lookupEnum: ObjectExtensions.ExtensionEnumDto,\n  propName: string,\n): PropCallback<T, Observable<string>> {\n  return data => {\n    const value = data.record[EXTRA_PROPERTIES_KEY][propName];\n    const key = lookupEnum.transformed[value];\n    const l10n = data.getInjected(LocalizationService);\n    const localizeEnum = createEnumLocalizer(l10n, enumType, lookupEnum);\n\n    return createLocalizationStream(l10n, localizeEnum(key));\n  };\n}\n\nexport function createEnumOptions<T = any>(\n  enumType: string,\n  lookupEnum: ObjectExtensions.ExtensionEnumDto,\n): PropCallback<T, Observable<ABP.Option<any>[]>> {\n  return data => {\n    const l10n = data.getInjected(LocalizationService);\n    const localizeEnum = createEnumLocalizer(l10n, enumType, lookupEnum);\n\n    return createLocalizationStream(\n      l10n,\n      lookupEnum.fields.map(({ name, value }) => ({\n        key: localizeEnum(name),\n        value,\n      })),\n    );\n  };\n}\n\nfunction createLocalizationStream(l10n: LocalizationService, mapTarget: any) {\n  return merge(of(null), l10n.languageChange$).pipe(map(() => mapTarget));\n}\n\nfunction createEnumLocalizer(\n  l10n: LocalizationService,\n  enumType: string,\n  lookupEnum: ObjectExtensions.ExtensionEnumDto,\n): (key: string) => string {\n  const resource = lookupEnum.localizationResource;\n  const shortType = getShortEnumType(enumType);\n\n  return key =>\n    l10n.localizeWithFallbackSync(\n      [resource],\n      ['Enum:' + shortType + '.' + key, shortType + '.' + key, key],\n      key,\n    );\n}\n\nfunction getShortEnumType(enumType: string): string {\n  return enumType.split('.').pop();\n}\n","import {\n  ApplicationLocalizationConfigurationDto,\n  createLocalizationPipeKeyGenerator,\n} from '@abp/ng.core';\nimport { ObjectExtensions } from '../models/object-extensions';\n\nexport function createDisplayNameLocalizationPipeKeyGenerator(\n  localization: ApplicationLocalizationConfigurationDto,\n) {\n  const generateLocalizationPipeKey = createLocalizationPipeKeyGenerator(localization);\n\n  return (\n    displayName: ObjectExtensions.LocalizableStringDto,\n    fallback: ObjectExtensions.LocalizableStringDto,\n  ) => {\n    if (displayName && displayName.name)\n      return generateLocalizationPipeKey(\n        [displayName.resource],\n        [displayName.name],\n        displayName.name,\n      );\n\n    const key = generateLocalizationPipeKey(\n      [fallback.resource],\n      ['DisplayName:' + fallback.name],\n      undefined,\n    );\n\n    if (key) return key;\n\n    return generateLocalizationPipeKey([fallback.resource], [fallback.name], fallback.name);\n  };\n}\n","import { AbpValidators } from '@abp/ng.core';\nimport { ValidatorFn } from '@angular/forms';\nimport { ObjectExtensions } from '../models/object-extensions';\n\nexport function getValidatorsFromProperty(\n  property: ObjectExtensions.ExtensionPropertyDto,\n): ValidatorFn[] {\n  const validators: ValidatorFn[] = [];\n\n  property.attributes.forEach(attr => {\n    if (attr.typeSimple in AbpValidators)\n      validators.push(AbpValidators[attr.typeSimple](attr.config));\n  });\n\n  return validators;\n}\n","import {\n  ABP,\n  ApplicationLocalizationConfigurationDto,\n  ConfigStateService,\n  ExtensionPropertyUiLookupDto,\n} from '@abp/ng.core';\nimport { Observable, pipe, zip } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { ePropType } from '../enums/props.enum';\nimport { EntityProp, EntityPropList } from '../models/entity-props';\nimport { FormProp, FormPropList } from '../models/form-props';\nimport { ObjectExtensions } from '../models/object-extensions';\nimport { PropCallback } from '../models/props';\nimport { createEnum, createEnumOptions, createEnumValueResolver } from './enum.util';\nimport { createDisplayNameLocalizationPipeKeyGenerator } from './localization.util';\nimport { createExtraPropertyValueResolver } from './props.util';\nimport {\n  createTypeaheadDisplayNameGenerator,\n  createTypeaheadOptions,\n  getTypeaheadType,\n  hasTypeaheadTextSuffix,\n} from './typeahead.util';\nimport { getValidatorsFromProperty } from './validation.util';\n\nfunction selectObjectExtensions(\n  configState: ConfigStateService,\n): Observable<ObjectExtensions.ObjectExtensionsDto> {\n  return configState.getOne$('objectExtensions');\n}\n\nfunction selectLocalization(\n  configState: ConfigStateService,\n): Observable<ApplicationLocalizationConfigurationDto> {\n  return configState.getOne$('localization');\n}\n\nfunction selectEnums(\n  configState: ConfigStateService,\n): Observable<Record<string, ObjectExtensions.ExtensionEnumDto>> {\n  return selectObjectExtensions(configState).pipe(\n    map((extensions: ObjectExtensions.ObjectExtensionsDto) =>\n      Object.keys(extensions.enums).reduce((acc, key) => {\n        const { fields, localizationResource } = extensions.enums[key];\n        acc[key] = {\n          fields,\n          localizationResource,\n          transformed: createEnum(fields),\n        };\n        return acc;\n      }, {} as Record<string, ObjectExtensions.ExtensionEnumDto>),\n    ),\n  );\n}\n\nexport function getObjectExtensionEntitiesFromStore(\n  configState: ConfigStateService,\n  moduleKey: string,\n) {\n  return selectObjectExtensions(configState).pipe(\n    map(extensions => {\n      if (!extensions) return null;\n\n      return (extensions.modules[moduleKey] || ({} as ObjectExtensions.ModuleExtensionDto))\n        .entities;\n    }),\n    map(entities => (isUndefined(entities) ? {} : entities)),\n    filter<ObjectExtensions.EntityExtensions>(Boolean),\n    take(1),\n  );\n}\n\nexport function mapEntitiesToContributors<T = any>(\n  configState: ConfigStateService,\n  resource: string,\n) {\n  return pipe(\n    switchMap(entities =>\n      zip(selectLocalization(configState), selectEnums(configState)).pipe(\n        map(([localization, enums]) => {\n          const generateDisplayName = createDisplayNameLocalizationPipeKeyGenerator(localization);\n\n          return Object.keys(entities).reduce(\n            (acc, key: keyof ObjectExtensions.EntityExtensions) => {\n              acc.prop[key] = [];\n              acc.createForm[key] = [];\n              acc.editForm[key] = [];\n\n              const entity: ObjectExtensions.EntityExtensionDto = entities[key];\n              if (!entity) return acc;\n\n              const properties = entity.properties;\n              if (!properties) return acc;\n\n              const mapPropertiesToContributors = createPropertiesToContributorsMapper<T>(\n                generateDisplayName,\n                resource,\n                enums,\n              );\n\n              return mapPropertiesToContributors(properties, acc, key);\n            },\n            {\n              prop: {},\n              createForm: {},\n              editForm: {},\n            } as ObjectExtensions.PropContributors,\n          );\n        }),\n      ),\n    ),\n    take(1),\n  );\n}\n\nfunction createPropertiesToContributorsMapper<T = any>(\n  generateDisplayName: ObjectExtensions.DisplayNameGeneratorFn,\n  resource: string,\n  enums: Record<string, ObjectExtensions.ExtensionEnumDto>,\n) {\n  return (\n    properties: ObjectExtensions.EntityExtensionProperties,\n    contributors: ObjectExtensions.PropContributors<T>,\n    key: string,\n  ) => {\n    const isExtra = true;\n    const generateTypeaheadDisplayName = createTypeaheadDisplayNameGenerator(\n      generateDisplayName,\n      properties,\n    );\n\n    Object.keys(properties).forEach((name: string) => {\n      const property = properties[name];\n      const propName = name;\n      const lookup = property.ui.lookup || ({} as ExtensionPropertyUiLookupDto);\n      const type = getTypeaheadType(lookup, name) || getTypeFromProperty(property);\n      const generateDN = hasTypeaheadTextSuffix(name)\n        ? generateTypeaheadDisplayName\n        : generateDisplayName;\n      const displayName = generateDN(property.displayName, { name, resource });\n\n      if (property.ui.onTable.isVisible) {\n        const sortable = Boolean(property.ui.onTable.isSortable);\n        const columnWidth = type === ePropType.Boolean ? 150 : 250;\n        const valueResolver =\n          type === ePropType.Enum\n            ? createEnumValueResolver(property.type, enums[property.type], propName)\n            : createExtraPropertyValueResolver<T>(propName);\n\n        const entityProp = new EntityProp<T>({\n          type,\n          name: propName,\n          displayName,\n          sortable,\n          columnWidth,\n          valueResolver,\n          isExtra,\n        });\n\n        const contributor = (propList: EntityPropList<T>) => propList.addTail(entityProp);\n        contributors.prop[key].push(contributor);\n      }\n\n      const isOnCreateForm = property.ui.onCreateForm.isVisible;\n      const isOnEditForm = property.ui.onEditForm.isVisible;\n\n      if (isOnCreateForm || isOnEditForm) {\n        const defaultValue = property.defaultValue;\n        const validators = () => getValidatorsFromProperty(property);\n        let options: PropCallback<any, Observable<ABP.Option<any>[]>>;\n        if (type === ePropType.Enum) options = createEnumOptions(propName, enums[property.type]);\n        else if (type === ePropType.Typeahead) options = createTypeaheadOptions(lookup);\n\n        const formProp = new FormProp({\n          type,\n          name: propName,\n          displayName,\n          options,\n          defaultValue,\n          validators,\n          isExtra,\n        });\n\n        const formContributor = (propList: FormPropList<T>) => propList.addTail(formProp);\n\n        if (isOnCreateForm) contributors.createForm[key].push(formContributor);\n        if (isOnEditForm) contributors.editForm[key].push(formContributor);\n      }\n    });\n\n    return contributors;\n  };\n}\n\nfunction getTypeFromProperty(property: ObjectExtensions.ExtensionPropertyDto): ePropType {\n  return (property.typeSimple.replace(/\\?$/, '') as string) as ePropType;\n}\n\nfunction isUndefined(obj: any): obj is undefined {\n  return typeof obj === 'undefined';\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AbstractActionsComponent as ɵj} from './lib/components/abstract-actions/abstract-actions.component';\nexport {Action as ɵb,ActionData as ɵa,Actions as ɵd,ActionsFactory as ɵc} from './lib/models/actions';\nexport {Prop as ɵf,PropData as ɵe,Props as ɵh,PropsFactory as ɵg} from './lib/models/props';\nexport {selfFactory as ɵi} from './lib/utils/factory.util';"]}