import { AfterViewInit, ChangeDetectorRef, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class EllipsisDirective implements AfterViewInit {
    private cdRef;
    private elRef;
    width: string;
    title: string;
    enabled: boolean;
    get inlineClass(): string;
    get class(): boolean;
    get maxWidth(): string;
    constructor(cdRef: ChangeDetectorRef, elRef: ElementRef);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<EllipsisDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<EllipsisDirective, "[abpEllipsis]", never, { "enabled": "abpEllipsisEnabled"; "title": "title"; "width": "abpEllipsis"; }, {}, never>;
}
export declare class EllipsisModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<EllipsisModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<EllipsisModule, [typeof EllipsisDirective], never, [typeof EllipsisDirective]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<EllipsisModule>;
}

//# sourceMappingURL=ellipsis.directive.d.ts.map