{"version":3,"file":"error.handler.d.ts","sources":["error.handler.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { LocalizationParam, RouterEvents } from '@abp/ng.core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { ComponentFactoryResolver, ComponentRef, Injector, RendererFactory2 } from '@angular/core';\r\nimport { NavigationError } from '@angular/router';\r\nimport { Actions } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpErrorWrapperComponent } from '../components/http-error-wrapper/http-error-wrapper.component';\r\nimport { ErrorScreenErrorCodes, HttpErrorConfig } from '../models/common';\r\nimport { Confirmation } from '../models/confirmation';\r\nimport { ConfirmationService } from '../services/confirmation.service';\r\nexport declare const DEFAULT_ERROR_MESSAGES: {\r\n    defaultError: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError401: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError403: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError404: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError500: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n};\r\nexport declare const DEFAULT_ERROR_LOCALIZATIONS: {\r\n    defaultError: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError401: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError403: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError404: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n    defaultError500: {\r\n        title: string;\r\n        details: string;\r\n    };\r\n};\r\nexport declare class ErrorHandler {\r\n    protected actions: Actions;\r\n    protected routerEvents: RouterEvents;\r\n    protected confirmationService: ConfirmationService;\r\n    protected cfRes: ComponentFactoryResolver;\r\n    protected rendererFactory: RendererFactory2;\r\n    protected injector: Injector;\r\n    protected httpErrorConfig: HttpErrorConfig;\r\n    componentRef: ComponentRef<HttpErrorWrapperComponent>;\r\n    protected httpErrorHandler: import(\"../models/common\").HttpErrorHandler;\r\n    constructor(actions: Actions, routerEvents: RouterEvents, confirmationService: ConfirmationService, cfRes: ComponentFactoryResolver, rendererFactory: RendererFactory2, injector: Injector, httpErrorConfig: HttpErrorConfig);\r\n    protected listenToRouterError(): void;\r\n    protected listenToRouterDataResolved(): void;\r\n    protected listenToRestError(): void;\r\n    private executeErrorHandler;\r\n    private handleError;\r\n    protected show401Page(): void;\r\n    protected show404Page(): void;\r\n    protected showError(message?: LocalizationParam, title?: LocalizationParam, body?: any): Observable<Confirmation.Status>;\r\n    private navigateToLogin;\r\n    createErrorComponent(instance: Partial<HttpErrorWrapperComponent>): void;\r\n    canCreateCustomError(status: ErrorScreenErrorCodes): boolean;\r\n    protected filterRestErrors: ({ status }: HttpErrorResponse) => boolean;\r\n    protected filterRouteErrors: (navigationError: NavigationError) => boolean;\r\n}\r\n"]}