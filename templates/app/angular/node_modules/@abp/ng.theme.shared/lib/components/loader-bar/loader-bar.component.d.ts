import { HttpWaitService, RouterWaitService, SubscriptionService } from '@abp/ng.core';
import { ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class LoaderBarComponent implements OnDestroy, OnInit {
    private router;
    private cdRef;
    private subscription;
    private httpWaitService;
    private routerWaitService;
    protected _isLoading: boolean;
    set isLoading(value: boolean);
    get isLoading(): boolean;
    containerClass: string;
    color: string;
    progressLevel: number;
    interval: Subscription;
    timer: Subscription;
    intervalPeriod: number;
    stopDelay: number;
    private readonly clearProgress;
    private readonly reportProgress;
    get boxShadow(): string;
    constructor(router: Router, cdRef: ChangeDetectorRef, subscription: SubscriptionService, httpWaitService: HttpWaitService, routerWaitService: RouterWaitService);
    ngOnInit(): void;
    subscribeLoading(): void;
    ngOnDestroy(): void;
    startLoading(): void;
    stopLoading(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<LoaderBarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<LoaderBarComponent, "abp-loader-bar", never, { "containerClass": "containerClass"; "color": "color"; "isLoading": "isLoading"; }, {}, never, never>;
}

//# sourceMappingURL=loader-bar.component.d.ts.map