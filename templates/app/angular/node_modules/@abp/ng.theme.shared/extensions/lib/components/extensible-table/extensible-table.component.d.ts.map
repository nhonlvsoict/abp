{"version":3,"file":"extensible-table.component.d.ts","sources":["extensible-table.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ListService, ConfigStateService } from '@abp/ng.core';\r\nimport { Injector, TemplateRef, TrackByFunction, Type, InjectionToken, InjectFlags, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { EntityProp, EntityPropList } from '../../models/entity-props';\r\nimport { PropData } from '../../models/props';\r\nimport { EntityActionList } from '../../models/entity-actions';\r\nexport declare class ExtensibleTableComponent<R = any> implements OnChanges {\r\n    private locale;\r\n    private config;\r\n    protected _actionsText: string;\r\n    set actionsText(value: string);\r\n    get actionsText(): string;\r\n    data: R[];\r\n    list: ListService;\r\n    recordsTotal: number;\r\n    set actionsColumnWidth(width: number);\r\n    actionsTemplate: TemplateRef<any>;\r\n    getInjected: <T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags) => T;\r\n    readonly columnWidths: number[];\r\n    readonly propList: EntityPropList<R>;\r\n    readonly actionList: EntityActionList<R>;\r\n    readonly trackByFn: TrackByFunction<EntityProp<R>>;\r\n    constructor(locale: string, config: ConfigStateService, injector: Injector);\r\n    private setColumnWidths;\r\n    private getDate;\r\n    private getIcon;\r\n    getContent(prop: EntityProp<R>, data: PropData): Observable<string>;\r\n    ngOnChanges({ data }: SimpleChanges): void;\r\n}\r\n"]}