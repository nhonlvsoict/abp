{"version":3,"file":"abp-ng.permission-management.js","sources":["../../../packages/permission-management/src/lib/actions/permission-management.actions.ts","../../../packages/permission-management/src/lib/proxy/permissions.service.ts","../../../packages/permission-management/src/lib/states/permission-management.state.ts","../../../packages/permission-management/src/lib/components/permission-management.component.ts","../../../packages/permission-management/src/lib/permission-management.module.ts","../../../packages/permission-management/src/lib/services/permission-management-state.service.ts","../../../packages/permission-management/src/public-api.ts","../../../packages/permission-management/src/abp-ng.permission-management.ts"],"sourcesContent":["import { ProviderInfoDto, UpdatePermissionsDto } from '../proxy/models';\n\nexport class GetPermissions {\n  static readonly type = '[PermissionManagement] Get Permissions';\n  constructor(public payload: ProviderInfoDto) {}\n}\n\nexport class UpdatePermissions {\n  static readonly type = '[PermissionManagement] Update Permissions';\n  constructor(public payload: ProviderInfoDto & UpdatePermissionsDto) {}\n}\n","import type { GetPermissionListResultDto, UpdatePermissionsDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionsService {\n  apiName = 'AbpPermissionManagement';\n\n  get = (providerName: string, providerKey: string) =>\n    this.restService.request<any, GetPermissionListResultDto>({\n      method: 'GET',\n      url: '/api/permission-management/permissions',\n      params: { providerName, providerKey },\n    },\n    { apiName: this.apiName });\n\n  update = (providerName: string, providerKey: string, input: UpdatePermissionsDto) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: '/api/permission-management/permissions',\n      params: { providerName, providerKey },\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\nimport { PermissionManagement } from '../models/permission-management';\nimport { ProviderInfoDto } from '../proxy/models';\nimport { PermissionsService } from '../proxy/permissions.service';\n\n@State<PermissionManagement.State>({\n  name: 'PermissionManagementState',\n  defaults: { permissionRes: {} } as PermissionManagement.State,\n})\n@Injectable()\nexport class PermissionManagementState {\n  @Selector()\n  static getPermissionGroups({ permissionRes }: PermissionManagement.State) {\n    return permissionRes.groups || [];\n  }\n\n  @Selector()\n  static getEntityDisplayName({ permissionRes }: PermissionManagement.State): string {\n    return permissionRes.entityDisplayName;\n  }\n\n  constructor(private service: PermissionsService) {}\n\n  @Action(GetPermissions)\n  permissionManagementGet(\n    { patchState }: StateContext<PermissionManagement.State>,\n    { payload: { providerKey, providerName } = {} as ProviderInfoDto }: GetPermissions,\n  ) {\n    return this.service.get(providerName, providerKey).pipe(\n      tap(permissionResponse =>\n        patchState({\n          permissionRes: permissionResponse,\n        }),\n      ),\n    );\n  }\n\n  @Action(UpdatePermissions)\n  permissionManagementUpdate(_, { payload }: UpdatePermissions) {\n    return this.service.update(payload.providerName, payload.providerKey, {\n      permissions: payload.permissions,\n    });\n  }\n}\n","import {\n  AbpApplicationConfigurationService,\n  ConfigStateService,\n  CurrentUserDto,\n} from '@abp/ng.core';\nimport { LocaleDirection } from '@abp/ng.theme.shared';\nimport { Component, EventEmitter, Input, Output, TrackByFunction } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { finalize, map, pluck, switchMap, take, tap } from 'rxjs/operators';\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\nimport { PermissionManagement } from '../models/permission-management';\nimport {\n  GetPermissionListResultDto,\n  PermissionGrantInfoDto,\n  PermissionGroupDto,\n  ProviderInfoDto,\n  UpdatePermissionDto,\n} from '../proxy/models';\nimport { PermissionManagementState } from '../states/permission-management.state';\n\ntype PermissionWithStyle = PermissionGrantInfoDto & {\n  style: string;\n};\n\n@Component({\n  selector: 'abp-permission-management',\n  templateUrl: './permission-management.component.html',\n  exportAs: 'abpPermissionManagement',\n  styles: [\n    `\n      .overflow-scroll {\n        max-height: 70vh;\n        overflow-y: scroll;\n      }\n    `,\n  ],\n})\nexport class PermissionManagementComponent\n  implements\n    PermissionManagement.PermissionManagementComponentInputs,\n    PermissionManagement.PermissionManagementComponentOutputs {\n  @Input()\n  readonly providerName: string;\n\n  @Input()\n  readonly providerKey: string;\n\n  @Input()\n  readonly hideBadges = false;\n\n  protected _visible = false;\n\n  @Input()\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  set visible(value: boolean) {\n    if (value === this._visible) return;\n\n    if (value) {\n      this.openModal().subscribe(() => {\n        this._visible = true;\n        this.visibleChange.emit(true);\n      });\n    } else {\n      this.selectedGroup = null;\n      this._visible = false;\n      this.visibleChange.emit(false);\n    }\n  }\n\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\n\n  @Select(PermissionManagementState.getPermissionGroups)\n  groups$: Observable<PermissionGroupDto[]>;\n\n  @Select(PermissionManagementState.getEntityDisplayName)\n  entityName$: Observable<string>;\n\n  selectedGroup: PermissionGroupDto;\n\n  permissions: PermissionGrantInfoDto[] = [];\n\n  selectThisTab = false;\n\n  selectAllTab = false;\n\n  modalBusy = false;\n\n  trackByFn: TrackByFunction<PermissionGroupDto> = (_, item) => item.name;\n\n  get selectedGroupPermissions$(): Observable<PermissionWithStyle[]> {\n    const margin = `margin-${\n      (document.body.dir as LocaleDirection) === 'rtl' ? 'right' : 'left'\n    }.px`;\n\n    return this.groups$.pipe(\n      map(groups =>\n        this.selectedGroup\n          ? groups.find(group => group.name === this.selectedGroup.name).permissions\n          : [],\n      ),\n      map<PermissionGrantInfoDto[], PermissionWithStyle[]>(permissions =>\n        permissions.map(\n          permission =>\n            (({\n              ...permission,\n              style: { [margin]: findMargin(permissions, permission) },\n              isGranted: this.permissions.find(per => per.name === permission.name).isGranted,\n            } as any) as PermissionWithStyle),\n        ),\n      ),\n    );\n  }\n\n  constructor(\n    protected store: Store,\n    protected configState: ConfigStateService,\n    protected appConfigService: AbpApplicationConfigurationService,\n  ) {}\n\n  getChecked(name: string) {\n    return (this.permissions.find(per => per.name === name) || { isGranted: false }).isGranted;\n  }\n\n  isGrantedByOtherProviderName(grantedProviders: ProviderInfoDto[]): boolean {\n    if (grantedProviders.length) {\n      return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\n    }\n    return false;\n  }\n\n  onClickCheckbox(clickedPermission: PermissionGrantInfoDto, value) {\n    if (\n      clickedPermission.isGranted &&\n      this.isGrantedByOtherProviderName(clickedPermission.grantedProviders)\n    )\n      return;\n\n    setTimeout(() => {\n      this.permissions = this.permissions.map(per => {\n        if (clickedPermission.name === per.name) {\n          return { ...per, isGranted: !per.isGranted };\n        } else if (clickedPermission.name === per.parentName && clickedPermission.isGranted) {\n          return { ...per, isGranted: false };\n        } else if (clickedPermission.parentName === per.name && !clickedPermission.isGranted) {\n          return { ...per, isGranted: true };\n        }\n\n        return per;\n      });\n\n      this.setTabCheckboxState();\n      this.setGrantCheckboxState();\n    }, 0);\n  }\n\n  setTabCheckboxState() {\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\n      const selectedPermissions = permissions.filter(per => per.isGranted);\n      const element = document.querySelector('#select-all-in-this-tabs') as any;\n\n      if (selectedPermissions.length === permissions.length) {\n        element.indeterminate = false;\n        this.selectThisTab = true;\n      } else if (selectedPermissions.length === 0) {\n        element.indeterminate = false;\n        this.selectThisTab = false;\n      } else {\n        element.indeterminate = true;\n      }\n    });\n  }\n\n  setGrantCheckboxState() {\n    const selectedAllPermissions = this.permissions.filter(per => per.isGranted);\n    const checkboxElement = document.querySelector('#select-all-in-all-tabs') as any;\n\n    if (selectedAllPermissions.length === this.permissions.length) {\n      checkboxElement.indeterminate = false;\n      this.selectAllTab = true;\n    } else if (selectedAllPermissions.length === 0) {\n      checkboxElement.indeterminate = false;\n      this.selectAllTab = false;\n    } else {\n      checkboxElement.indeterminate = true;\n    }\n  }\n\n  onClickSelectThisTab() {\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\n      permissions.forEach(permission => {\n        if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders))\n          return;\n\n        const index = this.permissions.findIndex(per => per.name === permission.name);\n\n        this.permissions = [\n          ...this.permissions.slice(0, index),\n          { ...this.permissions[index], isGranted: !this.selectThisTab },\n          ...this.permissions.slice(index + 1),\n        ];\n      });\n    });\n\n    this.setGrantCheckboxState();\n  }\n\n  onClickSelectAll() {\n    this.permissions = this.permissions.map(permission => ({\n      ...permission,\n      isGranted:\n        this.isGrantedByOtherProviderName(permission.grantedProviders) || !this.selectAllTab,\n    }));\n\n    this.selectThisTab = !this.selectAllTab;\n  }\n\n  onChangeGroup(group: PermissionGroupDto) {\n    this.selectedGroup = group;\n    this.setTabCheckboxState();\n  }\n\n  submit() {\n    const unchangedPermissions = getPermissions(\n      this.store.selectSnapshot(PermissionManagementState.getPermissionGroups),\n    );\n\n    const changedPermissions: UpdatePermissionDto[] = this.permissions\n      .filter(per =>\n        unchangedPermissions.find(unchanged => unchanged.name === per.name).isGranted ===\n        per.isGranted\n          ? false\n          : true,\n      )\n      .map(({ name, isGranted }) => ({ name, isGranted }));\n\n    if (!changedPermissions.length) {\n      this.visible = false;\n      return;\n    }\n\n    this.modalBusy = true;\n    this.store\n      .dispatch(\n        new UpdatePermissions({\n          providerKey: this.providerKey,\n          providerName: this.providerName,\n          permissions: changedPermissions,\n        }),\n      )\n      .pipe(\n        switchMap(() =>\n          this.shouldFetchAppConfig()\n            ? this.appConfigService.get().pipe(tap(res => this.configState.setState(res)))\n            : of(null),\n        ),\n        finalize(() => (this.modalBusy = false)),\n      )\n      .subscribe(() => {\n        this.visible = false;\n      });\n  }\n\n  openModal() {\n    if (!this.providerKey || !this.providerName) {\n      throw new Error('Provider Key and Provider Name are required.');\n    }\n\n    return this.store\n      .dispatch(\n        new GetPermissions({\n          providerKey: this.providerKey,\n          providerName: this.providerName,\n        }),\n      )\n      .pipe(\n        pluck('PermissionManagementState', 'permissionRes'),\n        tap((permissionRes: GetPermissionListResultDto) => {\n          this.selectedGroup = permissionRes.groups[0];\n          this.permissions = getPermissions(permissionRes.groups);\n        }),\n      );\n  }\n\n  initModal() {\n    this.setTabCheckboxState();\n    this.setGrantCheckboxState();\n  }\n\n  getAssignedCount(groupName: string) {\n    return this.permissions.reduce(\n      (acc, val) => (val.name.split('.')[0] === groupName && val.isGranted ? acc + 1 : acc),\n      0,\n    );\n  }\n\n  shouldFetchAppConfig() {\n    const currentUser = this.configState.getOne('currentUser') as CurrentUserDto;\n\n    if (this.providerName === 'R') return currentUser.roles.some(role => role === this.providerKey);\n\n    if (this.providerName === 'U') return currentUser.id === this.providerKey;\n\n    return false;\n  }\n}\n\nfunction findMargin(permissions: PermissionGrantInfoDto[], permission: PermissionGrantInfoDto) {\n  const parentPermission = permissions.find(per => per.name === permission.parentName);\n\n  if (parentPermission && parentPermission.parentName) {\n    let margin = 20;\n    return (margin += findMargin(permissions, parentPermission));\n  }\n\n  return parentPermission ? 20 : 0;\n}\n\nfunction getPermissions(groups: PermissionGroupDto[]): PermissionGrantInfoDto[] {\n  return groups.reduce((acc, val) => [...acc, ...val.permissions], []);\n}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { PermissionManagementComponent } from './components/permission-management.component';\nimport { PermissionManagementState } from './states/permission-management.state';\n\n@NgModule({\n  declarations: [PermissionManagementComponent],\n  imports: [CoreModule, ThemeSharedModule, NgxsModule.forFeature([PermissionManagementState])],\n  exports: [PermissionManagementComponent],\n})\nexport class PermissionManagementModule {}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { PermissionManagementState } from '../states/permission-management.state';\nimport { PermissionManagement } from '../models';\nimport { GetPermissions, UpdatePermissions } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionManagementStateService {\n  constructor(private store: Store) {}\n\n  getPermissionGroups() {\n    return this.store.selectSnapshot(PermissionManagementState.getPermissionGroups);\n  }\n  getEntityDisplayName() {\n    return this.store.selectSnapshot(PermissionManagementState.getEntityDisplayName);\n  }\n\n  dispatchGetPermissions(...args: ConstructorParameters<typeof GetPermissions>) {\n    return this.store.dispatch(new GetPermissions(...args));\n  }\n\n  dispatchUpdatePermissions(...args: ConstructorParameters<typeof UpdatePermissions>) {\n    return this.store.dispatch(new UpdatePermissions(...args));\n  }\n}\n","/*\n * Public API Surface of permission-management\n */\n\nexport * from './lib/permission-management.module';\nexport * from './lib/actions';\nexport * from './lib/components';\nexport * from './lib/enums/components';\nexport * from './lib/models';\nexport * from './lib/services';\nexport * from './lib/states';\nexport * from './lib/proxy';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GetPermissions as ɵd,UpdatePermissions as ɵe} from './lib/actions/permission-management.actions';\nexport {PermissionManagementComponent as ɵa} from './lib/components/permission-management.component';\nexport {ProviderInfoDto as ɵf} from './lib/proxy/models';\nexport {PermissionsService as ɵc} from './lib/proxy/permissions.service';\nexport {PermissionManagementState as ɵb} from './lib/states/permission-management.state';"],"names":[],"mappings":"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"}