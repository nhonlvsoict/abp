{"version":3,"file":"abp-ng.permission-management.js","sources":["../../../packages/permission-management/src/lib/actions/permission-management.actions.ts","../../../packages/permission-management/src/lib/proxy/permissions.service.ts","../../../packages/permission-management/src/lib/states/permission-management.state.ts","../../../packages/permission-management/src/lib/components/permission-management.component.ts","../../../packages/permission-management/src/lib/permission-management.module.ts","../../../packages/permission-management/src/lib/services/permission-management-state.service.ts","../../../packages/permission-management/src/public-api.ts","../../../packages/permission-management/src/abp-ng.permission-management.ts"],"names":[],"mappings":"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","sourcesContent":["import { ProviderInfoDto, UpdatePermissionsDto } from '../proxy/models';\n\nexport class GetPermissions {\n  static readonly type = '[PermissionManagement] Get Permissions';\n  constructor(public payload: ProviderInfoDto) {}\n}\n\nexport class UpdatePermissions {\n  static readonly type = '[PermissionManagement] Update Permissions';\n  constructor(public payload: ProviderInfoDto & UpdatePermissionsDto) {}\n}\n","import type { GetPermissionListResultDto, UpdatePermissionsDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionsService {\n  apiName = 'AbpPermissionManagement';\n\n  get = (providerName: string, providerKey: string) =>\n    this.restService.request<any, GetPermissionListResultDto>({\n      method: 'GET',\n      url: '/api/permission-management/permissions',\n      params: { providerName, providerKey },\n    },\n    { apiName: this.apiName });\n\n  update = (providerName: string, providerKey: string, input: UpdatePermissionsDto) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: '/api/permission-management/permissions',\n      params: { providerName, providerKey },\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\nimport { PermissionManagement } from '../models/permission-management';\nimport { ProviderInfoDto } from '../proxy/models';\nimport { PermissionsService } from '../proxy/permissions.service';\n\n@State<PermissionManagement.State>({\n  name: 'PermissionManagementState',\n  defaults: { permissionRes: {} } as PermissionManagement.State,\n})\n@Injectable()\nexport class PermissionManagementState {\n  @Selector()\n  static getPermissionGroups({ permissionRes }: PermissionManagement.State) {\n    return permissionRes.groups || [];\n  }\n\n  @Selector()\n  static getEntityDisplayName({ permissionRes }: PermissionManagement.State): string {\n    return permissionRes.entityDisplayName;\n  }\n\n  constructor(private service: PermissionsService) {}\n\n  @Action(GetPermissions)\n  permissionManagementGet(\n    { patchState }: StateContext<PermissionManagement.State>,\n    { payload: { providerKey, providerName } = {} as ProviderInfoDto }: GetPermissions,\n  ) {\n    return this.service.get(providerName, providerKey).pipe(\n      tap(permissionResponse =>\n        patchState({\n          permissionRes: permissionResponse,\n        }),\n      ),\n    );\n  }\n\n  @Action(UpdatePermissions)\n  permissionManagementUpdate(_, { payload }: UpdatePermissions) {\n    return this.service.update(payload.providerName, payload.providerKey, {\n      permissions: payload.permissions,\n    });\n  }\n}\n","import {\n  AbpApplicationConfigurationService,\n  ConfigStateService,\n  CurrentUserDto,\n} from '@abp/ng.core';\nimport { LocaleDirection } from '@abp/ng.theme.shared';\nimport { Component, EventEmitter, Input, Output, TrackByFunction } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable, of } from 'rxjs';\nimport { finalize, map, pluck, switchMap, take, tap } from 'rxjs/operators';\nimport { GetPermissions, UpdatePermissions } from '../actions/permission-management.actions';\nimport { PermissionManagement } from '../models/permission-management';\nimport {\n  GetPermissionListResultDto,\n  PermissionGrantInfoDto,\n  PermissionGroupDto,\n  ProviderInfoDto,\n  UpdatePermissionDto,\n} from '../proxy/models';\nimport { PermissionManagementState } from '../states/permission-management.state';\n\ntype PermissionWithStyle = PermissionGrantInfoDto & {\n  style: string;\n};\n\n@Component({\n  selector: 'abp-permission-management',\n  templateUrl: './permission-management.component.html',\n  exportAs: 'abpPermissionManagement',\n  styles: [\n    `\n      .overflow-scroll {\n        max-height: 70vh;\n        overflow-y: scroll;\n      }\n    `,\n  ],\n})\nexport class PermissionManagementComponent\n  implements\n    PermissionManagement.PermissionManagementComponentInputs,\n    PermissionManagement.PermissionManagementComponentOutputs {\n  @Input()\n  readonly providerName: string;\n\n  @Input()\n  readonly providerKey: string;\n\n  @Input()\n  readonly hideBadges = false;\n\n  protected _visible = false;\n\n  @Input()\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  set visible(value: boolean) {\n    if (value === this._visible) return;\n\n    if (value) {\n      this.openModal().subscribe(() => {\n        this._visible = true;\n        this.visibleChange.emit(true);\n      });\n    } else {\n      this.selectedGroup = null;\n      this._visible = false;\n      this.visibleChange.emit(false);\n    }\n  }\n\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\n\n  @Select(PermissionManagementState.getPermissionGroups)\n  groups$: Observable<PermissionGroupDto[]>;\n\n  @Select(PermissionManagementState.getEntityDisplayName)\n  entityName$: Observable<string>;\n\n  selectedGroup: PermissionGroupDto;\n\n  permissions: PermissionGrantInfoDto[] = [];\n\n  selectThisTab = false;\n\n  selectAllTab = false;\n\n  modalBusy = false;\n\n  trackByFn: TrackByFunction<PermissionGroupDto> = (_, item) => item.name;\n\n  get selectedGroupPermissions$(): Observable<PermissionWithStyle[]> {\n    const margin = `margin-${\n      (document.body.dir as LocaleDirection) === 'rtl' ? 'right' : 'left'\n    }.px`;\n\n    return this.groups$.pipe(\n      map(groups =>\n        this.selectedGroup\n          ? groups.find(group => group.name === this.selectedGroup.name).permissions\n          : [],\n      ),\n      map<PermissionGrantInfoDto[], PermissionWithStyle[]>(permissions =>\n        permissions.map(\n          permission =>\n            (({\n              ...permission,\n              style: { [margin]: findMargin(permissions, permission) },\n              isGranted: this.permissions.find(per => per.name === permission.name).isGranted,\n            } as any) as PermissionWithStyle),\n        ),\n      ),\n    );\n  }\n\n  constructor(\n    protected store: Store,\n    protected configState: ConfigStateService,\n    protected appConfigService: AbpApplicationConfigurationService,\n  ) {}\n\n  getChecked(name: string) {\n    return (this.permissions.find(per => per.name === name) || { isGranted: false }).isGranted;\n  }\n\n  isGrantedByOtherProviderName(grantedProviders: ProviderInfoDto[]): boolean {\n    if (grantedProviders.length) {\n      return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\n    }\n    return false;\n  }\n\n  onClickCheckbox(clickedPermission: PermissionGrantInfoDto, value) {\n    if (\n      clickedPermission.isGranted &&\n      this.isGrantedByOtherProviderName(clickedPermission.grantedProviders)\n    )\n      return;\n\n    setTimeout(() => {\n      this.permissions = this.permissions.map(per => {\n        if (clickedPermission.name === per.name) {\n          return { ...per, isGranted: !per.isGranted };\n        } else if (clickedPermission.name === per.parentName && clickedPermission.isGranted) {\n          return { ...per, isGranted: false };\n        } else if (clickedPermission.parentName === per.name && !clickedPermission.isGranted) {\n          return { ...per, isGranted: true };\n        }\n\n        return per;\n      });\n\n      this.setTabCheckboxState();\n      this.setGrantCheckboxState();\n    }, 0);\n  }\n\n  setTabCheckboxState() {\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\n      const selectedPermissions = permissions.filter(per => per.isGranted);\n      const element = document.querySelector('#select-all-in-this-tabs') as any;\n\n      if (selectedPermissions.length === permissions.length) {\n        element.indeterminate = false;\n        this.selectThisTab = true;\n      } else if (selectedPermissions.length === 0) {\n        element.indeterminate = false;\n        this.selectThisTab = false;\n      } else {\n        element.indeterminate = true;\n      }\n    });\n  }\n\n  setGrantCheckboxState() {\n    const selectedAllPermissions = this.permissions.filter(per => per.isGranted);\n    const checkboxElement = document.querySelector('#select-all-in-all-tabs') as any;\n\n    if (selectedAllPermissions.length === this.permissions.length) {\n      checkboxElement.indeterminate = false;\n      this.selectAllTab = true;\n    } else if (selectedAllPermissions.length === 0) {\n      checkboxElement.indeterminate = false;\n      this.selectAllTab = false;\n    } else {\n      checkboxElement.indeterminate = true;\n    }\n  }\n\n  onClickSelectThisTab() {\n    this.selectedGroupPermissions$.pipe(take(1)).subscribe(permissions => {\n      permissions.forEach(permission => {\n        if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders))\n          return;\n\n        const index = this.permissions.findIndex(per => per.name === permission.name);\n\n        this.permissions = [\n          ...this.permissions.slice(0, index),\n          { ...this.permissions[index], isGranted: !this.selectThisTab },\n          ...this.permissions.slice(index + 1),\n        ];\n      });\n    });\n\n    this.setGrantCheckboxState();\n  }\n\n  onClickSelectAll() {\n    this.permissions = this.permissions.map(permission => ({\n      ...permission,\n      isGranted:\n        this.isGrantedByOtherProviderName(permission.grantedProviders) || !this.selectAllTab,\n    }));\n\n    this.selectThisTab = !this.selectAllTab;\n  }\n\n  onChangeGroup(group: PermissionGroupDto) {\n    this.selectedGroup = group;\n    this.setTabCheckboxState();\n  }\n\n  submit() {\n    const unchangedPermissions = getPermissions(\n      this.store.selectSnapshot(PermissionManagementState.getPermissionGroups),\n    );\n\n    const changedPermissions: UpdatePermissionDto[] = this.permissions\n      .filter(per =>\n        unchangedPermissions.find(unchanged => unchanged.name === per.name).isGranted ===\n        per.isGranted\n          ? false\n          : true,\n      )\n      .map(({ name, isGranted }) => ({ name, isGranted }));\n\n    if (!changedPermissions.length) {\n      this.visible = false;\n      return;\n    }\n\n    this.modalBusy = true;\n    this.store\n      .dispatch(\n        new UpdatePermissions({\n          providerKey: this.providerKey,\n          providerName: this.providerName,\n          permissions: changedPermissions,\n        }),\n      )\n      .pipe(\n        switchMap(() =>\n          this.shouldFetchAppConfig()\n            ? this.appConfigService.get().pipe(tap(res => this.configState.setState(res)))\n            : of(null),\n        ),\n        finalize(() => (this.modalBusy = false)),\n      )\n      .subscribe(() => {\n        this.visible = false;\n      });\n  }\n\n  openModal() {\n    if (!this.providerKey || !this.providerName) {\n      throw new Error('Provider Key and Provider Name are required.');\n    }\n\n    return this.store\n      .dispatch(\n        new GetPermissions({\n          providerKey: this.providerKey,\n          providerName: this.providerName,\n        }),\n      )\n      .pipe(\n        pluck('PermissionManagementState', 'permissionRes'),\n        tap((permissionRes: GetPermissionListResultDto) => {\n          this.selectedGroup = permissionRes.groups[0];\n          this.permissions = getPermissions(permissionRes.groups);\n        }),\n      );\n  }\n\n  initModal() {\n    this.setTabCheckboxState();\n    this.setGrantCheckboxState();\n  }\n\n  getAssignedCount(groupName: string) {\n    return this.permissions.reduce(\n      (acc, val) => (val.name.split('.')[0] === groupName && val.isGranted ? acc + 1 : acc),\n      0,\n    );\n  }\n\n  shouldFetchAppConfig() {\n    const currentUser = this.configState.getOne('currentUser') as CurrentUserDto;\n\n    if (this.providerName === 'R') return currentUser.roles.some(role => role === this.providerKey);\n\n    if (this.providerName === 'U') return currentUser.id === this.providerKey;\n\n    return false;\n  }\n}\n\nfunction findMargin(permissions: PermissionGrantInfoDto[], permission: PermissionGrantInfoDto) {\n  const parentPermission = permissions.find(per => per.name === permission.parentName);\n\n  if (parentPermission && parentPermission.parentName) {\n    let margin = 20;\n    return (margin += findMargin(permissions, parentPermission));\n  }\n\n  return parentPermission ? 20 : 0;\n}\n\nfunction getPermissions(groups: PermissionGroupDto[]): PermissionGrantInfoDto[] {\n  return groups.reduce((acc, val) => [...acc, ...val.permissions], []);\n}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { PermissionManagementComponent } from './components/permission-management.component';\nimport { PermissionManagementState } from './states/permission-management.state';\n\n@NgModule({\n  declarations: [PermissionManagementComponent],\n  imports: [CoreModule, ThemeSharedModule, NgxsModule.forFeature([PermissionManagementState])],\n  exports: [PermissionManagementComponent],\n})\nexport class PermissionManagementModule {}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { PermissionManagementState } from '../states/permission-management.state';\nimport { PermissionManagement } from '../models';\nimport { GetPermissions, UpdatePermissions } from '../actions';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionManagementStateService {\n  constructor(private store: Store) {}\n\n  getPermissionGroups() {\n    return this.store.selectSnapshot(PermissionManagementState.getPermissionGroups);\n  }\n  getEntityDisplayName() {\n    return this.store.selectSnapshot(PermissionManagementState.getEntityDisplayName);\n  }\n\n  dispatchGetPermissions(...args: ConstructorParameters<typeof GetPermissions>) {\n    return this.store.dispatch(new GetPermissions(...args));\n  }\n\n  dispatchUpdatePermissions(...args: ConstructorParameters<typeof UpdatePermissions>) {\n    return this.store.dispatch(new UpdatePermissions(...args));\n  }\n}\n","/*\n * Public API Surface of permission-management\n */\n\nexport * from './lib/permission-management.module';\nexport * from './lib/actions';\nexport * from './lib/components';\nexport * from './lib/enums/components';\nexport * from './lib/models';\nexport * from './lib/services';\nexport * from './lib/states';\nexport * from './lib/proxy';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GetPermissions as ɵd,UpdatePermissions as ɵe} from './lib/actions/permission-management.actions';\nexport {PermissionManagementComponent as ɵa} from './lib/components/permission-management.component';\nexport {ProviderInfoDto as ɵf} from './lib/proxy/models';\nexport {PermissionsService as ɵc} from './lib/proxy/permissions.service';\nexport {PermissionManagementState as ɵb} from './lib/states/permission-management.state';"]}