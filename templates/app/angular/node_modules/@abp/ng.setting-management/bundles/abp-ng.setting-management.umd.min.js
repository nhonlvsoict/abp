!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ngxs/store"),require("@abp/ng.components/page"),require("rxjs"),require("@angular/router")):"function"==typeof define&&define.amd?define("@abp/ng.setting-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ngxs/store","@abp/ng.components/page","rxjs","@angular/router"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["setting-management"]={}),e.ng_core,e.ng_theme_shared,e.ng.core,e.store,e.page,e.rxjs,e.ng.router)}(this,(function(e,t,n,a,o,r,i,c){"use strict";var s=function(e){this.payload=e};s.type="[SettingManagement] Set Selected Tab";function l(e,t,n,a){var o,r=arguments.length,i=r<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var c=e.length-1;c>=0;c--)(o=e[c])&&(i=(r<3?o(i):r>3?o(t,n,i):o(t,n))||i);return r>3&&i&&Object.defineProperty(t,n,i),i}Object.create;Object.create;e.ɵc=function(){function e(){}return e.getSelectedTab=function(e){return e.selectedTab},e.prototype.settingManagementAction=function(e,t){(0,e.patchState)({selectedTab:t.payload})},e}(),e.ɵc.decorators=[{type:a.Injectable}],l([o.Action(s)],e.ɵc.prototype,"settingManagementAction",null),l([o.Selector()],e.ɵc,"getSelectedTab",null),e.ɵc=l([o.State({name:"SettingManagementState",defaults:{}})],e.ɵc);var g=function(){function t(e,t){this.store=e,this.settingTabsService=t,this.subscription=new i.Subscription,this.settings=[],this.trackByFn=function(e,t){return t.name}}return Object.defineProperty(t.prototype,"selected",{get:function(){var t=this.store.selectSnapshot(e.ɵc.getSelectedTab);return(null==t?void 0:t.component)?t:this.settings[0]||{}},set:function(e){this.store.dispatch(new s(e))},enumerable:!1,configurable:!0}),t.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},t.prototype.ngOnInit=function(){var e=this;this.subscription.add(this.settingTabsService.visible$.subscribe((function(t){e.settings=t,e.selected||(e.selected=e.settings[0])})))},t}();g.decorators=[{type:a.Component,args:[{selector:"abp-setting-management",template:'<abp-page [title]="\'AbpSettingManagement::Settings\' | abpLocalization">\n  <div id="SettingManagementWrapper">\n    <div class="card">\n      <div class="card-body">\n        <div class="row">\n          <div class="col-12 col-md-3 mb-2 mb-md-0">\n            <ul class="nav flex-column nav-pills" id="nav-tab" role="tablist">\n              <ng-container *abpFor="let setting of settings; trackBy: trackByFn">\n                <li\n                  (click)="selected = setting"\n                  class="nav-item pointer"\n                  *abpPermission="setting.requiredPolicy"\n                >\n                  <a\n                    class="nav-link"\n                    [id]="setting.name + \'-tab\'"\n                    role="tab"\n                    [class.active]="setting.name === selected.name"\n                    >{{ setting.name | abpLocalization }}</a\n                  >\n                </li>\n              </ng-container>\n            </ul>\n          </div>\n          <div class="col-12 col-md-9">\n            <div *ngIf="settings.length" class="tab-content">\n              <div class="tab-pane fade show active" [id]="selected.name + \'-tab\'" role="tabpanel">\n                <ng-container *ngComponentOutlet="selected.component"></ng-container>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</abp-page>\n'}]}],g.ctorParameters=function(){return[{type:o.Store},{type:t.SettingTabsService}]};var p={requiredPolicy:"AbpAccount.SettingManagement",replaceableComponent:{key:"SettingManagement.SettingManagementComponent",defaultComponent:g}},u=[{path:"",component:t.DynamicLayoutComponent,canActivate:[t.AuthGuard],children:[{path:"",component:t.ReplaceableRouteContainerComponent,data:p}]}],d=function(){};d.decorators=[{type:a.NgModule,args:[{imports:[c.RouterModule.forChild(u)],exports:[c.RouterModule]}]}];var b=function(){function e(){}return e.forChild=function(){return{ngModule:e,providers:[]}},e.forLazy=function(){return new t.LazyModuleFactory(e.forChild())},e}();b.decorators=[{type:a.NgModule,args:[{declarations:[g],exports:[g],imports:[d,t.CoreModule,n.ThemeSharedModule,r.PageModule,o.NgxsModule.forFeature([e.ɵc])]}]}],e.SettingManagementComponent=g,e.SettingManagementModule=b,e.ɵa=d,e.ɵd=s,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.setting-management.umd.min.js.map