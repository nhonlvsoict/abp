import { RestService } from '@abp/ng.core';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@abp/ng.core";
export class EmailSettingsService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'SettingManagement';
        this.get = () => this.restService.request({
            method: 'GET',
            url: '/api/setting-management/emailing',
        }, { apiName: this.apiName });
        this.update = (input) => this.restService.request({
            method: 'POST',
            url: '/api/setting-management/emailing',
            body: input,
        }, { apiName: this.apiName });
    }
}
EmailSettingsService.ɵprov = i0.ɵɵdefineInjectable({ factory: function EmailSettingsService_Factory() { return new EmailSettingsService(i0.ɵɵinject(i1.RestService)); }, token: EmailSettingsService, providedIn: "root" });
EmailSettingsService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
EmailSettingsService.ctorParameters = () => [
    { type: RestService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1haWwtc2V0dGluZ3Muc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3NldHRpbmctbWFuYWdlbWVudC9jb25maWcvc3JjL3Byb3h5L2VtYWlsLXNldHRpbmdzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMzQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7QUFLM0MsTUFBTSxPQUFPLG9CQUFvQjtJQWtCL0IsWUFBb0IsV0FBd0I7UUFBeEIsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFqQjVDLFlBQU8sR0FBRyxtQkFBbUIsQ0FBQztRQUU5QixRQUFHLEdBQUcsR0FBRyxFQUFFLENBQ1QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQXdCO1lBQzlDLE1BQU0sRUFBRSxLQUFLO1lBQ2IsR0FBRyxFQUFFLGtDQUFrQztTQUN4QyxFQUNELEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBRTdCLFdBQU0sR0FBRyxDQUFDLEtBQTZCLEVBQUUsRUFBRSxDQUN6QyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBWTtZQUNsQyxNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBRSxrQ0FBa0M7WUFDdkMsSUFBSSxFQUFFLEtBQUs7U0FDWixFQUNELEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBRWtCLENBQUM7Ozs7WUFyQmpELFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7O1lBTFEsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgRW1haWxTZXR0aW5nc0R0bywgVXBkYXRlRW1haWxTZXR0aW5nc0R0byB9IGZyb20gJy4vbW9kZWxzJztcbmltcG9ydCB7IFJlc3RTZXJ2aWNlIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEVtYWlsU2V0dGluZ3NTZXJ2aWNlIHtcbiAgYXBpTmFtZSA9ICdTZXR0aW5nTWFuYWdlbWVudCc7XG5cbiAgZ2V0ID0gKCkgPT5cbiAgICB0aGlzLnJlc3RTZXJ2aWNlLnJlcXVlc3Q8YW55LCBFbWFpbFNldHRpbmdzRHRvPih7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgdXJsOiAnL2FwaS9zZXR0aW5nLW1hbmFnZW1lbnQvZW1haWxpbmcnLFxuICAgIH0sXG4gICAgeyBhcGlOYW1lOiB0aGlzLmFwaU5hbWUgfSk7XG5cbiAgdXBkYXRlID0gKGlucHV0OiBVcGRhdGVFbWFpbFNldHRpbmdzRHRvKSA9PlxuICAgIHRoaXMucmVzdFNlcnZpY2UucmVxdWVzdDxhbnksIHZvaWQ+KHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgdXJsOiAnL2FwaS9zZXR0aW5nLW1hbmFnZW1lbnQvZW1haWxpbmcnLFxuICAgICAgYm9keTogaW5wdXQsXG4gICAgfSxcbiAgICB7IGFwaU5hbWU6IHRoaXMuYXBpTmFtZSB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlc3RTZXJ2aWNlOiBSZXN0U2VydmljZSkge31cbn1cbiJdfQ==