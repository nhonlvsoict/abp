export class ContextStrategy {
    constructor(context) {
        this.context = context;
    }
    /* tslint:disable-next-line:no-unused-variable */
    setContext(componentRef) {
        return this.context;
    }
}
export class NoContextStrategy extends ContextStrategy {
    constructor() {
        super(undefined);
    }
}
export class ComponentContextStrategy extends ContextStrategy {
    setContext(componentRef) {
        Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));
        componentRef.changeDetectorRef.detectChanges();
        return this.context;
    }
}
export class TemplateContextStrategy extends ContextStrategy {
    setContext() {
        return this.context;
    }
}
export const CONTEXT_STRATEGY = {
    None() {
        return new NoContextStrategy();
    },
    Component(context) {
        return new ComponentContextStrategy(context);
    },
    Template(context) {
        return new TemplateContextStrategy(context);
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC5zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvcmUvc3JjL2xpYi9zdHJhdGVnaWVzL2NvbnRleHQuc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFnQixlQUFlO0lBQ25DLFlBQW1CLE9BQWdDO1FBQWhDLFlBQU8sR0FBUCxPQUFPLENBQXlCO0lBQUcsQ0FBQztJQUV2RCxpREFBaUQ7SUFDakQsVUFBVSxDQUFDLFlBQWtEO1FBQzNELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8saUJBRVgsU0FBUSxlQUFrQjtJQUMxQjtRQUNFLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUNuQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sd0JBQW9ELFNBQVEsZUFBa0I7SUFDekYsVUFBVSxDQUFDLFlBQWlEO1FBQzFELE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzRixZQUFZLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDL0MsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyx1QkFBMEQsU0FBUSxlQUFrQjtJQUMvRixVQUFVO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHO0lBQzlCLElBQUk7UUFDRixPQUFPLElBQUksaUJBQWlCLEVBQUssQ0FBQztJQUNwQyxDQUFDO0lBQ0QsU0FBUyxDQUE0QixPQUF1QztRQUMxRSxPQUFPLElBQUksd0JBQXdCLENBQUksT0FBTyxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUNELFFBQVEsQ0FBbUMsT0FBc0M7UUFDL0UsT0FBTyxJQUFJLHVCQUF1QixDQUFJLE9BQU8sQ0FBQyxDQUFDO0lBQ2pELENBQUM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50UmVmLCBUZW1wbGF0ZVJlZiwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSW5mZXJyZWRDb250ZXh0T2YsIEluZmVycmVkSW5zdGFuY2VPZiB9IGZyb20gJy4uL21vZGVscyc7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb250ZXh0U3RyYXRlZ3k8VCA9IGFueT4ge1xuICBjb25zdHJ1Y3RvcihwdWJsaWMgY29udGV4dDogUGFydGlhbDxDb250ZXh0VHlwZTxUPj4pIHt9XG5cbiAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLXVudXNlZC12YXJpYWJsZSAqL1xuICBzZXRDb250ZXh0KGNvbXBvbmVudFJlZj86IENvbXBvbmVudFJlZjxJbmZlcnJlZEluc3RhbmNlT2Y8VD4+KTogUGFydGlhbDxDb250ZXh0VHlwZTxUPj4ge1xuICAgIHJldHVybiB0aGlzLmNvbnRleHQ7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIE5vQ29udGV4dFN0cmF0ZWd5PFxuICBUIGV4dGVuZHMgVHlwZTxhbnk+IHwgVGVtcGxhdGVSZWY8YW55PiA9IGFueVxuPiBleHRlbmRzIENvbnRleHRTdHJhdGVneTxUPiB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKHVuZGVmaW5lZCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENvbXBvbmVudENvbnRleHRTdHJhdGVneTxUIGV4dGVuZHMgVHlwZTxhbnk+ID0gYW55PiBleHRlbmRzIENvbnRleHRTdHJhdGVneTxUPiB7XG4gIHNldENvbnRleHQoY29tcG9uZW50UmVmOiBDb21wb25lbnRSZWY8SW5mZXJyZWRJbnN0YW5jZU9mPFQ+Pik6IFBhcnRpYWw8SW5mZXJyZWRJbnN0YW5jZU9mPFQ+PiB7XG4gICAgT2JqZWN0LmtleXModGhpcy5jb250ZXh0KS5mb3JFYWNoKGtleSA9PiAoY29tcG9uZW50UmVmLmluc3RhbmNlW2tleV0gPSB0aGlzLmNvbnRleHRba2V5XSkpO1xuICAgIGNvbXBvbmVudFJlZi5jaGFuZ2VEZXRlY3RvclJlZi5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgcmV0dXJuIHRoaXMuY29udGV4dDtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgVGVtcGxhdGVDb250ZXh0U3RyYXRlZ3k8VCBleHRlbmRzIFRlbXBsYXRlUmVmPGFueT4gPSBhbnk+IGV4dGVuZHMgQ29udGV4dFN0cmF0ZWd5PFQ+IHtcbiAgc2V0Q29udGV4dCgpOiBQYXJ0aWFsPEluZmVycmVkQ29udGV4dE9mPFQ+PiB7XG4gICAgcmV0dXJuIHRoaXMuY29udGV4dDtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgQ09OVEVYVF9TVFJBVEVHWSA9IHtcbiAgTm9uZTxUIGV4dGVuZHMgVHlwZTxhbnk+IHwgVGVtcGxhdGVSZWY8YW55PiA9IGFueT4oKSB7XG4gICAgcmV0dXJuIG5ldyBOb0NvbnRleHRTdHJhdGVneTxUPigpO1xuICB9LFxuICBDb21wb25lbnQ8VCBleHRlbmRzIFR5cGU8YW55PiA9IGFueT4oY29udGV4dDogUGFydGlhbDxJbmZlcnJlZEluc3RhbmNlT2Y8VD4+KSB7XG4gICAgcmV0dXJuIG5ldyBDb21wb25lbnRDb250ZXh0U3RyYXRlZ3k8VD4oY29udGV4dCk7XG4gIH0sXG4gIFRlbXBsYXRlPFQgZXh0ZW5kcyBUZW1wbGF0ZVJlZjxhbnk+ID0gYW55Pihjb250ZXh0OiBQYXJ0aWFsPEluZmVycmVkQ29udGV4dE9mPFQ+Pikge1xuICAgIHJldHVybiBuZXcgVGVtcGxhdGVDb250ZXh0U3RyYXRlZ3k8VD4oY29udGV4dCk7XG4gIH0sXG59O1xuXG50eXBlIENvbnRleHRUeXBlPFQ+ID0gVCBleHRlbmRzIFR5cGU8aW5mZXIgVT4gfCBUZW1wbGF0ZVJlZjxpbmZlciBVPiA/IFUgOiBuZXZlcjtcbiJdfQ==