import { Injectable } from '@angular/core';
import { RestService } from '../../../../../../services/rest.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../../../../services/rest.service";
export class AbpApiDefinitionService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'abp';
        this.getByModel = (model) => this.restService.request({
            method: 'GET',
            url: '/api/abp/api-definition',
            params: { includeTypes: model.includeTypes },
        }, { apiName: this.apiName });
    }
}
AbpApiDefinitionService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AbpApiDefinitionService_Factory() { return new AbpApiDefinitionService(i0.ɵɵinject(i1.RestService)); }, token: AbpApiDefinitionService, providedIn: "root" });
AbpApiDefinitionService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
AbpApiDefinitionService.ctorParameters = () => [
    { type: RestService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJwLWFwaS1kZWZpbml0aW9uLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9saWIvcHJveHkvdm9sby9hYnAvYXNwLW5ldC1jb3JlL212Yy9hcGktZXhwbG9yaW5nL2FicC1hcGktZGVmaW5pdGlvbi5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7QUFTdEUsTUFBTSxPQUFPLHVCQUF1QjtJQWFsQyxZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQVo1QyxZQUFPLEdBQUcsS0FBSyxDQUFDO1FBRWhCLGVBQVUsR0FBRyxDQUFDLEtBQStDLEVBQUUsRUFBRSxDQUMvRCxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FDdEI7WUFDRSxNQUFNLEVBQUUsS0FBSztZQUNiLEdBQUcsRUFBRSx5QkFBeUI7WUFDOUIsTUFBTSxFQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxZQUFZLEVBQUU7U0FDN0MsRUFDRCxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQzFCLENBQUM7SUFFMkMsQ0FBQzs7OztZQWhCakQsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25COzs7WUFSUSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVzdFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi8uLi8uLi9zZXJ2aWNlcy9yZXN0LnNlcnZpY2UnO1xuaW1wb3J0IHR5cGUge1xuICBBcHBsaWNhdGlvbkFwaURlc2NyaXB0aW9uTW9kZWwsXG4gIEFwcGxpY2F0aW9uQXBpRGVzY3JpcHRpb25Nb2RlbFJlcXVlc3REdG8sXG59IGZyb20gJy4uLy4uLy4uL2h0dHAvbW9kZWxpbmcvbW9kZWxzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEFicEFwaURlZmluaXRpb25TZXJ2aWNlIHtcbiAgYXBpTmFtZSA9ICdhYnAnO1xuXG4gIGdldEJ5TW9kZWwgPSAobW9kZWw6IEFwcGxpY2F0aW9uQXBpRGVzY3JpcHRpb25Nb2RlbFJlcXVlc3REdG8pID0+XG4gICAgdGhpcy5yZXN0U2VydmljZS5yZXF1ZXN0PGFueSwgQXBwbGljYXRpb25BcGlEZXNjcmlwdGlvbk1vZGVsPihcbiAgICAgIHtcbiAgICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgICAgdXJsOiAnL2FwaS9hYnAvYXBpLWRlZmluaXRpb24nLFxuICAgICAgICBwYXJhbXM6IHsgaW5jbHVkZVR5cGVzOiBtb2RlbC5pbmNsdWRlVHlwZXMgfSxcbiAgICAgIH0sXG4gICAgICB7IGFwaU5hbWU6IHRoaXMuYXBpTmFtZSB9LFxuICAgICk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZXN0U2VydmljZTogUmVzdFNlcnZpY2UpIHt9XG59XG4iXX0=