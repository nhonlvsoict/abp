{"version":3,"file":"ng-model.component.d.ts","sources":["ng-model.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Injector } from '@angular/core';\r\nexport declare class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n    injector: Injector;\r\n    protected _value: T;\r\n    protected cdRef: ChangeDetectorRef;\r\n    onChange: (value: T) => {};\r\n    onTouched: () => {};\r\n    disabled: boolean;\r\n    readonly: boolean;\r\n    valueFn: (value: U, previousValue?: T) => T;\r\n    valueLimitFn: (value: T, previousValue?: T) => any;\r\n    set value(value: T);\r\n    get value(): T;\r\n    get defaultValue(): T;\r\n    constructor(injector: Injector);\r\n    notifyValueChange(): void;\r\n    writeValue(value: T): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n}\r\n"]}