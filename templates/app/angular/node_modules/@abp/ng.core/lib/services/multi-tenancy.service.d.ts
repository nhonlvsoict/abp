import { Observable } from 'rxjs';
import { ABP } from '../models/common';
import { FindTenantResultDto, CurrentTenantDto } from '../proxy/volo/abp/asp-net-core/mvc/multi-tenancy/models';
import { RestService } from './rest.service';
import { AbpTenantService } from '../proxy/pages/abp/multi-tenancy';
import { ConfigStateService } from './config-state.service';
import { SessionStateService } from './session-state.service';
import * as ɵngcc0 from '@angular/core';
export declare class MultiTenancyService {
    private restService;
    private sessionState;
    private tenantService;
    private configStateService;
    tenantKey: string;
    domainTenant: CurrentTenantDto;
    isTenantBoxVisible: boolean;
    apiName: string;
    private setTenantToState;
    constructor(restService: RestService, sessionState: SessionStateService, tenantService: AbpTenantService, configStateService: ConfigStateService, tenantKey: string);
    /**
     * @deprecated Use AbpTenantService.findTenantByName method instead. To be deleted in v5.0.
     */
    findTenantByName(name: string, headers: ABP.Dictionary<string>): Observable<FindTenantResultDto>;
    /**
     * @deprecated Use AbpTenantService.findTenantById method instead. To be deleted in v5.0.
     */
    findTenantById(id: string, headers: ABP.Dictionary<string>): Observable<FindTenantResultDto>;
    setTenantByName(tenantName: string): Observable<FindTenantResultDto>;
    setTenantById(tenantId: string): Observable<FindTenantResultDto>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<MultiTenancyService, never>;
}

//# sourceMappingURL=multi-tenancy.service.d.ts.map