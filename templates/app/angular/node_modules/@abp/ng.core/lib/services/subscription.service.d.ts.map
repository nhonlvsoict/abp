{"version":3,"file":"subscription.service.d.ts","sources":["subscription.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import type { OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport type { Observable, PartialObserver } from 'rxjs';\r\nexport declare class SubscriptionService implements OnDestroy {\r\n    private subscription;\r\n    get isClosed(): boolean;\r\n    addOne<T extends unknown>(source$: Observable<T>, next?: (value: T) => void, error?: (error: any) => void): Subscription;\r\n    addOne<T extends unknown>(source$: Observable<T>, observer?: PartialObserver<T>): Subscription;\r\n    closeAll(): void;\r\n    closeOne(subscription: Subscription | undefined | null): void;\r\n    ngOnDestroy(): void;\r\n    removeOne(subscription: Subscription | undefined | null): void;\r\n    reset(): void;\r\n}\r\n"]}