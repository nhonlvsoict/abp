{"version":3,"file":"http-wait.service.d.ts","sources":["http-wait.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Injector } from '@angular/core';\r\nimport { HttpRequest } from '@angular/common/http';\r\nimport { InternalStore } from '../utils/internal-store-utils';\r\nexport interface HttpWaitState {\r\n    requests: HttpRequest<any>[];\r\n    filteredRequests: Array<HttpRequestInfo>;\r\n}\r\nexport interface HttpRequestInfo {\r\n    method: string;\r\n    endpoint: string;\r\n}\r\nexport declare class HttpWaitService {\r\n    protected store: InternalStore<HttpWaitState>;\r\n    private delay;\r\n    private destroy$;\r\n    constructor(injector: Injector);\r\n    getLoading(): boolean;\r\n    getLoading$(): import(\"rxjs\").Observable<boolean>;\r\n    updateLoading$(): import(\"rxjs\").Observable<boolean>;\r\n    clearLoading(): void;\r\n    addRequest(request: HttpRequest<any>): void;\r\n    deleteRequest(request: HttpRequest<any>): void;\r\n    addFilter(request: HttpRequestInfo | HttpRequestInfo[]): void;\r\n    removeFilter(request: HttpRequestInfo | HttpRequestInfo[]): void;\r\n    private applyFilter;\r\n    private isSameRequest;\r\n}\r\n"]}