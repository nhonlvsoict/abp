{"version":3,"file":"list.service.d.ts","sources":["list.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { Injector, OnDestroy } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ABP } from '../models/common';\r\nimport { PagedResultDto } from '../models/dtos';\r\nexport declare class ListService<QueryParamsType = ABP.PageQueryParams> implements OnDestroy {\r\n    private _filter;\r\n    set filter(value: string);\r\n    get filter(): string;\r\n    private _maxResultCount;\r\n    set maxResultCount(value: number);\r\n    get maxResultCount(): number;\r\n    private _skipCount;\r\n    private _page;\r\n    set page(value: number);\r\n    get page(): number;\r\n    private _sortKey;\r\n    set sortKey(value: string);\r\n    get sortKey(): string;\r\n    private _sortOrder;\r\n    set sortOrder(value: string);\r\n    get sortOrder(): string;\r\n    private _query$;\r\n    get query$(): Observable<QueryParamsType>;\r\n    private _isLoading$;\r\n    private destroy$;\r\n    get isLoading$(): Observable<boolean>;\r\n    get: () => void;\r\n    getWithoutPageReset: () => void;\r\n    private delay;\r\n    constructor(injector: Injector);\r\n    hookToQuery<T extends any>(streamCreatorCallback: QueryStreamCreatorCallback<T, QueryParamsType>): Observable<PagedResultDto<T>>;\r\n    ngOnDestroy(): void;\r\n    private resetPageWhenUnchanged;\r\n    private next;\r\n}\r\nexport declare type QueryStreamCreatorCallback<T, QueryParamsType = ABP.PageQueryParams> = (query: QueryParamsType) => Observable<PagedResultDto<T>>;\r\n"]}