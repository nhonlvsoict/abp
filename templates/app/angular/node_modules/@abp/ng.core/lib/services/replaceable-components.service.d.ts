import { NgZone } from '@angular/core';
import { Router } from '@angular/router';
import { Observable } from 'rxjs';
import { ReplaceableComponents } from '../models/replaceable-components';
import * as ɵngcc0 from '@angular/core';
export declare class ReplaceableComponentsService {
    private ngZone;
    private router;
    private readonly store;
    get replaceableComponents$(): Observable<ReplaceableComponents.ReplaceableComponent[]>;
    get replaceableComponents(): ReplaceableComponents.ReplaceableComponent[];
    get onUpdate$(): Observable<ReplaceableComponents.ReplaceableComponent[]>;
    constructor(ngZone: NgZone, router: Router);
    add(replaceableComponent: ReplaceableComponents.ReplaceableComponent, reload?: boolean): void;
    get(replaceableComponentKey: string): ReplaceableComponents.ReplaceableComponent;
    get$(replaceableComponentKey: string): Observable<ReplaceableComponents.ReplaceableComponent>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ReplaceableComponentsService, never>;
}

//# sourceMappingURL=replaceable-components.service.d.ts.map