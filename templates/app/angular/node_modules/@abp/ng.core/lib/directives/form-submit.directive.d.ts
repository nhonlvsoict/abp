import { ChangeDetectorRef, ElementRef, EventEmitter, OnInit } from '@angular/core';
import { FormGroupDirective } from '@angular/forms';
import { SubscriptionService } from '../services/subscription.service';
import * as ɵngcc0 from '@angular/core';
export declare class FormSubmitDirective implements OnInit {
    private formGroupDirective;
    private host;
    private cdRef;
    private subscription;
    debounce: number;
    notValidateOnSubmit: string | boolean;
    readonly ngSubmit: EventEmitter<any>;
    executedNgSubmit: boolean;
    constructor(formGroupDirective: FormGroupDirective, host: ElementRef<HTMLFormElement>, cdRef: ChangeDetectorRef, subscription: SubscriptionService);
    ngOnInit(): void;
    markAsDirty(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<FormSubmitDirective, [{ self: true; }, null, null, null]>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<FormSubmitDirective, "form[ngSubmit][formGroup]", never, { "debounce": "debounce"; "notValidateOnSubmit": "notValidateOnSubmit"; }, { "ngSubmit": "ngSubmit"; }, never>;
}

//# sourceMappingURL=form-submit.directive.d.ts.map