import { Injector } from '@angular/core';
import { Observable } from 'rxjs';
import { ActivatedRoute } from '@angular/router';
import { ConfigStateService, MultiTenancyService } from '@abp/ng.core';
import * as ɵngcc0 from '@angular/core';
export declare class AuthWrapperService {
    readonly multiTenancy: MultiTenancyService;
    private configState;
    isMultiTenancyEnabled$: Observable<any>;
    get enableLocalLogin$(): Observable<boolean>;
    tenantBoxKey: string;
    route: ActivatedRoute;
    get isTenantBoxVisibleForCurrentRoute(): any;
    get isTenantBoxVisible(): boolean;
    constructor(multiTenancy: MultiTenancyService, configState: ConfigStateService, injector: Injector);
    private getMostInnerChild;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AuthWrapperService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<AuthWrapperService>;
}

//# sourceMappingURL=auth-wrapper.service.d.ts.map