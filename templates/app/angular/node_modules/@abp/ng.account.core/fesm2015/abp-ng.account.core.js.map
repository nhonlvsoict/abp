{"version":3,"file":"abp-ng.account.core.js","sources":["../../../packages/account-core/src/lib/auth-wrapper.service.ts","../../../packages/account-core/src/lib/tenant-box.service.ts","../../../packages/account-core/src/public-api.ts","../../../packages/account-core/src/abp-ng.account.core.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { ConfigStateService, MultiTenancyService } from '@abp/ng.core';\n\n@Injectable()\nexport class AuthWrapperService {\n  isMultiTenancyEnabled$ = this.configState.getDeep$('multiTenancy.isEnabled');\n\n  get enableLocalLogin$(): Observable<boolean> {\n    return this.configState\n      .getSetting$('Abp.Account.EnableLocalLogin')\n      .pipe(map(value => value?.toLowerCase() !== 'false'));\n  }\n\n  tenantBoxKey = 'Account.TenantBoxComponent';\n  route: ActivatedRoute;\n\n  get isTenantBoxVisibleForCurrentRoute() {\n    return this.getMostInnerChild().data.tenantBoxVisible ?? true;\n  }\n\n  get isTenantBoxVisible() {\n    return this.isTenantBoxVisibleForCurrentRoute && this.multiTenancy.isTenantBoxVisible;\n  }\n\n  constructor(\n    public readonly multiTenancy: MultiTenancyService,\n    private configState: ConfigStateService,\n    injector: Injector,\n  ) {\n    this.route = injector.get(ActivatedRoute);\n  }\n\n  private getMostInnerChild() {\n    let child = this.route.snapshot;\n    let depth = 0;\n    const depthLimit = 10;\n    while (child.firstChild && depth < depthLimit) {\n      child = child.firstChild;\n      depth++;\n    }\n    return child;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport {\n  AbpApplicationConfigurationService,\n  AbpTenantService,\n  ConfigStateService,\n  CurrentTenantDto,\n  SessionStateService,\n} from '@abp/ng.core';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class TenantBoxService {\n  currentTenant$ = this.sessionState.getTenant$();\n\n  name: string;\n\n  isModalVisible: boolean;\n\n  modalBusy: boolean;\n\n  constructor(\n    private toasterService: ToasterService,\n    private tenantService: AbpTenantService,\n    private sessionState: SessionStateService,\n    private configState: ConfigStateService,\n    private appConfigService: AbpApplicationConfigurationService,\n  ) {}\n\n  onSwitch() {\n    const tenant = this.sessionState.getTenant();\n    this.name = tenant?.name;\n    this.isModalVisible = true;\n  }\n\n  save() {\n    if (!this.name) {\n      this.setTenant(null);\n      this.isModalVisible = false;\n      return;\n    }\n\n    this.modalBusy = true;\n    this.tenantService\n      .findTenantByName(this.name, {})\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(({ success, tenantId: id, ...tenant }) => {\n        if (!success) {\n          this.showError();\n          return;\n        }\n\n        this.setTenant({ ...tenant, id, isAvailable: true });\n        this.isModalVisible = false;\n      });\n  }\n\n  private setTenant(tenant: CurrentTenantDto) {\n    this.sessionState.setTenant(tenant);\n    this.appConfigService.get().subscribe(res => this.configState.setState(res));\n  }\n\n  private showError() {\n    this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\n      messageLocalizationParams: [this.name],\n    });\n  }\n}\n","/*\n * Public API Surface of account-core\n */\n\nexport * from './lib/auth-wrapper.service';\nexport * from './lib/tenant-box.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}