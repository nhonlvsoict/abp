(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@abp/ng.core'), require('@angular/core'), require('@ng-bootstrap/ng-bootstrap'), require('ng-zorro-antd/core/no-animation'), require('ng-zorro-antd/tree'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@abp/ng.components/tree', ['exports', '@abp/ng.core', '@angular/core', '@ng-bootstrap/ng-bootstrap', 'ng-zorro-antd/core/no-animation', 'ng-zorro-antd/tree', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.abp = global.abp || {}, global.abp.ng = global.abp.ng || {}, global.abp.ng.components = global.abp.ng.components || {}, global.abp.ng.components.tree = {}), global.ng_core, global.ng.core, global.ngBootstrap, global.noAnimation, global.tree, global.rxjs));
}(this, (function (exports, ng_core, core, ngBootstrap, noAnimation, tree, rxjs) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var TreeNodeTemplateDirective = /** @class */ (function () {
        function TreeNodeTemplateDirective(template) {
            this.template = template;
        }
        return TreeNodeTemplateDirective;
    }());
    TreeNodeTemplateDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[abpTreeNodeTemplate],[abp-tree-node-template]',
                },] }
    ];
    TreeNodeTemplateDirective.ctorParameters = function () { return [
        { type: core.TemplateRef }
    ]; };

    var ExpandedIconTemplateDirective = /** @class */ (function () {
        function ExpandedIconTemplateDirective(template) {
            this.template = template;
        }
        return ExpandedIconTemplateDirective;
    }());
    ExpandedIconTemplateDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[abpTreeExpandedIconTemplate],[abp-tree-expanded-icon-template]',
                },] }
    ];
    ExpandedIconTemplateDirective.ctorParameters = function () { return [
        { type: core.TemplateRef }
    ]; };

    var TreeComponent = /** @class */ (function () {
        function TreeComponent() {
            var _this = this;
            this.dropdowns = {};
            this.checkedKeysChange = new core.EventEmitter();
            this.expandedKeysChange = new core.EventEmitter();
            this.selectedNodeChange = new core.EventEmitter();
            this.dropOver = new core.EventEmitter();
            this.noAnimation = true;
            this.checkedKeys = [];
            this.nodes = [];
            this.expandedKeys = [];
            this.isNodeSelected = function (node) { var _a; return ((_a = _this.selectedNode) === null || _a === void 0 ? void 0 : _a.id) === node.key; };
            this.beforeDrop = function (event) {
                _this.dropPosition = event.pos;
                return rxjs.of(false);
            };
        }
        TreeComponent.prototype.onSelectedNodeChange = function (node) {
            this.selectedNode = node.origin.entity;
            this.selectedNodeChange.emit(node.origin.entity);
        };
        TreeComponent.prototype.onCheckboxChange = function (event) {
            this.checkedKeys = __spread(event.keys);
            this.checkedKeysChange.emit(event.keys);
        };
        TreeComponent.prototype.onExpandedKeysChange = function (event) {
            this.expandedKeys = __spread(event.keys);
            this.expandedKeysChange.emit(event.keys);
        };
        TreeComponent.prototype.onDrop = function (event) {
            event.event.stopPropagation();
            event.event.preventDefault();
            event.pos = this.dropPosition;
            this.dropOver.emit(event);
        };
        TreeComponent.prototype.initDropdown = function (key, dropdown) {
            this.dropdowns[key] = dropdown;
        };
        return TreeComponent;
    }());
    TreeComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'abp-tree',
                    template: "<nz-tree\n  [nzBeforeDrop]=\"beforeDrop\"\n  [nzDraggable]=\"draggable\"\n  [nzCheckStrictly]=\"checkStrictly\"\n  [nzCheckable]=\"checkable\"\n  [nzCheckedKeys]=\"checkedKeys\"\n  [nzData]=\"nodes\"\n  [nzTreeTemplate]=\"treeTemplate\"\n  [nzExpandedKeys]=\"expandedKeys\"\n  [nzExpandedIcon]=\"expandedIconTemplate?.template || defaultIconTemplate\"\n  (nzExpandChange)=\"onExpandedKeysChange($event)\"\n  (nzCheckBoxChange)=\"onCheckboxChange($event)\"\n  (nzOnDrop)=\"onDrop($event)\"\n  [nzNoAnimation]=\"noAnimation\"\n  (nzContextMenu)=\"dropdowns[$event.node?.key]?.toggle()\"\n></nz-tree>\n<ng-template #treeTemplate let-node>\n  <div\n    class=\"node-wrapper\"\n    [class.selected]=\"isNodeSelected(node)\"\n    [title]=\"node.title\"\n    (click)=\"onSelectedNodeChange(node)\"\n  >\n    <ng-container *ngTemplateOutlet=\"nodeTemplate; context: { $implicit: node }\"></ng-container>\n\n    <ng-template #nodeTemplate let-node>\n      <div class=\"d-inline-block\">\n        <ng-container\n          *ngTemplateOutlet=\"\n            customNodeTemplate ? customNodeTemplate?.template : defaultNodeTemplate;\n            context: { $implicit: node }\n          \"\n        ></ng-container>\n      </div>\n\n      <div\n        #dropdown=\"ngbDropdown\"\n        *ngIf=\"menu\"\n        class=\"d-inline-block ml-1\"\n        ngbDropdown\n        placement=\"bottom\"\n        container=\"body\"\n        (abpInit)=\"initDropdown(node.key, dropdown)\"\n      >\n        <i\n          class=\"fas fa-caret-down text-muted\"\n          ngbDropdownToggle\n          [class.dropdown-toggle]=\"false\"\n        ></i>\n        <div ngbDropdownMenu>\n          <ng-template *ngTemplateOutlet=\"menu; context: { $implicit: node }\"></ng-template>\n        </div>\n      </div>\n    </ng-template>\n\n    <ng-template #defaultNodeTemplate let-node>\n      <span>{{ node.title }}</span>\n    </ng-template>\n  </div>\n</ng-template>\n\n<ng-template #defaultIconTemplate let-node let-origin=\"origin\">\n  <i style=\"line-height: 28px\" aria-hidden=\"true\">\n    <ng-container *ngTemplateOutlet=\"node.isExpanded ? minusIcon : plusIcon\"></ng-container\n  ></i>\n</ng-template>\n\n<ng-template #minusIcon>\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n  >\n    <path\n      d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5 11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5 10.5-10.5zm-6.5 10h13v1h-13v-1z\"\n    />\n  </svg>\n</ng-template>\n\n<ng-template #plusIcon>\n  <svg\n    width=\"15\"\n    height=\"15\"\n    viewBox=\"0 0 24 24\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    fill-rule=\"evenodd\"\n    clip-rule=\"evenodd\"\n  >\n    <path\n      d=\"M11.5 0c6.347 0 11.5 5.153 11.5 11.5s-5.153 11.5-11.5 11.5-11.5-5.153-11.5-11.5 5.153-11.5 11.5-11.5zm0 1c5.795 0 10.5 4.705 10.5 10.5s-4.705 10.5-10.5 10.5-10.5-4.705-10.5-10.5 4.705-10.5 10.5-10.5zm.5 10h6v1h-6v6h-1v-6h-6v-1h6v-6h1v6z\"\n    />\n  </svg>\n</ng-template>\n",
                    encapsulation: core.ViewEncapsulation.None,
                    styles: [".ant-tree-checkbox,.ant-tree-checkbox-wrapper{box-sizing:border-box;font-variant:tabular-nums;list-style:none;font-feature-settings:\"tnum\"}@-webkit-keyframes antCheckboxEffect{0%{transform:scale(1);opacity:.5}to{transform:scale(1.6);opacity:0}}@keyframes antCheckboxEffect{0%{transform:scale(1);opacity:.5}to{transform:scale(1.6);opacity:0}}.ant-tree-treenode-leaf-last .ant-tree-switcher-leaf-line:before{top:auto!important;bottom:auto!important;height:14px!important}.ant-tree.ant-tree-directory .ant-tree-treenode{position:relative}.ant-tree.ant-tree-directory .ant-tree-treenode:before{position:absolute;top:0;right:0;bottom:4px;left:0;transition:background-color .3s;content:\"\";pointer-events:none}.ant-tree.ant-tree-directory .ant-tree-treenode:hover:before{background:#f5f5f5}.ant-tree.ant-tree-directory .ant-tree-treenode>*{z-index:1}.ant-tree.ant-tree-directory .ant-tree-treenode .ant-tree-switcher{transition:color .3s}.ant-tree.ant-tree-directory .ant-tree-treenode .ant-tree-node-content-wrapper{border-radius:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ant-tree.ant-tree-directory .ant-tree-treenode .ant-tree-node-content-wrapper:hover{background:0 0}.ant-tree.ant-tree-directory .ant-tree-treenode .ant-tree-node-content-wrapper.ant-tree-node-selected{color:#fff;background:0 0}.ant-tree.ant-tree-directory .ant-tree-treenode-selected:before,.ant-tree.ant-tree-directory .ant-tree-treenode-selected:hover:before{background:#1890ff}.ant-tree.ant-tree-directory .ant-tree-treenode-selected .ant-tree-switcher{color:#fff}.ant-tree.ant-tree-directory .ant-tree-treenode-selected .ant-tree-node-content-wrapper{color:#fff;background:0 0}.ant-tree-checkbox{padding:0;color:rgba(0,0,0,.85);font-size:14px;position:relative;line-height:1;white-space:nowrap;outline:0;cursor:pointer}.ant-tree-checkbox-input:focus+.ant-tree-checkbox-inner,.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox-inner,.ant-tree-checkbox:hover .ant-tree-checkbox-inner{border-color:#1890ff}.ant-tree-checkbox-checked:after{position:absolute;top:0;left:0;width:100%;height:100%;border:1px solid #1890ff;border-radius:2px;visibility:hidden;-webkit-animation:antCheckboxEffect .36s ease-in-out;animation:antCheckboxEffect .36s ease-in-out;-webkit-animation-fill-mode:backwards;animation-fill-mode:backwards;content:\"\"}.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox:after,.ant-tree-checkbox:hover:after{visibility:visible}.ant-tree-checkbox-inner{position:relative;top:0;left:0;display:block;width:16px;height:16px;direction:ltr;background-color:#fff;border:1px solid #d9d9d9;border-radius:2px;border-collapse:separate;transition:all .3s}.ant-tree-checkbox-inner:after{position:absolute;top:50%;left:22%;display:table;width:5.71px;height:9.14px;border:2px solid #fff;border-top:0;border-left:0;transform:rotate(45deg) scale(0) translate(-50%,-50%);opacity:0;transition:all .1s cubic-bezier(.71,-.46,.88,.6),opacity .1s;content:\" \"}.ant-tree-checkbox-input{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;width:100%;height:100%;cursor:pointer;opacity:0}.ant-tree-checkbox-disabled,.ant-tree-checkbox-disabled+span,.ant-tree-checkbox-disabled .ant-tree-checkbox-input{cursor:not-allowed}.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after{position:absolute;display:table;border:2px solid #fff;border-top:0;border-left:0;transform:rotate(45deg) scale(1) translate(-50%,-50%);opacity:1;transition:all .2s cubic-bezier(.12,.4,.29,1.46) .1s;content:\" \"}.ant-tree-checkbox-checked .ant-tree-checkbox-inner{background-color:#1890ff;border-color:#1890ff}.ant-tree-checkbox-disabled.ant-tree-checkbox-checked .ant-tree-checkbox-inner:after{border-color:rgba(0,0,0,.25);-webkit-animation-name:none;animation-name:none}.ant-tree-checkbox-disabled .ant-tree-checkbox-inner{background-color:#f5f5f5;border-color:#d9d9d9!important}.ant-tree-checkbox-disabled .ant-tree-checkbox-inner:after{border-color:#f5f5f5;border-collapse:separate;-webkit-animation-name:none;animation-name:none}.ant-tree-checkbox-disabled+span{color:rgba(0,0,0,.25)}.ant-tree-checkbox-disabled:hover:after,.ant-tree-checkbox-wrapper:hover .ant-tree-checkbox-disabled:after{visibility:hidden}.ant-tree-checkbox-wrapper{margin:0;padding:0;color:rgba(0,0,0,.85);font-size:14px;display:inline-flex;align-items:baseline;line-height:unset;cursor:pointer}.ant-tree-checkbox-wrapper.ant-tree-checkbox-wrapper-disabled{cursor:not-allowed}.ant-tree-checkbox-wrapper+.ant-tree-checkbox-wrapper{margin-left:8px}.ant-tree-checkbox+span{padding-right:8px;padding-left:8px}.ant-tree,.ant-tree-checkbox-group{box-sizing:border-box;padding:0;color:rgba(0,0,0,.85);font-size:14px;font-variant:tabular-nums;line-height:1.5715;list-style:none;font-feature-settings:\"tnum\"}.ant-tree-checkbox-group{margin:0;display:inline-block}.ant-tree-checkbox-group-item{margin-right:8px}.ant-tree-checkbox-group-item:last-child{margin-right:0}.ant-tree-checkbox-group-item+.ant-tree-checkbox-group-item{margin-left:0}.ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner{background-color:#fff;border-color:#d9d9d9}.ant-tree-checkbox-indeterminate .ant-tree-checkbox-inner:after{top:50%;left:50%;width:8px;height:8px;background-color:#1890ff;border:0;transform:translate(-50%,-50%) scale(1);opacity:1;content:\" \"}.ant-tree-checkbox-indeterminate.ant-tree-checkbox-disabled .ant-tree-checkbox-inner:after{background-color:rgba(0,0,0,.25);border-color:rgba(0,0,0,.25)}.ant-tree{margin:0;background:#fff;border-radius:2px;transition:background-color .3s}.ant-tree-focused:not(:hover):not(.ant-tree-active-focused){background:#e6f7ff}.ant-tree-list-holder-inner{align-items:flex-start}.ant-tree.ant-tree-block-node .ant-tree-list-holder-inner{align-items:stretch}.ant-tree.ant-tree-block-node .ant-tree-list-holder-inner .ant-tree-node-content-wrapper{flex:auto}.ant-tree .ant-tree-treenode{display:flex;align-items:flex-start;padding:0 0 4px;outline:0}.ant-tree .ant-tree-treenode-disabled .ant-tree-node-content-wrapper{color:rgba(0,0,0,.25);cursor:not-allowed}.ant-tree .ant-tree-treenode-disabled .ant-tree-node-content-wrapper:hover{background:0 0}.ant-tree .ant-tree-treenode-active .ant-tree-node-content-wrapper{background:#f5f5f5}.ant-tree .ant-tree-treenode:not(.ant-tree .ant-tree-treenode-disabled).filter-node .ant-tree-title{color:inherit;font-weight:500}.ant-tree-indent{align-self:stretch;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ant-tree-indent-unit{display:inline-block;width:24px}.ant-tree-switcher{position:relative;flex:none;align-self:stretch;width:24px;margin:0;line-height:24px;text-align:center;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ant-tree-switcher .ant-select-tree-switcher-icon,.ant-tree-switcher .ant-tree-switcher-icon{display:inline-block;font-size:10px;vertical-align:baseline}.ant-tree-switcher .ant-select-tree-switcher-icon svg,.ant-tree-switcher .ant-tree-switcher-icon svg{transition:transform .3s}.ant-tree-switcher-noop{cursor:default}.ant-tree-switcher_close .ant-tree-switcher-icon svg{transform:rotate(-90deg)}.ant-tree-switcher-loading-icon{color:#1890ff}.ant-tree-switcher-leaf-line{position:relative;z-index:1;display:inline-block;width:100%;height:100%}.ant-tree-switcher-leaf-line:after,.ant-tree-switcher-leaf-line:before{position:absolute;margin-left:-1px;content:\" \"}.ant-tree-switcher-leaf-line:before{top:0;bottom:-4px;border-left:1px solid #d9d9d9}.ant-tree-switcher-leaf-line:after{width:10px;height:14px;border-bottom:1px solid #d9d9d9}.ant-tree-checkbox{top:auto;margin:4px 8px 0 0}.ant-tree .ant-tree-node-content-wrapper{position:relative;z-index:auto;min-height:24px;margin:0;padding:0 4px;color:inherit;line-height:24px;background:0 0;border-radius:2px;cursor:pointer;transition:all .3s,border 0s,line-height 0s,box-shadow 0s}.ant-tree .ant-tree-node-content-wrapper:hover{background-color:#f5f5f5}.ant-tree .ant-tree-node-content-wrapper.ant-tree-node-selected{background-color:#bae7ff}.ant-tree .ant-tree-node-content-wrapper .ant-tree-iconEle{display:inline-block;width:24px;height:24px;line-height:24px;text-align:center;vertical-align:top}.ant-tree-show-line .ant-tree-indent-unit-end:before,.ant-tree .ant-tree-node-content-wrapper .ant-tree-iconEle:empty{display:none}.ant-tree-unselectable .ant-tree-node-content-wrapper:hover{background-color:transparent}.ant-tree-node-content-wrapper[draggable=true]{line-height:24px;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ant-tree-node-content-wrapper[draggable=true] .ant-tree-drop-indicator{position:absolute;z-index:1;height:2px;background-color:#1890ff;border-radius:1px;pointer-events:none}.ant-tree-node-content-wrapper[draggable=true] .ant-tree-drop-indicator:after{position:absolute;top:-3px;left:-6px;width:8px;height:8px;background-color:transparent;border:2px solid #1890ff;border-radius:50%;content:\"\"}.ant-tree .ant-tree-treenode.drop-container>[draggable]{box-shadow:0 0 0 2px #1890ff}.ant-tree-show-line .ant-tree-indent-unit{position:relative;height:100%}.ant-tree-show-line .ant-tree-indent-unit:before{position:absolute;top:0;right:12px;bottom:-4px;border-right:1px solid #d9d9d9;content:\"\"}.ant-tree-show-line .ant-tree-switcher{background:#fff}.ant-tree-show-line .ant-tree-switcher-line-icon{vertical-align:-.225em}.ant-tree-rtl{direction:rtl}.ant-tree-rtl .ant-tree-node-content-wrapper[draggable=true] .ant-tree-drop-indicator:after{right:-6px;left:unset}.ant-tree .ant-tree-treenode-rtl{direction:rtl}.ant-tree-rtl .ant-tree-switcher_close .ant-tree-switcher-icon svg{transform:rotate(90deg)}.ant-tree-rtl.ant-tree-show-line .ant-tree-indent-unit:before{right:auto;left:-13px;border-right:none;border-left:1px solid #d9d9d9}.ant-tree-rtl.ant-tree-checkbox,.ant-tree-select-dropdown-rtl .ant-select-tree-checkbox{margin:4px 0 0 8px}.font-highlight{color:#ff4d4f}.ant-tree-child-tree{overflow:hidden}nz-tree{display:block}", ".ant-tree{color:inherit}.ant-tree .ant-tree-node-content-wrapper.ant-tree-node-selected{background-color:transparent}.ant-tree .ant-tree-switcher{line-height:17px}.ant-tree .ant-tree-node-content-wrapper{width:100%;padding:0}.ant-tree .node-wrapper{width:100%;position:relative;display:inline-block;margin:0;line-height:24px;text-decoration:none;vertical-align:top;border-radius:2px;cursor:pointer;padding:0 5px 0 8px;border:1px solid transparent}.ant-tree .ellipsis{position:absolute;right:8px;top:1px;cursor:pointer}"]
                },] }
    ];
    TreeComponent.propDecorators = {
        menu: [{ type: core.ContentChild, args: ['menu',] }],
        customNodeTemplate: [{ type: core.ContentChild, args: [TreeNodeTemplateDirective,] }],
        expandedIconTemplate: [{ type: core.ContentChild, args: [ExpandedIconTemplateDirective,] }],
        checkedKeysChange: [{ type: core.Output }],
        expandedKeysChange: [{ type: core.Output }],
        selectedNodeChange: [{ type: core.Output }],
        dropOver: [{ type: core.Output }],
        noAnimation: [{ type: core.Input }],
        draggable: [{ type: core.Input }],
        checkable: [{ type: core.Input }],
        checkStrictly: [{ type: core.Input }],
        checkedKeys: [{ type: core.Input }],
        nodes: [{ type: core.Input }],
        expandedKeys: [{ type: core.Input }],
        selectedNode: [{ type: core.Input }],
        isNodeSelected: [{ type: core.Input }],
        beforeDrop: [{ type: core.Input }]
    };

    var templates = [TreeNodeTemplateDirective, ExpandedIconTemplateDirective];
    var exported = __spread(templates, [TreeComponent]);
    var TreeModule = /** @class */ (function () {
        function TreeModule() {
        }
        return TreeModule;
    }());
    TreeModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [ng_core.CoreModule, tree.NzTreeModule, ngBootstrap.NgbDropdownModule, noAnimation.NzNoAnimationModule],
                    exports: __spread(exported),
                    declarations: __spread(exported),
                },] }
    ];

    var BaseNode = /** @class */ (function () {
        function BaseNode(id, parentId) {
            this.id = id;
            this.parentId = parentId;
        }
        return BaseNode;
    }());
    var TreeNode = /** @class */ (function (_super) {
        __extends(TreeNode, _super);
        function TreeNode(entity, nameResolver) {
            if (nameResolver === void 0) { nameResolver = function (ent) { return ent.displayName || ent.name; }; }
            var _this = _super.call(this, entity.id, entity.parentId) || this;
            _this.entity = entity;
            _this.nameResolver = nameResolver;
            _this.icon = null;
            _this.children = [];
            _this.isLeaf = true;
            _this.checked = false;
            _this.selected = false;
            _this.expanded = false;
            _this.selectable = true;
            _this.disabled = false;
            _this.disableCheckbox = false;
            _this.key = entity.id;
            _this.title = nameResolver(entity);
            return _this;
        }
        return TreeNode;
    }(BaseNode));
    var TreeAdapter = /** @class */ (function () {
        function TreeAdapter(list) {
            if (list === void 0) { list = []; }
            this.list = list;
            this.tree = createTreeFromList(this.list);
        }
        TreeAdapter.prototype.getList = function () {
            return this.list;
        };
        TreeAdapter.prototype.getTree = function () {
            return this.tree;
        };
        TreeAdapter.prototype.handleDrop = function (_a) {
            var key = _a.key, parentNode = _a.parentNode;
            var index = this.list.findIndex(function (_a) {
                var id = _a.id;
                return id === key;
            });
            this.list[index].parentId = parentNode ? parentNode.key : null;
            this.tree = createTreeFromList(this.list);
        };
        TreeAdapter.prototype.handleRemove = function (_a) {
            var key = _a.key;
            this.updateTreeFromList(this.list.filter(function (item) { return item.id !== key; }));
        };
        TreeAdapter.prototype.handleUpdate = function (_a) {
            var key = _a.key, children = _a.children;
            /**
             * When we need to update a node with new children, first we need to remove any descendant nodes.
             * If we remove immediate children and create a new tree, any other descendant nodes will be removed
             * and we won't need to recursively remove sub children.
             * Then, you simply add back the new children and create a new tree.
             */
            var listWithDescendantNodesRemoved = this.updateTreeFromList(this.list.filter(function (item) { return item.parentId !== key; }));
            this.updateTreeFromList(listWithDescendantNodesRemoved.concat(children));
        };
        TreeAdapter.prototype.updateTreeFromList = function (list) {
            this.tree = createTreeFromList(list);
            this.list = createListFromTree(this.tree);
            return this.list;
        };
        return TreeAdapter;
    }());
    // UTILITY FUNCTIONS
    function createTreeFromList(list) {
        var map = createMapFromList(list);
        var tree = [];
        list.forEach(function (row) {
            var parentId = row.parentId;
            var node = map.get(row.id);
            if (parentId) {
                var parent = map.get(parentId);
                if (!parent)
                    return;
                parent.children.push(node);
                parent.isLeaf = false;
            }
            else {
                tree.push(node);
            }
        });
        return tree;
    }
    function createListFromTree(tree, list) {
        if (list === void 0) { list = []; }
        tree.forEach(function (node) {
            list.push(Object.assign(Object.assign({}, node.entity), { parentId: node.parentId }));
            if (node.children)
                createListFromTree(node.children, list);
        });
        return list;
    }
    function createMapFromList(list, map) {
        if (map === void 0) { map = new Map(); }
        list.forEach(function (row) { return map.set(row.id, new TreeNode(row)); });
        return map;
    }

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BaseNode = BaseNode;
    exports.ExpandedIconTemplateDirective = ExpandedIconTemplateDirective;
    exports.TreeAdapter = TreeAdapter;
    exports.TreeComponent = TreeComponent;
    exports.TreeModule = TreeModule;
    exports.TreeNodeTemplateDirective = TreeNodeTemplateDirective;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=abp-ng.components-tree.umd.js.map
