import { EventEmitter, TemplateRef } from '@angular/core';
import { NzFormatEmitEvent, NzFormatBeforeDropEvent } from 'ng-zorro-antd/tree';
import { TreeNodeTemplateDirective } from '../templates/tree-node-template.directive';
import { ExpandedIconTemplateDirective } from '../templates/expanded-icon-template.directive';
import { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';
import * as ɵngcc0 from '@angular/core';
export declare type DropEvent = NzFormatEmitEvent & {
    pos: number;
};
export declare class TreeComponent {
    dropPosition: number;
    dropdowns: {
        [key: string]: NgbDropdown;
    };
    menu: TemplateRef<any>;
    customNodeTemplate: TreeNodeTemplateDirective;
    expandedIconTemplate: ExpandedIconTemplateDirective;
    readonly checkedKeysChange: EventEmitter<any>;
    readonly expandedKeysChange: EventEmitter<string[]>;
    readonly selectedNodeChange: EventEmitter<any>;
    readonly dropOver: EventEmitter<DropEvent>;
    noAnimation: boolean;
    draggable: boolean;
    checkable: boolean;
    checkStrictly: boolean;
    checkedKeys: any[];
    nodes: any[];
    expandedKeys: string[];
    selectedNode: any;
    isNodeSelected: (node: any) => boolean;
    beforeDrop: (event: NzFormatBeforeDropEvent) => import("rxjs").Observable<boolean>;
    onSelectedNodeChange(node: any): void;
    onCheckboxChange(event: any): void;
    onExpandedKeysChange(event: any): void;
    onDrop(event: DropEvent): void;
    initDropdown(key: string, dropdown: NgbDropdown): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TreeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TreeComponent, "abp-tree", never, { "noAnimation": "noAnimation"; "checkedKeys": "checkedKeys"; "nodes": "nodes"; "expandedKeys": "expandedKeys"; "isNodeSelected": "isNodeSelected"; "beforeDrop": "beforeDrop"; "selectedNode": "selectedNode"; "draggable": "draggable"; "checkable": "checkable"; "checkStrictly": "checkStrictly"; }, { "checkedKeysChange": "checkedKeysChange"; "expandedKeysChange": "expandedKeysChange"; "selectedNodeChange": "selectedNodeChange"; "dropOver": "dropOver"; }, ["menu", "customNodeTemplate", "expandedIconTemplate"], never>;
}

//# sourceMappingURL=tree.component.d.ts.map