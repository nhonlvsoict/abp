!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@angular/forms"),require("@ngxs/store"),require("rxjs/operators"),require("@abp/ng.theme.shared/extensions"),require("@abp/ng.feature-management"),require("@ng-bootstrap/ng-bootstrap"),require("@ngx-validate/core"),require("@angular/router")):"function"==typeof define&&define.amd?define("@abp/ng.tenant-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@angular/forms","@ngxs/store","rxjs/operators","@abp/ng.theme.shared/extensions","@abp/ng.feature-management","@ng-bootstrap/ng-bootstrap","@ngx-validate/core","@angular/router"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["tenant-management"]={}),e.i1,e.ng_theme_shared,e.ng.core,e.ng.forms,e.i1$1,e.rxjs.operators,e.extensions,e.ng_featureManagement,e.ngBootstrap,e.core,e.ng.router)}(this,(function(e,t,n,a,o,r,i,s,c,u,p,l){"use strict";function d(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var m=d(t),T=d(a),g=d(r),f=function(e){this.payload=e};f.type="[TenantManagement] Get Tenant";var h=function(e){this.payload=e};h.type="[TenantManagement] Get Tenant By Id";var b=function(e){this.payload=e};b.type="[TenantManagement] Create Tenant";var y=function(e){this.payload=e};y.type="[TenantManagement] Update Tenant";var v=function(e){this.payload=e};v.type="[TenantManagement] Delete Tenant";function M(e,t,n,a){var o,r=arguments.length,i=r<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var s=e.length-1;s>=0;s--)(o=e[s])&&(i=(r<3?o(i):r>3?o(t,n,i):o(t,n))||i);return r>3&&i&&Object.defineProperty(t,n,i),i}Object.create;function N(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,o,r=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(a=r.next()).done;)i.push(a.value)}catch(e){o={error:e}}finally{try{a&&!a.done&&(n=r.return)&&n.call(r)}finally{if(o)throw o.error}}return i}function A(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(N(arguments[t]));return e}Object.create;var C=function(e){var t=this;this.restService=e,this.apiName="AbpTenantManagement",this.create=function(e){return t.restService.request({method:"POST",url:"/api/multi-tenancy/tenants",body:e},{apiName:t.apiName})},this.delete=function(e){return t.restService.request({method:"DELETE",url:"/api/multi-tenancy/tenants/"+e},{apiName:t.apiName})},this.deleteDefaultConnectionString=function(e){return t.restService.request({method:"DELETE",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string"},{apiName:t.apiName})},this.get=function(e){return t.restService.request({method:"GET",url:"/api/multi-tenancy/tenants/"+e},{apiName:t.apiName})},this.getDefaultConnectionString=function(e){return t.restService.request({method:"GET",responseType:"text",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string"},{apiName:t.apiName})},this.getList=function(e){return t.restService.request({method:"GET",url:"/api/multi-tenancy/tenants",params:{filter:e.filter,sorting:e.sorting,skipCount:e.skipCount,maxResultCount:e.maxResultCount}},{apiName:t.apiName})},this.update=function(e,n){return t.restService.request({method:"PUT",url:"/api/multi-tenancy/tenants/"+e,body:n},{apiName:t.apiName})},this.updateDefaultConnectionString=function(e,n){return t.restService.request({method:"PUT",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string",params:{defaultConnectionString:n}},{apiName:t.apiName})}};C.ɵprov=T.ɵɵdefineInjectable({factory:function(){return new C(T.ɵɵinject(m.RestService))},token:C,providedIn:"root"}),C.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],C.ctorParameters=function(){return[{type:t.RestService}]},e.ɵc=function(){function e(e){this.service=e}return e.get=function(e){return e.result.items||[]},e.getTenantsTotalCount=function(e){return e.result.totalCount},e.prototype.get=function(e,t){var n=e.patchState,a=t.payload;return this.service.getList(a).pipe(i.tap((function(e){return n({result:e})})))},e.prototype.getById=function(e,t){var n=e.patchState,a=t.payload;return this.service.get(a).pipe(i.tap((function(e){return n({selectedItem:e})})))},e.prototype.delete=function(e,t){var n=t.payload;return this.service.delete(n)},e.prototype.add=function(e,t){var n=t.payload;return this.service.create(n)},e.prototype.update=function(e,t){var n=e.getState,a=t.payload;return this.service.update(a.id,Object.assign(Object.assign({},n().selectedItem),a))},e}(),e.ɵc.decorators=[{type:a.Injectable}],e.ɵc.ctorParameters=function(){return[{type:C}]},M([r.Action(f)],e.ɵc.prototype,"get",null),M([r.Action(h)],e.ɵc.prototype,"getById",null),M([r.Action(v)],e.ɵc.prototype,"delete",null),M([r.Action(b)],e.ɵc.prototype,"add",null),M([r.Action(y)],e.ɵc.prototype,"update",null),M([r.Selector()],e.ɵc,"get",null),M([r.Selector()],e.ɵc,"getTenantsTotalCount",null),e.ɵc=M([r.State({name:"TenantManagementState",defaults:{result:{},selectedItem:{}}})],e.ɵc);var S="TenantManagement.TenantsComponent",E=function(){function e(e,t,n,a,o,r){var i=this;this.list=e,this.injector=t,this.confirmationService=n,this.tenantService=a,this.fb=o,this.store=r,this.selectedModalContent={},this.visibleFeatures=!1,this.modalBusy=!1,this.featureManagementKey="FeatureManagement.FeatureManagementComponent",this.onVisibleFeaturesChange=function(e){i.visibleFeatures=e}}return Object.defineProperty(e.prototype,"hasSelectedTenant",{get:function(){return Boolean(this.selected.id)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"useSharedDatabase",{get:function(){return this.defaultConnectionStringForm.get("useSharedDatabase").value},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"connectionString",{get:function(){return this.defaultConnectionStringForm.get("defaultConnectionString").value},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isDisabledSaveButton",{get:function(){return!!this.selectedModalContent&&(!("saveConnStr"!==this.selectedModalContent.type||!this.defaultConnectionStringForm||!this.defaultConnectionStringForm.invalid)||!("saveTenant"!==this.selectedModalContent.type||!this.tenantForm||!this.tenantForm.invalid))},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){this.hookToQuery()},e.prototype.createTenantForm=function(){var e=new s.FormPropData(this.injector,this.selected);this.tenantForm=s.generateFormFromProps(e)},e.prototype.createDefaultConnectionStringForm=function(){this.defaultConnectionStringForm=this.fb.group({useSharedDatabase:this._useSharedDatabase,defaultConnectionString:[this.defaultConnectionString||""]})},e.prototype.openModal=function(e,t,n){this.selectedModalContent={title:e,template:t,type:n},this.isModalVisible=!0},e.prototype.addTenant=function(){this.selected={},this.createTenantForm(),this.openModal("AbpTenantManagement::NewTenant",this.tenantModalTemplate,"saveTenant")},e.prototype.editTenant=function(e){var t=this;this.store.dispatch(new h(e)).pipe(i.pluck("TenantManagementState","selectedItem")).subscribe((function(e){t.selected=e,t.createTenantForm(),t.openModal("AbpTenantManagement::Edit",t.tenantModalTemplate,"saveTenant")}))},e.prototype.save=function(){var e=this.selectedModalContent.type;e&&("saveTenant"===e?this.saveTenant():"saveConnStr"===e&&this.saveConnectionString())},e.prototype.saveConnectionString=function(){var e=this;this.modalBusy||(this.modalBusy=!0,this.useSharedDatabase||!this.useSharedDatabase&&!this.connectionString?this.tenantService.deleteDefaultConnectionString(this.selected.id).pipe(i.take(1),i.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1})):this.tenantService.updateDefaultConnectionString(this.selected.id,this.connectionString).pipe(i.take(1),i.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1})))},e.prototype.saveTenant=function(){var e=this;this.tenantForm.valid&&!this.modalBusy&&(this.modalBusy=!0,this.store.dispatch(this.selected.id?new y(Object.assign(Object.assign(Object.assign({},this.selected),this.tenantForm.value),{id:this.selected.id})):new b(this.tenantForm.value)).pipe(i.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1,e.list.get()})))},e.prototype.delete=function(e,t){var a=this;this.confirmationService.warn("AbpTenantManagement::TenantDeletionConfirmationMessage","AbpTenantManagement::AreYouSure",{messageLocalizationParams:[t]}).subscribe((function(t){t===n.Confirmation.Status.confirm&&a.store.dispatch(new v(e)).subscribe((function(){return a.list.get()}))}))},e.prototype.hookToQuery=function(){var e=this;this.list.hookToQuery((function(t){return e.store.dispatch(new f(t))})).subscribe()},e.prototype.onSharedDatabaseChange=function(e){e||setTimeout((function(){var e=document.getElementById("defaultConnectionString");e&&e.focus()}),0)},e.prototype.openFeaturesModal=function(e){var t=this;this.providerKey=e,setTimeout((function(){t.visibleFeatures=!0}),0)},e.prototype.sort=function(e){var t=e.sorts[0],n=t.prop,a=t.dir;this.list.sortKey=n,this.list.sortOrder=a},e}();E.decorators=[{type:a.Component,args:[{selector:"abp-tenants",template:'<div id="wrapper" class="card">\n  <div class="card-header">\n    <div class="row">\n      <div class="col col-md-6">\n        <h5 class="card-title">{{ \'AbpTenantManagement::Tenants\' | abpLocalization }}</h5>\n      </div>\n      <div class="text-right col col-md-6">\n        <abp-page-toolbar [record]="data$ | async"></abp-page-toolbar>\n      </div>\n    </div>\n  </div>\n\n  <div class="card-body">\n    <div id="data-tables-table-filter" class="data-tables-filter">\n      <div class="input-group">\n        <input\n          type="search"\n          class="form-control"\n          [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\n          [(ngModel)]="list.filter"\n        />\n      </div>\n    </div>\n\n    <abp-extensible-table\n      [data]="data$ | async"\n      [recordsTotal]="totalCount$ | async"\n      [list]="list"\n    ></abp-extensible-table>\n  </div>\n</div>\n\n<abp-modal size="md" [(visible)]="isModalVisible" [busy]="modalBusy">\n  <ng-template #abpHeader>\n    <h3>{{ selectedModalContent.title | abpLocalization }}</h3>\n  </ng-template>\n\n  <ng-template #abpBody>\n    <ng-container *ngTemplateOutlet="selectedModalContent?.template"></ng-container>\n  </ng-template>\n\n  <ng-template #abpFooter>\n    <button abpClose type="button" class="btn btn-secondary">\n      {{ \'AbpTenantManagement::Cancel\' | abpLocalization }}\n    </button>\n    <abp-button iconClass="fa fa-check" (click)="save()" [disabled]="isDisabledSaveButton">{{\n      \'AbpTenantManagement::Save\' | abpLocalization\n    }}</abp-button>\n  </ng-template>\n</abp-modal>\n\n<ng-template #tenantModalTemplate>\n  <form [formGroup]="tenantForm" (ngSubmit)="save()" validateOnSubmit>\n    <abp-extensible-form [selectedRecord]="selected"></abp-extensible-form>\n  </form>\n</ng-template>\n\n<abp-feature-management\n  *abpReplaceableTemplate="{\n    inputs: {\n      providerName: { value: \'T\' },\n      providerKey: { value: providerKey },\n      visible: { value: visibleFeatures, twoWay: true }\n    },\n    outputs: { visibleChange: onVisibleFeaturesChange },\n    componentKey: featureManagementKey\n  }"\n  [(visible)]="visibleFeatures"\n  providerName="T"\n  [providerKey]="providerKey"\n>\n</abp-feature-management>\n',providers:[t.ListService,{provide:s.EXTENSIONS_IDENTIFIER,useValue:S}]}]}],E.ctorParameters=function(){return[{type:t.ListService},{type:a.Injector},{type:n.ConfirmationService},{type:C},{type:o.FormBuilder},{type:r.Store}]},E.propDecorators={tenantModalTemplate:[{type:a.ViewChild,args:["tenantModalTemplate"]}]},M([r.Select(e.ɵc.get)],E.prototype,"data$",void 0),M([r.Select(e.ɵc.getTenantsTotalCount)],E.prototype,"totalCount$",void 0);var O,_,I,F,j,P=s.EntityAction.createMany([{text:"AbpTenantManagement::Edit",action:function(e){e.getInjected(E).editTenant(e.record.id)},permission:"AbpTenantManagement.Tenants.Update"},{text:"AbpTenantManagement::Permission:ManageFeatures",action:function(e){e.getInjected(E).openFeaturesModal(e.record.id)},permission:"AbpTenantManagement.Tenants.ManageFeatures"},{text:"AbpTenantManagement::Delete",action:function(e){e.getInjected(E).delete(e.record.id,e.record.name)},permission:"AbpTenantManagement.Tenants.Delete"}]),R=s.EntityProp.createMany([{type:"string",name:"name",displayName:"AbpTenantManagement::TenantName",sortable:!0}]),D=s.FormProp.createMany([{type:"string",name:"name",id:"name",displayName:"AbpTenantManagement::TenantName",validators:function(){return[o.Validators.required,o.Validators.maxLength(256)]}},{type:"email",name:"adminEmailAddress",displayName:"AbpTenantManagement::DisplayName:AdminEmailAddress",id:"admin-email-address",validators:function(){return[o.Validators.required,o.Validators.maxLength(256),o.Validators.email]}},{type:"password",name:"adminPassword",displayName:"AbpTenantManagement::DisplayName:AdminPassword",id:"admin-password",autocomplete:"new-password",validators:function(e){return A([o.Validators.required],n.getPasswordValidators({get:e.getInjected}))}}]),w=D.slice(0,1),x=s.ToolbarAction.createMany([{text:"AbpTenantManagement::ManageHostFeatures",action:function(e){e.getInjected(E).openFeaturesModal(null)},permission:"FeatureManagement.ManageHostFeatures",icon:"fa fa-cog"},{text:"AbpTenantManagement::NewTenant",action:function(e){e.getInjected(E).addTenant()},permission:"AbpTenantManagement.Tenants.Create",icon:"fa fa-plus"}]),B=((O={})["TenantManagement.TenantsComponent"]=P,O),G=((_={})["TenantManagement.TenantsComponent"]=x,_),L=((I={})["TenantManagement.TenantsComponent"]=R,I),q=((F={})["TenantManagement.TenantsComponent"]=D,F),U=((j={})["TenantManagement.TenantsComponent"]=w,j),V=new a.InjectionToken("TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS"),k=new a.InjectionToken("TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS"),z=new a.InjectionToken("TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS"),K=new a.InjectionToken("TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS"),Y=new a.InjectionToken("TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS"),W=function(){function e(e){this.injector=e}return e.prototype.canActivate=function(){var e=this.injector.get(s.ExtensionsService),n=this.injector.get(V,null)||{},a=this.injector.get(k,null)||{},o=this.injector.get(z,null)||{},r=this.injector.get(K,null)||{},c=this.injector.get(Y,null)||{},u=this.injector.get(t.ConfigStateService);return s.getObjectExtensionEntitiesFromStore(u,"TenantManagement").pipe(i.map((function(e){var t;return(t={})["TenantManagement.TenantsComponent"]=e.Tenant,t})),s.mapEntitiesToContributors(u,"TenantManagement"),i.tap((function(t){s.mergeWithDefaultActions(e.entityActions,B,n),s.mergeWithDefaultActions(e.toolbarActions,G,a),s.mergeWithDefaultProps(e.entityProps,L,t.prop,o),s.mergeWithDefaultProps(e.createFormProps,q,t.createForm,r),s.mergeWithDefaultProps(e.editFormProps,U,t.editForm,c)})),i.mapTo(!0))},e}();W.decorators=[{type:a.Injectable}],W.ctorParameters=function(){return[{type:a.Injector}]};var $=function(){function t(e){this.store=e}return t.prototype.get=function(){return this.store.selectSnapshot(e.ɵc.get)},t.prototype.getTenantsTotalCount=function(){return this.store.selectSnapshot(e.ɵc.getTenantsTotalCount)},t.prototype.dispatchGetTenants=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(f.bind.apply(f,A([void 0],e))))},t.prototype.dispatchGetTenantById=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(h.bind.apply(h,A([void 0],e))))},t.prototype.dispatchCreateTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(b.bind.apply(b,A([void 0],e))))},t.prototype.dispatchUpdateTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(y.bind.apply(y,A([void 0],e))))},t.prototype.dispatchDeleteTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(v.bind.apply(v,A([void 0],e))))},t}();$.ɵprov=T.ɵɵdefineInjectable({factory:function(){return new $(T.ɵɵinject(g.Store))},token:$,providedIn:"root"}),$.decorators=[{type:a.Injectable,args:[{providedIn:"root"}]}],$.ctorParameters=function(){return[{type:r.Store}]};var H={requiredPolicy:"AbpTenantManagement.Tenants",replaceableComponent:{key:"TenantManagement.TenantsComponent",defaultComponent:E}},Q=[{path:"",redirectTo:"tenants",pathMatch:"full"},{path:"",component:t.DynamicLayoutComponent,canActivate:[t.AuthGuard,t.PermissionGuard,W],children:[{path:"tenants",component:t.ReplaceableRouteContainerComponent,data:H}]}],X=function(){};X.decorators=[{type:a.NgModule,args:[{imports:[l.RouterModule.forChild(Q)],exports:[l.RouterModule]}]}];var J=function(){function e(){}return e.forChild=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:V,useValue:t.entityActionContributors},{provide:k,useValue:t.toolbarActionContributors},{provide:z,useValue:t.entityPropContributors},{provide:K,useValue:t.createFormPropContributors},{provide:Y,useValue:t.editFormPropContributors},W]}},e.forLazy=function(n){return void 0===n&&(n={}),new t.LazyModuleFactory(e.forChild(n))},e}();J.decorators=[{type:a.NgModule,args:[{declarations:[E],exports:[E],imports:[X,r.NgxsModule.forFeature([e.ɵc]),p.NgxValidateCoreModule,t.CoreModule,n.ThemeSharedModule,u.NgbDropdownModule,c.FeatureManagementModule,s.UiExtensionsModule]}]}],e.CreateTenant=b,e.DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS=q,e.DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS=U,e.DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS=B,e.DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS=L,e.DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS=G,e.DeleteTenant=v,e.GetTenantById=h,e.GetTenants=f,e.TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS=K,e.TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS=Y,e.TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS=V,e.TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS=z,e.TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS=k,e.TenantManagementExtensionsGuard=W,e.TenantManagementModule=J,e.TenantManagementState=e.ɵc,e.TenantManagementStateService=$,e.TenantService=C,e.TenantsComponent=E,e.UpdateTenant=y,e.ɵ0=S,e.ɵa=E,e.ɵd=C,e.ɵe=f,e.ɵf=h,e.ɵg=b,e.ɵh=y,e.ɵi=v,e.ɵl=X,e.ɵm=W,e.ɵn=V,e.ɵo=k,e.ɵp=z,e.ɵq=K,e.ɵr=Y,e.ɵs=W,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.tenant-management.umd.min.js.map