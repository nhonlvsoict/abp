{"version":3,"file":"abp-ng.tenant-management.js","sources":["../../../packages/tenant-management/src/lib/actions/tenant-management.actions.ts","../../../packages/tenant-management/src/lib/proxy/tenant.service.ts","../../../packages/tenant-management/src/lib/states/tenant-management.state.ts","../../../packages/tenant-management/src/lib/components/tenants/tenants.component.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-actions.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-props.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-form-props.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-toolbar-actions.ts","../../../packages/tenant-management/src/lib/tokens/extensions.token.ts","../../../packages/tenant-management/src/lib/guards/extensions.guard.ts","../../../packages/tenant-management/src/lib/services/tenant-management-state.service.ts","../../../packages/tenant-management/src/lib/tenant-management-routing.module.ts","../../../packages/tenant-management/src/lib/tenant-management.module.ts","../../../packages/tenant-management/src/abp-ng.tenant-management.ts"],"names":[],"mappings":"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","sourcesContent":["import { GetTenantsInput, TenantCreateDto, TenantUpdateDto } from '../proxy/models';\n\nexport class GetTenants {\n  static readonly type = '[TenantManagement] Get Tenant';\n  constructor(public payload?: GetTenantsInput) {}\n}\n\nexport class GetTenantById {\n  static readonly type = '[TenantManagement] Get Tenant By Id';\n  constructor(public payload: string) {}\n}\n\nexport class CreateTenant {\n  static readonly type = '[TenantManagement] Create Tenant';\n  constructor(public payload: TenantCreateDto) {}\n}\n\nexport class UpdateTenant {\n  static readonly type = '[TenantManagement] Update Tenant';\n  constructor(public payload: TenantUpdateDto & { id: string }) {}\n}\n\nexport class DeleteTenant {\n  static readonly type = '[TenantManagement] Delete Tenant';\n  constructor(public payload: string) {}\n}\n","import type { GetTenantsInput, TenantCreateDto, TenantDto, TenantUpdateDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantService {\n  apiName = 'AbpTenantManagement';\n\n  create = (input: TenantCreateDto) =>\n    this.restService.request<any, TenantDto>({\n      method: 'POST',\n      url: '/api/multi-tenancy/tenants',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  delete = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}`,\n    },\n    { apiName: this.apiName });\n\n  deleteDefaultConnectionString = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n    },\n    { apiName: this.apiName });\n\n  get = (id: string) =>\n    this.restService.request<any, TenantDto>({\n      method: 'GET',\n      url: `/api/multi-tenancy/tenants/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getDefaultConnectionString = (id: string) =>\n    this.restService.request<any, string>({\n      method: 'GET',\n      responseType: 'text',\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n    },\n    { apiName: this.apiName });\n\n  getList = (input: GetTenantsInput) =>\n    this.restService.request<any, PagedResultDto<TenantDto>>({\n      method: 'GET',\n      url: '/api/multi-tenancy/tenants',\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  update = (id: string, input: TenantUpdateDto) =>\n    this.restService.request<any, TenantDto>({\n      method: 'PUT',\n      url: `/api/multi-tenancy/tenants/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  updateDefaultConnectionString = (id: string, defaultConnectionString: string) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n      params: { defaultConnectionString },\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { ABP, PagedResultDto } from '@abp/ng.core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenantById,\n  GetTenants,\n  UpdateTenant,\n} from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { Injectable } from '@angular/core';\nimport { TenantService } from '../proxy/tenant.service';\nimport { TenantDto } from '../proxy/models';\n\n@State<TenantManagement.State>({\n  name: 'TenantManagementState',\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\n})\n@Injectable()\nexport class TenantManagementState {\n  @Selector()\n  static get({ result }: TenantManagement.State): TenantDto[] {\n    return result.items || [];\n  }\n\n  @Selector()\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\n    return result.totalCount;\n  }\n\n  constructor(private service: TenantService) {}\n\n  @Action(GetTenants)\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\n    return this.service.getList(payload).pipe(\n      tap(result =>\n        patchState({\n          result,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetTenantById)\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\n    return this.service.get(payload).pipe(\n      tap(selectedItem =>\n        patchState({\n          selectedItem,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteTenant)\n  delete(_, { payload }: DeleteTenant) {\n    return this.service.delete(payload);\n  }\n\n  @Action(CreateTenant)\n  add(_, { payload }: CreateTenant) {\n    return this.service.create(payload);\n  }\n\n  @Action(UpdateTenant)\n  update({ getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\n    return this.service.update(payload.id, { ...getState().selectedItem, ...payload });\n  }\n}\n","import { ListService, PagedResultDto } from '@abp/ng.core';\nimport { eFeatureManagementComponents } from '@abp/ng.feature-management';\nimport { Confirmation, ConfirmationService, getPasswordValidators } from '@abp/ng.theme.shared';\nimport { Component, Injector, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenantById,\n  GetTenants,\n  UpdateTenant,\n} from '../../actions/tenant-management.actions';\nimport { GetTenantsInput, TenantDto } from '../../proxy/models';\nimport { TenantService } from '../../proxy/tenant.service';\nimport { TenantManagementState } from '../../states/tenant-management.state';\nimport {\n  EXTENSIONS_IDENTIFIER,\n  FormPropData,\n  generateFormFromProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { eTenantManagementComponents } from '../../enums/components';\n\ninterface SelectedModalContent {\n  type: 'saveConnStr' | 'saveTenant';\n  title: string;\n  template: TemplateRef<any>;\n}\n\n@Component({\n  selector: 'abp-tenants',\n  templateUrl: './tenants.component.html',\n  providers: [\n    ListService,\n    {\n      provide: EXTENSIONS_IDENTIFIER,\n      useValue: eTenantManagementComponents.Tenants,\n    },\n  ],\n})\nexport class TenantsComponent implements OnInit {\n  @Select(TenantManagementState.get)\n  data$: Observable<PagedResultDto<TenantDto>>;\n\n  @Select(TenantManagementState.getTenantsTotalCount)\n  totalCount$: Observable<number>;\n\n  selected: TenantDto;\n\n  tenantForm: FormGroup;\n\n  defaultConnectionStringForm: FormGroup;\n\n  defaultConnectionString: string;\n\n  isModalVisible: boolean;\n\n  selectedModalContent = {} as SelectedModalContent;\n\n  visibleFeatures = false;\n\n  providerKey: string;\n\n  _useSharedDatabase: boolean;\n\n  modalBusy = false;\n\n  featureManagementKey = eFeatureManagementComponents.FeatureManagement;\n\n  get hasSelectedTenant(): boolean {\n    return Boolean(this.selected.id);\n  }\n\n  get useSharedDatabase(): boolean {\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\n  }\n\n  get connectionString(): string {\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\n  }\n\n  @ViewChild('tenantModalTemplate')\n  tenantModalTemplate: TemplateRef<any>;\n\n  get isDisabledSaveButton(): boolean {\n    if (!this.selectedModalContent) return false;\n\n    if (\n      this.selectedModalContent.type === 'saveConnStr' &&\n      this.defaultConnectionStringForm &&\n      this.defaultConnectionStringForm.invalid\n    ) {\n      return true;\n    } else if (\n      this.selectedModalContent.type === 'saveTenant' &&\n      this.tenantForm &&\n      this.tenantForm.invalid\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onVisibleFeaturesChange = (value: boolean) => {\n    this.visibleFeatures = value;\n  };\n\n  constructor(\n    public readonly list: ListService<GetTenantsInput>,\n    private injector: Injector,\n    private confirmationService: ConfirmationService,\n    private tenantService: TenantService,\n    private fb: FormBuilder,\n    private store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.hookToQuery();\n  }\n\n  private createTenantForm() {\n    const data = new FormPropData(this.injector, this.selected);\n    this.tenantForm = generateFormFromProps(data);\n  }\n\n  private createDefaultConnectionStringForm() {\n    this.defaultConnectionStringForm = this.fb.group({\n      useSharedDatabase: this._useSharedDatabase,\n      defaultConnectionString: [this.defaultConnectionString || ''],\n    });\n  }\n\n  openModal(title: string, template: TemplateRef<any>, type: 'saveConnStr' | 'saveTenant') {\n    this.selectedModalContent = {\n      title,\n      template,\n      type,\n    };\n\n    this.isModalVisible = true;\n  }\n\n  addTenant() {\n    this.selected = {} as TenantDto;\n    this.createTenantForm();\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\n  }\n\n  editTenant(id: string) {\n    this.store\n      .dispatch(new GetTenantById(id))\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\n      .subscribe(selected => {\n        this.selected = selected;\n        this.createTenantForm();\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\n      });\n  }\n\n  save() {\n    const { type } = this.selectedModalContent;\n    if (!type) return;\n    if (type === 'saveTenant') this.saveTenant();\n    else if (type === 'saveConnStr') this.saveConnectionString();\n  }\n\n  saveConnectionString() {\n    if (this.modalBusy) return;\n\n    this.modalBusy = true;\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\n      this.tenantService\n        .deleteDefaultConnectionString(this.selected.id)\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    } else {\n      this.tenantService\n        .updateDefaultConnectionString(this.selected.id, this.connectionString)\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    }\n  }\n\n  saveTenant() {\n    if (!this.tenantForm.valid || this.modalBusy) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateTenant({ ...this.selected, ...this.tenantForm.value, id: this.selected.id })\n          : new CreateTenant(this.tenantForm.value),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.list.get();\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn(\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\n        'AbpTenantManagement::AreYouSure',\n        {\n          messageLocalizationParams: [name],\n        },\n      )\n      .subscribe((status: Confirmation.Status) => {\n        if (status === Confirmation.Status.confirm) {\n          this.store.dispatch(new DeleteTenant(id)).subscribe(() => this.list.get());\n        }\n      });\n  }\n\n  hookToQuery() {\n    this.list.hookToQuery(query => this.store.dispatch(new GetTenants(query))).subscribe();\n  }\n\n  onSharedDatabaseChange(value: boolean) {\n    if (!value) {\n      setTimeout(() => {\n        const defaultConnectionString = document.getElementById(\n          'defaultConnectionString',\n        ) as HTMLInputElement;\n        if (defaultConnectionString) {\n          defaultConnectionString.focus();\n        }\n      }, 0);\n    }\n  }\n\n  openFeaturesModal(providerKey: string) {\n    this.providerKey = providerKey;\n    setTimeout(() => {\n      this.visibleFeatures = true;\n    }, 0);\n  }\n\n  sort(data) {\n    const { prop, dir } = data.sorts[0];\n    this.list.sortKey = prop;\n    this.list.sortOrder = dir;\n  }\n}\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\nimport { TenantsComponent } from '../components/tenants/tenants.component';\nimport { TenantDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_ENTITY_ACTIONS = EntityAction.createMany<TenantDto>([\n  {\n    text: 'AbpTenantManagement::Edit',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.editTenant(data.record.id);\n    },\n    permission: 'AbpTenantManagement.Tenants.Update',\n  },\n  {\n    text: 'AbpTenantManagement::Permission:ManageFeatures',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.openFeaturesModal(data.record.id);\n    },\n    permission: 'AbpTenantManagement.Tenants.ManageFeatures',\n  },\n  {\n    text: 'AbpTenantManagement::Delete',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.delete(data.record.id, data.record.name);\n    },\n    permission: 'AbpTenantManagement.Tenants.Delete',\n  },\n]);\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\nimport { TenantDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_ENTITY_PROPS = EntityProp.createMany<TenantDto>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpTenantManagement::TenantName',\n    sortable: true,\n  },\n]);\n","import { getPasswordValidators } from '@abp/ng.theme.shared';\nimport { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\nimport { Validators } from '@angular/forms';\nimport { TenantCreateDto, TenantUpdateDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_CREATE_FORM_PROPS = FormProp.createMany<\n  TenantCreateDto | TenantUpdateDto\n>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    id: 'name',\n    displayName: 'AbpTenantManagement::TenantName',\n    validators: () => [Validators.required, Validators.maxLength(256)],\n  },\n  {\n    type: ePropType.Email,\n    name: 'adminEmailAddress',\n    displayName: 'AbpTenantManagement::DisplayName:AdminEmailAddress',\n    id: 'admin-email-address',\n    validators: () => [Validators.required, Validators.maxLength(256), Validators.email],\n  },\n  {\n    type: ePropType.Password,\n    name: 'adminPassword',\n    displayName: 'AbpTenantManagement::DisplayName:AdminPassword',\n    id: 'admin-password',\n    autocomplete: 'new-password',\n    validators: data => [Validators.required, ...getPasswordValidators({ get: data.getInjected })],\n  },\n]);\n\nexport const DEFAULT_TENANTS_EDIT_FORM_PROPS = DEFAULT_TENANTS_CREATE_FORM_PROPS.slice(0, 1);\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\nimport { TenantsComponent } from '../components/tenants/tenants.component';\nimport { TenantDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_TOOLBAR_ACTIONS = ToolbarAction.createMany<TenantDto[]>([\n  {\n    text: 'AbpTenantManagement::ManageHostFeatures',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.openFeaturesModal(null);\n    },\n    permission: 'FeatureManagement.ManageHostFeatures',\n    icon: 'fa fa-cog',\n  },\n  {\n    text: 'AbpTenantManagement::NewTenant',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.addTenant();\n    },\n    permission: 'AbpTenantManagement.Tenants.Create',\n    icon: 'fa fa-plus',\n  },\n]);\n","import {\n  CreateFormPropContributorCallback,\n  EditFormPropContributorCallback,\n  EntityActionContributorCallback,\n  EntityPropContributorCallback,\n  ToolbarActionContributorCallback,\n} from '@abp/ng.theme.shared/extensions';\nimport { InjectionToken } from '@angular/core';\nimport { DEFAULT_TENANTS_ENTITY_ACTIONS } from '../defaults/default-tenants-entity-actions';\nimport { DEFAULT_TENANTS_ENTITY_PROPS } from '../defaults/default-tenants-entity-props';\nimport {\n  DEFAULT_TENANTS_CREATE_FORM_PROPS,\n  DEFAULT_TENANTS_EDIT_FORM_PROPS,\n} from '../defaults/default-tenants-form-props';\nimport { DEFAULT_TENANTS_TOOLBAR_ACTIONS } from '../defaults/default-tenants-toolbar-actions';\nimport { eTenantManagementComponents } from '../enums/components';\nimport { TenantCreateDto, TenantDto, TenantUpdateDto } from '../proxy/models';\n\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_ACTIONS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_TOOLBAR_ACTIONS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_PROPS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_CREATE_FORM_PROPS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_EDIT_FORM_PROPS,\n};\n\nexport const TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS = new InjectionToken<EntityActionContributors>(\n  'TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS = new InjectionToken<ToolbarActionContributors>(\n  'TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS = new InjectionToken<EntityPropContributors>(\n  'TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS = new InjectionToken<CreateFormPropContributors>(\n  'TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS = new InjectionToken<EditFormPropContributors>(\n  'TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS',\n);\n\n// Fix for TS4023 -> https://github.com/microsoft/TypeScript/issues/9944#issuecomment-254693497\ntype EntityActionContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: EntityActionContributorCallback<TenantDto>[];\n}>;\ntype ToolbarActionContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: ToolbarActionContributorCallback<TenantDto[]>[];\n}>;\ntype EntityPropContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: EntityPropContributorCallback<TenantDto>[];\n}>;\ntype CreateFormPropContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: CreateFormPropContributorCallback<TenantCreateDto>[];\n}>;\ntype EditFormPropContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: EditFormPropContributorCallback<TenantUpdateDto>[];\n}>;\n","import { ConfigStateService } from '@abp/ng.core';\nimport {\n  ExtensionsService,\n  getObjectExtensionEntitiesFromStore,\n  mapEntitiesToContributors,\n  mergeWithDefaultActions,\n  mergeWithDefaultProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { Injectable, Injector } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { eTenantManagementComponents } from '../enums/components';\nimport {\n  TenantManagementCreateFormPropContributors,\n  TenantManagementEditFormPropContributors,\n  TenantManagementEntityActionContributors,\n  TenantManagementEntityPropContributors,\n  TenantManagementToolbarActionContributors,\n} from '../models/config-options';\nimport {\n  DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\n  DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\n  DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\n} from '../tokens/extensions.token';\n\n@Injectable()\nexport class TenantManagementExtensionsGuard implements CanActivate {\n  constructor(private injector: Injector) {}\n\n  canActivate(): Observable<boolean> {\n    const extensions: ExtensionsService = this.injector.get(ExtensionsService);\n    const actionContributors: TenantManagementEntityActionContributors =\n      this.injector.get(TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, null) || {};\n    const toolbarContributors: TenantManagementToolbarActionContributors =\n      this.injector.get(TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};\n    const propContributors: TenantManagementEntityPropContributors =\n      this.injector.get(TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, null) || {};\n    const createFormContributors: TenantManagementCreateFormPropContributors =\n      this.injector.get(TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};\n    const editFormContributors: TenantManagementEditFormPropContributors =\n      this.injector.get(TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};\n\n    const configState = this.injector.get(ConfigStateService);\n    return getObjectExtensionEntitiesFromStore(configState, 'TenantManagement').pipe(\n      map(entities => ({\n        [eTenantManagementComponents.Tenants]: entities.Tenant,\n      })),\n      mapEntitiesToContributors(configState, 'TenantManagement'),\n      tap(objectExtensionContributors => {\n        mergeWithDefaultActions(\n          extensions.entityActions,\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\n          actionContributors,\n        );\n        mergeWithDefaultActions(\n          extensions.toolbarActions,\n          DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\n          toolbarContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.entityProps,\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\n          objectExtensionContributors.prop,\n          propContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.createFormProps,\n          DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\n          objectExtensionContributors.createForm,\n          createFormContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.editFormProps,\n          DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\n          objectExtensionContributors.editForm,\n          editFormContributors,\n        );\n      }),\n      mapTo(true),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { TenantManagementState } from '../states/tenant-management.state';\nimport { ABP } from '@abp/ng.core';\nimport { GetTenants, GetTenantById, CreateTenant, UpdateTenant, DeleteTenant } from '../actions';\nimport { TenantManagement } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantManagementStateService {\n  constructor(private store: Store) {}\n\n  get() {\n    return this.store.selectSnapshot(TenantManagementState.get);\n  }\n\n  getTenantsTotalCount() {\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\n  }\n\n  dispatchGetTenants(...args: ConstructorParameters<typeof GetTenants>) {\n    return this.store.dispatch(new GetTenants(...args));\n  }\n\n  dispatchGetTenantById(...args: ConstructorParameters<typeof GetTenantById>) {\n    return this.store.dispatch(new GetTenantById(...args));\n  }\n\n  dispatchCreateTenant(...args: ConstructorParameters<typeof CreateTenant>) {\n    return this.store.dispatch(new CreateTenant(...args));\n  }\n\n  dispatchUpdateTenant(...args: ConstructorParameters<typeof UpdateTenant>) {\n    return this.store.dispatch(new UpdateTenant(...args));\n  }\n\n  dispatchDeleteTenant(...args: ConstructorParameters<typeof DeleteTenant>) {\n    return this.store.dispatch(new DeleteTenant(...args));\n  }\n}\n","import {\n  AuthGuard,\n  DynamicLayoutComponent,\n  PermissionGuard,\n  ReplaceableComponents,\n  ReplaceableRouteContainerComponent,\n} from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { eTenantManagementComponents } from './enums/components';\nimport { TenantManagementExtensionsGuard } from './guards';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard, TenantManagementExtensionsGuard],\n    children: [\n      {\n        path: 'tenants',\n        component: ReplaceableRouteContainerComponent,\n        data: {\n          requiredPolicy: 'AbpTenantManagement.Tenants',\n          replaceableComponent: {\n            key: eTenantManagementComponents.Tenants,\n            defaultComponent: TenantsComponent,\n          } as ReplaceableComponents.RouteData<TenantsComponent>,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TenantManagementRoutingModule {}\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { TenantManagementExtensionsGuard } from './guards/extensions.guard';\nimport { TenantManagementConfigOptions } from './models/config-options';\nimport { TenantManagementState } from './states/tenant-management.state';\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\nimport {\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\n} from './tokens/extensions.token';\n\n@NgModule({\n  declarations: [TenantsComponent],\n  exports: [TenantsComponent],\n  imports: [\n    TenantManagementRoutingModule,\n    NgxsModule.forFeature([TenantManagementState]),\n    NgxValidateCoreModule,\n    CoreModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n    FeatureManagementModule,\n    UiExtensionsModule,\n  ],\n})\nexport class TenantManagementModule {\n  static forChild(\n    options: TenantManagementConfigOptions = {},\n  ): ModuleWithProviders<TenantManagementModule> {\n    return {\n      ngModule: TenantManagementModule,\n      providers: [\n        {\n          provide: TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\n          useValue: options.entityActionContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\n          useValue: options.toolbarActionContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\n          useValue: options.entityPropContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\n          useValue: options.createFormPropContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\n          useValue: options.editFormPropContributors,\n        },\n        TenantManagementExtensionsGuard,\n      ],\n    };\n  }\n\n  static forLazy(\n    options: TenantManagementConfigOptions = {},\n  ): NgModuleFactory<TenantManagementModule> {\n    return new LazyModuleFactory(TenantManagementModule.forChild(options));\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CreateTenant as ɵg,DeleteTenant as ɵi,GetTenantById as ɵf,GetTenants as ɵe,UpdateTenant as ɵh} from './lib/actions/tenant-management.actions';\nexport {TenantsComponent as ɵa} from './lib/components/tenants/tenants.component';\nexport {eTenantManagementComponents as ɵb} from './lib/enums/components';\nexport {TenantManagementExtensionsGuard as ɵm} from './lib/guards';\nexport {TenantManagementExtensionsGuard as ɵs} from './lib/guards/extensions.guard';\nexport {GetTenantsInput as ɵj,TenantCreateDto as ɵk} from './lib/proxy/models';\nexport {TenantService as ɵd} from './lib/proxy/tenant.service';\nexport {TenantManagementState as ɵc} from './lib/states/tenant-management.state';\nexport {TenantManagementRoutingModule as ɵl} from './lib/tenant-management-routing.module';\nexport {TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS as ɵq,TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS as ɵr,TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS as ɵn,TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS as ɵp,TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS as ɵo} from './lib/tokens/extensions.token';"]}