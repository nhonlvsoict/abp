{"version":3,"file":"abp-ng.tenant-management.js","sources":["../../../packages/tenant-management/src/lib/actions/tenant-management.actions.ts","../../../packages/tenant-management/src/lib/proxy/tenant.service.ts","../../../packages/tenant-management/src/lib/states/tenant-management.state.ts","../../../packages/tenant-management/src/lib/components/tenants/tenants.component.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-actions.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-props.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-form-props.ts","../../../packages/tenant-management/src/lib/defaults/default-tenants-toolbar-actions.ts","../../../packages/tenant-management/src/lib/tokens/extensions.token.ts","../../../packages/tenant-management/src/lib/guards/extensions.guard.ts","../../../packages/tenant-management/src/lib/services/tenant-management-state.service.ts","../../../packages/tenant-management/src/lib/tenant-management-routing.module.ts","../../../packages/tenant-management/src/lib/tenant-management.module.ts","../../../packages/tenant-management/src/abp-ng.tenant-management.ts"],"sourcesContent":["import { GetTenantsInput, TenantCreateDto, TenantUpdateDto } from '../proxy/models';\n\nexport class GetTenants {\n  static readonly type = '[TenantManagement] Get Tenant';\n  constructor(public payload?: GetTenantsInput) {}\n}\n\nexport class GetTenantById {\n  static readonly type = '[TenantManagement] Get Tenant By Id';\n  constructor(public payload: string) {}\n}\n\nexport class CreateTenant {\n  static readonly type = '[TenantManagement] Create Tenant';\n  constructor(public payload: TenantCreateDto) {}\n}\n\nexport class UpdateTenant {\n  static readonly type = '[TenantManagement] Update Tenant';\n  constructor(public payload: TenantUpdateDto & { id: string }) {}\n}\n\nexport class DeleteTenant {\n  static readonly type = '[TenantManagement] Delete Tenant';\n  constructor(public payload: string) {}\n}\n","import type { GetTenantsInput, TenantCreateDto, TenantDto, TenantUpdateDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantService {\n  apiName = 'AbpTenantManagement';\n\n  create = (input: TenantCreateDto) =>\n    this.restService.request<any, TenantDto>({\n      method: 'POST',\n      url: '/api/multi-tenancy/tenants',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  delete = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}`,\n    },\n    { apiName: this.apiName });\n\n  deleteDefaultConnectionString = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n    },\n    { apiName: this.apiName });\n\n  get = (id: string) =>\n    this.restService.request<any, TenantDto>({\n      method: 'GET',\n      url: `/api/multi-tenancy/tenants/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getDefaultConnectionString = (id: string) =>\n    this.restService.request<any, string>({\n      method: 'GET',\n      responseType: 'text',\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n    },\n    { apiName: this.apiName });\n\n  getList = (input: GetTenantsInput) =>\n    this.restService.request<any, PagedResultDto<TenantDto>>({\n      method: 'GET',\n      url: '/api/multi-tenancy/tenants',\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  update = (id: string, input: TenantUpdateDto) =>\n    this.restService.request<any, TenantDto>({\n      method: 'PUT',\n      url: `/api/multi-tenancy/tenants/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  updateDefaultConnectionString = (id: string, defaultConnectionString: string) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\n      params: { defaultConnectionString },\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { ABP, PagedResultDto } from '@abp/ng.core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { tap } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenantById,\n  GetTenants,\n  UpdateTenant,\n} from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { Injectable } from '@angular/core';\nimport { TenantService } from '../proxy/tenant.service';\nimport { TenantDto } from '../proxy/models';\n\n@State<TenantManagement.State>({\n  name: 'TenantManagementState',\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\n})\n@Injectable()\nexport class TenantManagementState {\n  @Selector()\n  static get({ result }: TenantManagement.State): TenantDto[] {\n    return result.items || [];\n  }\n\n  @Selector()\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\n    return result.totalCount;\n  }\n\n  constructor(private service: TenantService) {}\n\n  @Action(GetTenants)\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\n    return this.service.getList(payload).pipe(\n      tap(result =>\n        patchState({\n          result,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetTenantById)\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\n    return this.service.get(payload).pipe(\n      tap(selectedItem =>\n        patchState({\n          selectedItem,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteTenant)\n  delete(_, { payload }: DeleteTenant) {\n    return this.service.delete(payload);\n  }\n\n  @Action(CreateTenant)\n  add(_, { payload }: CreateTenant) {\n    return this.service.create(payload);\n  }\n\n  @Action(UpdateTenant)\n  update({ getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\n    return this.service.update(payload.id, { ...getState().selectedItem, ...payload });\n  }\n}\n","import { ListService, PagedResultDto } from '@abp/ng.core';\nimport { eFeatureManagementComponents } from '@abp/ng.feature-management';\nimport { Confirmation, ConfirmationService, getPasswordValidators } from '@abp/ng.theme.shared';\nimport { Component, Injector, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport {\n  CreateTenant,\n  DeleteTenant,\n  GetTenantById,\n  GetTenants,\n  UpdateTenant,\n} from '../../actions/tenant-management.actions';\nimport { GetTenantsInput, TenantDto } from '../../proxy/models';\nimport { TenantService } from '../../proxy/tenant.service';\nimport { TenantManagementState } from '../../states/tenant-management.state';\nimport {\n  EXTENSIONS_IDENTIFIER,\n  FormPropData,\n  generateFormFromProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { eTenantManagementComponents } from '../../enums/components';\n\ninterface SelectedModalContent {\n  type: 'saveConnStr' | 'saveTenant';\n  title: string;\n  template: TemplateRef<any>;\n}\n\n@Component({\n  selector: 'abp-tenants',\n  templateUrl: './tenants.component.html',\n  providers: [\n    ListService,\n    {\n      provide: EXTENSIONS_IDENTIFIER,\n      useValue: eTenantManagementComponents.Tenants,\n    },\n  ],\n})\nexport class TenantsComponent implements OnInit {\n  @Select(TenantManagementState.get)\n  data$: Observable<PagedResultDto<TenantDto>>;\n\n  @Select(TenantManagementState.getTenantsTotalCount)\n  totalCount$: Observable<number>;\n\n  selected: TenantDto;\n\n  tenantForm: FormGroup;\n\n  defaultConnectionStringForm: FormGroup;\n\n  defaultConnectionString: string;\n\n  isModalVisible: boolean;\n\n  selectedModalContent = {} as SelectedModalContent;\n\n  visibleFeatures = false;\n\n  providerKey: string;\n\n  _useSharedDatabase: boolean;\n\n  modalBusy = false;\n\n  featureManagementKey = eFeatureManagementComponents.FeatureManagement;\n\n  get hasSelectedTenant(): boolean {\n    return Boolean(this.selected.id);\n  }\n\n  get useSharedDatabase(): boolean {\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\n  }\n\n  get connectionString(): string {\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\n  }\n\n  @ViewChild('tenantModalTemplate')\n  tenantModalTemplate: TemplateRef<any>;\n\n  get isDisabledSaveButton(): boolean {\n    if (!this.selectedModalContent) return false;\n\n    if (\n      this.selectedModalContent.type === 'saveConnStr' &&\n      this.defaultConnectionStringForm &&\n      this.defaultConnectionStringForm.invalid\n    ) {\n      return true;\n    } else if (\n      this.selectedModalContent.type === 'saveTenant' &&\n      this.tenantForm &&\n      this.tenantForm.invalid\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  onVisibleFeaturesChange = (value: boolean) => {\n    this.visibleFeatures = value;\n  };\n\n  constructor(\n    public readonly list: ListService<GetTenantsInput>,\n    private injector: Injector,\n    private confirmationService: ConfirmationService,\n    private tenantService: TenantService,\n    private fb: FormBuilder,\n    private store: Store,\n  ) {}\n\n  ngOnInit() {\n    this.hookToQuery();\n  }\n\n  private createTenantForm() {\n    const data = new FormPropData(this.injector, this.selected);\n    this.tenantForm = generateFormFromProps(data);\n  }\n\n  private createDefaultConnectionStringForm() {\n    this.defaultConnectionStringForm = this.fb.group({\n      useSharedDatabase: this._useSharedDatabase,\n      defaultConnectionString: [this.defaultConnectionString || ''],\n    });\n  }\n\n  openModal(title: string, template: TemplateRef<any>, type: 'saveConnStr' | 'saveTenant') {\n    this.selectedModalContent = {\n      title,\n      template,\n      type,\n    };\n\n    this.isModalVisible = true;\n  }\n\n  addTenant() {\n    this.selected = {} as TenantDto;\n    this.createTenantForm();\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\n  }\n\n  editTenant(id: string) {\n    this.store\n      .dispatch(new GetTenantById(id))\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\n      .subscribe(selected => {\n        this.selected = selected;\n        this.createTenantForm();\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\n      });\n  }\n\n  save() {\n    const { type } = this.selectedModalContent;\n    if (!type) return;\n    if (type === 'saveTenant') this.saveTenant();\n    else if (type === 'saveConnStr') this.saveConnectionString();\n  }\n\n  saveConnectionString() {\n    if (this.modalBusy) return;\n\n    this.modalBusy = true;\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\n      this.tenantService\n        .deleteDefaultConnectionString(this.selected.id)\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    } else {\n      this.tenantService\n        .updateDefaultConnectionString(this.selected.id, this.connectionString)\n        .pipe(\n          take(1),\n          finalize(() => (this.modalBusy = false)),\n        )\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    }\n  }\n\n  saveTenant() {\n    if (!this.tenantForm.valid || this.modalBusy) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateTenant({ ...this.selected, ...this.tenantForm.value, id: this.selected.id })\n          : new CreateTenant(this.tenantForm.value),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.list.get();\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn(\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\n        'AbpTenantManagement::AreYouSure',\n        {\n          messageLocalizationParams: [name],\n        },\n      )\n      .subscribe((status: Confirmation.Status) => {\n        if (status === Confirmation.Status.confirm) {\n          this.store.dispatch(new DeleteTenant(id)).subscribe(() => this.list.get());\n        }\n      });\n  }\n\n  hookToQuery() {\n    this.list.hookToQuery(query => this.store.dispatch(new GetTenants(query))).subscribe();\n  }\n\n  onSharedDatabaseChange(value: boolean) {\n    if (!value) {\n      setTimeout(() => {\n        const defaultConnectionString = document.getElementById(\n          'defaultConnectionString',\n        ) as HTMLInputElement;\n        if (defaultConnectionString) {\n          defaultConnectionString.focus();\n        }\n      }, 0);\n    }\n  }\n\n  openFeaturesModal(providerKey: string) {\n    this.providerKey = providerKey;\n    setTimeout(() => {\n      this.visibleFeatures = true;\n    }, 0);\n  }\n\n  sort(data) {\n    const { prop, dir } = data.sorts[0];\n    this.list.sortKey = prop;\n    this.list.sortOrder = dir;\n  }\n}\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\nimport { TenantsComponent } from '../components/tenants/tenants.component';\nimport { TenantDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_ENTITY_ACTIONS = EntityAction.createMany<TenantDto>([\n  {\n    text: 'AbpTenantManagement::Edit',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.editTenant(data.record.id);\n    },\n    permission: 'AbpTenantManagement.Tenants.Update',\n  },\n  {\n    text: 'AbpTenantManagement::Permission:ManageFeatures',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.openFeaturesModal(data.record.id);\n    },\n    permission: 'AbpTenantManagement.Tenants.ManageFeatures',\n  },\n  {\n    text: 'AbpTenantManagement::Delete',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.delete(data.record.id, data.record.name);\n    },\n    permission: 'AbpTenantManagement.Tenants.Delete',\n  },\n]);\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\nimport { TenantDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_ENTITY_PROPS = EntityProp.createMany<TenantDto>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpTenantManagement::TenantName',\n    sortable: true,\n  },\n]);\n","import { getPasswordValidators } from '@abp/ng.theme.shared';\nimport { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\nimport { Validators } from '@angular/forms';\nimport { TenantCreateDto, TenantUpdateDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_CREATE_FORM_PROPS = FormProp.createMany<\n  TenantCreateDto | TenantUpdateDto\n>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    id: 'name',\n    displayName: 'AbpTenantManagement::TenantName',\n    validators: () => [Validators.required, Validators.maxLength(256)],\n  },\n  {\n    type: ePropType.Email,\n    name: 'adminEmailAddress',\n    displayName: 'AbpTenantManagement::DisplayName:AdminEmailAddress',\n    id: 'admin-email-address',\n    validators: () => [Validators.required, Validators.maxLength(256), Validators.email],\n  },\n  {\n    type: ePropType.Password,\n    name: 'adminPassword',\n    displayName: 'AbpTenantManagement::DisplayName:AdminPassword',\n    id: 'admin-password',\n    autocomplete: 'new-password',\n    validators: data => [Validators.required, ...getPasswordValidators({ get: data.getInjected })],\n  },\n]);\n\nexport const DEFAULT_TENANTS_EDIT_FORM_PROPS = DEFAULT_TENANTS_CREATE_FORM_PROPS.slice(0, 1);\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\nimport { TenantsComponent } from '../components/tenants/tenants.component';\nimport { TenantDto } from '../proxy/models';\n\nexport const DEFAULT_TENANTS_TOOLBAR_ACTIONS = ToolbarAction.createMany<TenantDto[]>([\n  {\n    text: 'AbpTenantManagement::ManageHostFeatures',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.openFeaturesModal(null);\n    },\n    permission: 'FeatureManagement.ManageHostFeatures',\n    icon: 'fa fa-cog',\n  },\n  {\n    text: 'AbpTenantManagement::NewTenant',\n    action: data => {\n      const component = data.getInjected(TenantsComponent);\n      component.addTenant();\n    },\n    permission: 'AbpTenantManagement.Tenants.Create',\n    icon: 'fa fa-plus',\n  },\n]);\n","import {\n  CreateFormPropContributorCallback,\n  EditFormPropContributorCallback,\n  EntityActionContributorCallback,\n  EntityPropContributorCallback,\n  ToolbarActionContributorCallback,\n} from '@abp/ng.theme.shared/extensions';\nimport { InjectionToken } from '@angular/core';\nimport { DEFAULT_TENANTS_ENTITY_ACTIONS } from '../defaults/default-tenants-entity-actions';\nimport { DEFAULT_TENANTS_ENTITY_PROPS } from '../defaults/default-tenants-entity-props';\nimport {\n  DEFAULT_TENANTS_CREATE_FORM_PROPS,\n  DEFAULT_TENANTS_EDIT_FORM_PROPS,\n} from '../defaults/default-tenants-form-props';\nimport { DEFAULT_TENANTS_TOOLBAR_ACTIONS } from '../defaults/default-tenants-toolbar-actions';\nimport { eTenantManagementComponents } from '../enums/components';\nimport { TenantCreateDto, TenantDto, TenantUpdateDto } from '../proxy/models';\n\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_ACTIONS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_TOOLBAR_ACTIONS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_PROPS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_CREATE_FORM_PROPS,\n};\n\nexport const DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS = {\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_EDIT_FORM_PROPS,\n};\n\nexport const TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS = new InjectionToken<EntityActionContributors>(\n  'TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS = new InjectionToken<ToolbarActionContributors>(\n  'TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS = new InjectionToken<EntityPropContributors>(\n  'TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS = new InjectionToken<CreateFormPropContributors>(\n  'TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS',\n);\n\nexport const TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS = new InjectionToken<EditFormPropContributors>(\n  'TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS',\n);\n\n// Fix for TS4023 -> https://github.com/microsoft/TypeScript/issues/9944#issuecomment-254693497\ntype EntityActionContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: EntityActionContributorCallback<TenantDto>[];\n}>;\ntype ToolbarActionContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: ToolbarActionContributorCallback<TenantDto[]>[];\n}>;\ntype EntityPropContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: EntityPropContributorCallback<TenantDto>[];\n}>;\ntype CreateFormPropContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: CreateFormPropContributorCallback<TenantCreateDto>[];\n}>;\ntype EditFormPropContributors = Partial<{\n  [eTenantManagementComponents.Tenants]: EditFormPropContributorCallback<TenantUpdateDto>[];\n}>;\n","import { ConfigStateService } from '@abp/ng.core';\nimport {\n  ExtensionsService,\n  getObjectExtensionEntitiesFromStore,\n  mapEntitiesToContributors,\n  mergeWithDefaultActions,\n  mergeWithDefaultProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { Injectable, Injector } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { eTenantManagementComponents } from '../enums/components';\nimport {\n  TenantManagementCreateFormPropContributors,\n  TenantManagementEditFormPropContributors,\n  TenantManagementEntityActionContributors,\n  TenantManagementEntityPropContributors,\n  TenantManagementToolbarActionContributors,\n} from '../models/config-options';\nimport {\n  DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\n  DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\n  DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\n} from '../tokens/extensions.token';\n\n@Injectable()\nexport class TenantManagementExtensionsGuard implements CanActivate {\n  constructor(private injector: Injector) {}\n\n  canActivate(): Observable<boolean> {\n    const extensions: ExtensionsService = this.injector.get(ExtensionsService);\n    const actionContributors: TenantManagementEntityActionContributors =\n      this.injector.get(TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, null) || {};\n    const toolbarContributors: TenantManagementToolbarActionContributors =\n      this.injector.get(TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};\n    const propContributors: TenantManagementEntityPropContributors =\n      this.injector.get(TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, null) || {};\n    const createFormContributors: TenantManagementCreateFormPropContributors =\n      this.injector.get(TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};\n    const editFormContributors: TenantManagementEditFormPropContributors =\n      this.injector.get(TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};\n\n    const configState = this.injector.get(ConfigStateService);\n    return getObjectExtensionEntitiesFromStore(configState, 'TenantManagement').pipe(\n      map(entities => ({\n        [eTenantManagementComponents.Tenants]: entities.Tenant,\n      })),\n      mapEntitiesToContributors(configState, 'TenantManagement'),\n      tap(objectExtensionContributors => {\n        mergeWithDefaultActions(\n          extensions.entityActions,\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\n          actionContributors,\n        );\n        mergeWithDefaultActions(\n          extensions.toolbarActions,\n          DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\n          toolbarContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.entityProps,\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\n          objectExtensionContributors.prop,\n          propContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.createFormProps,\n          DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\n          objectExtensionContributors.createForm,\n          createFormContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.editFormProps,\n          DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\n          objectExtensionContributors.editForm,\n          editFormContributors,\n        );\n      }),\n      mapTo(true),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { TenantManagementState } from '../states/tenant-management.state';\nimport { ABP } from '@abp/ng.core';\nimport { GetTenants, GetTenantById, CreateTenant, UpdateTenant, DeleteTenant } from '../actions';\nimport { TenantManagement } from '../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantManagementStateService {\n  constructor(private store: Store) {}\n\n  get() {\n    return this.store.selectSnapshot(TenantManagementState.get);\n  }\n\n  getTenantsTotalCount() {\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\n  }\n\n  dispatchGetTenants(...args: ConstructorParameters<typeof GetTenants>) {\n    return this.store.dispatch(new GetTenants(...args));\n  }\n\n  dispatchGetTenantById(...args: ConstructorParameters<typeof GetTenantById>) {\n    return this.store.dispatch(new GetTenantById(...args));\n  }\n\n  dispatchCreateTenant(...args: ConstructorParameters<typeof CreateTenant>) {\n    return this.store.dispatch(new CreateTenant(...args));\n  }\n\n  dispatchUpdateTenant(...args: ConstructorParameters<typeof UpdateTenant>) {\n    return this.store.dispatch(new UpdateTenant(...args));\n  }\n\n  dispatchDeleteTenant(...args: ConstructorParameters<typeof DeleteTenant>) {\n    return this.store.dispatch(new DeleteTenant(...args));\n  }\n}\n","import {\n  AuthGuard,\n  DynamicLayoutComponent,\n  PermissionGuard,\n  ReplaceableComponents,\n  ReplaceableRouteContainerComponent,\n} from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { eTenantManagementComponents } from './enums/components';\nimport { TenantManagementExtensionsGuard } from './guards';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard, TenantManagementExtensionsGuard],\n    children: [\n      {\n        path: 'tenants',\n        component: ReplaceableRouteContainerComponent,\n        data: {\n          requiredPolicy: 'AbpTenantManagement.Tenants',\n          replaceableComponent: {\n            key: eTenantManagementComponents.Tenants,\n            defaultComponent: TenantsComponent,\n          } as ReplaceableComponents.RouteData<TenantsComponent>,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TenantManagementRoutingModule {}\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { TenantManagementExtensionsGuard } from './guards/extensions.guard';\nimport { TenantManagementConfigOptions } from './models/config-options';\nimport { TenantManagementState } from './states/tenant-management.state';\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\nimport {\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\n} from './tokens/extensions.token';\n\n@NgModule({\n  declarations: [TenantsComponent],\n  exports: [TenantsComponent],\n  imports: [\n    TenantManagementRoutingModule,\n    NgxsModule.forFeature([TenantManagementState]),\n    NgxValidateCoreModule,\n    CoreModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n    FeatureManagementModule,\n    UiExtensionsModule,\n  ],\n})\nexport class TenantManagementModule {\n  static forChild(\n    options: TenantManagementConfigOptions = {},\n  ): ModuleWithProviders<TenantManagementModule> {\n    return {\n      ngModule: TenantManagementModule,\n      providers: [\n        {\n          provide: TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\n          useValue: options.entityActionContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\n          useValue: options.toolbarActionContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\n          useValue: options.entityPropContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\n          useValue: options.createFormPropContributors,\n        },\n        {\n          provide: TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\n          useValue: options.editFormPropContributors,\n        },\n        TenantManagementExtensionsGuard,\n      ],\n    };\n  }\n\n  static forLazy(\n    options: TenantManagementConfigOptions = {},\n  ): NgModuleFactory<TenantManagementModule> {\n    return new LazyModuleFactory(TenantManagementModule.forChild(options));\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CreateTenant as ɵg,DeleteTenant as ɵi,GetTenantById as ɵf,GetTenants as ɵe,UpdateTenant as ɵh} from './lib/actions/tenant-management.actions';\nexport {TenantsComponent as ɵa} from './lib/components/tenants/tenants.component';\nexport {eTenantManagementComponents as ɵb} from './lib/enums/components';\nexport {TenantManagementExtensionsGuard as ɵm} from './lib/guards';\nexport {TenantManagementExtensionsGuard as ɵs} from './lib/guards/extensions.guard';\nexport {GetTenantsInput as ɵj,TenantCreateDto as ɵk} from './lib/proxy/models';\nexport {TenantService as ɵd} from './lib/proxy/tenant.service';\nexport {TenantManagementState as ɵc} from './lib/states/tenant-management.state';\nexport {TenantManagementRoutingModule as ɵl} from './lib/tenant-management-routing.module';\nexport {TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS as ɵq,TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS as ɵr,TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS as ɵn,TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS as ɵp,TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS as ɵo} from './lib/tokens/extensions.token';"],"names":[],"mappings":"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"}