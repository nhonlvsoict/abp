import { RoutesService } from '@abp/ng.core';
import { Component, Input, Renderer2, ViewChildren, } from '@angular/core';
export class RoutesComponent {
    constructor(routesService, renderer) {
        this.routesService = routesService;
        this.renderer = renderer;
        this.trackByFn = (_, item) => item.name;
    }
    isDropdown(node) {
        return !(node === null || node === void 0 ? void 0 : node.isLeaf) || this.routesService.hasChildren(node.name);
    }
    closeDropdown() {
        this.childrenContainers.forEach(({ nativeElement }) => {
            this.renderer.addClass(nativeElement, 'd-none');
            setTimeout(() => this.renderer.removeClass(nativeElement, 'd-none'), 0);
        });
    }
}
RoutesComponent.decorators = [
    { type: Component, args: [{
                selector: 'abp-routes',
                template: "<ul class=\"navbar-nav\">\n  <ng-container\n    *ngFor=\"let route of routesService.visible$ | async; trackBy: trackByFn\"\n    [ngTemplateOutlet]=\"isDropdown(route) ? dropdownLink : defaultLink\"\n    [ngTemplateOutletContext]=\"{ $implicit: route }\"\n  >\n  </ng-container>\n\n  <ng-template #defaultLink let-route>\n    <li class=\"nav-item\" *abpPermission=\"route.requiredPolicy\">\n      <a class=\"nav-link\" [routerLink]=\"[route.path]\"\n        ><i *ngIf=\"route.iconClass\" [ngClass]=\"route.iconClass\"></i>\n        {{ route.name | abpLocalization }}</a\n      >\n    </li>\n  </ng-template>\n\n  <ng-template #dropdownLink let-route>\n    <ng-container *ngIf=\"route.children?.length\">\n      <li\n        #navbarRootDropdown\n        class=\"nav-item dropdown\"\n        display=\"static\"\n        *abpPermission=\"route.requiredPolicy\"\n        (click)=\"\n          navbarRootDropdown.expand\n            ? (navbarRootDropdown.expand = false)\n            : (navbarRootDropdown.expand = true)\n        \"\n      >\n        <a\n          class=\"nav-link dropdown-toggle\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          href=\"javascript:void(0)\"\n        >\n          <i *ngIf=\"route.iconClass\" [ngClass]=\"route.iconClass\"></i>\n          {{ route.name | abpLocalization }}\n        </a>\n        <div\n          #routeContainer\n          class=\"dropdown-menu border-0 shadow-sm\"\n          (click)=\"$event.preventDefault(); $event.stopPropagation()\"\n          [class.d-block]=\"smallScreen && navbarRootDropdown.expand\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"forTemplate; context: { $implicit: route }\"\n          ></ng-container>\n        </div>\n      </li>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #forTemplate let-route>\n    <ng-container *ngFor=\"let child of route.children\">\n      <ng-template\n        [ngTemplateOutlet]=\"child.children?.length ? dropdownChild : defaultChild\"\n        [ngTemplateOutletContext]=\"{ $implicit: child }\"\n      ></ng-template>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #defaultChild let-child>\n    <ng-container *ngIf=\"child.path\">\n      <div class=\"dropdown-submenu\" *abpPermission=\"child.requiredPolicy\">\n        <a class=\"dropdown-item\" [routerLink]=\"[child.path]\" (click)=\"closeDropdown()\">\n          <i *ngIf=\"child.iconClass\" [ngClass]=\"child.iconClass\"></i>\n          {{ child.name | abpLocalization }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #dropdownChild let-child>\n    <div\n      class=\"dropdown-submenu\"\n      ngbDropdown\n      #dropdownSubmenu=\"ngbDropdown\"\n      placement=\"right-top\"\n      [autoClose]=\"true\"\n      *abpPermission=\"child.requiredPolicy\"\n    >\n      <div ngbDropdownToggle [class.dropdown-toggle]=\"false\">\n        <a\n          abpEllipsis=\"210px\"\n          [abpEllipsisEnabled]=\"!smallScreen\"\n          role=\"button\"\n          class=\"btn d-block text-left dropdown-toggle\"\n        >\n          <i *ngIf=\"child.iconClass\" [ngClass]=\"child.iconClass\"></i>\n          {{ child.name | abpLocalization }}\n        </a>\n      </div>\n      <div\n        #childrenContainer\n        class=\"dropdown-menu border-0 shadow-sm\"\n        [class.d-block]=\"smallScreen && dropdownSubmenu.isOpen()\"\n      >\n        <ng-container *ngTemplateOutlet=\"forTemplate; context: { $implicit: child }\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</ul>\n"
            },] }
];
RoutesComponent.ctorParameters = () => [
    { type: RoutesService },
    { type: Renderer2 }
];
RoutesComponent.propDecorators = {
    smallScreen: [{ type: Input }],
    childrenContainers: [{ type: ViewChildren, args: ['childrenContainer',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lLWJhc2ljL3NyYy9saWIvY29tcG9uZW50cy9yb3V0ZXMvcm91dGVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQU8sYUFBYSxFQUFZLE1BQU0sY0FBYyxDQUFDO0FBQzVELE9BQU8sRUFDTCxTQUFTLEVBRVQsS0FBSyxFQUVMLFNBQVMsRUFFVCxZQUFZLEdBQ2IsTUFBTSxlQUFlLENBQUM7QUFNdkIsTUFBTSxPQUFPLGVBQWU7SUFPMUIsWUFBNEIsYUFBNEIsRUFBWSxRQUFtQjtRQUEzRCxrQkFBYSxHQUFiLGFBQWEsQ0FBZTtRQUFZLGFBQVEsR0FBUixRQUFRLENBQVc7UUFGdkYsY0FBUyxHQUF5QyxDQUFDLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7SUFFaUIsQ0FBQztJQUUzRixVQUFVLENBQUMsSUFBeUI7UUFDbEMsT0FBTyxFQUFDLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxNQUFNLENBQUEsSUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVELGFBQWE7UUFDWCxJQUFJLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxhQUFhLEVBQUUsRUFBRSxFQUFFO1lBQ3BELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQztZQUNoRCxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzFFLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBdEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsNmhIQUFvQzthQUNyQzs7O1lBZGEsYUFBYTtZQU16QixTQUFTOzs7MEJBVVIsS0FBSztpQ0FFTCxZQUFZLFNBQUMsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQUJQLCBSb3V0ZXNTZXJ2aWNlLCBUcmVlTm9kZSB9IGZyb20gJ0BhYnAvbmcuY29yZSc7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIElucHV0LFxuICBRdWVyeUxpc3QsXG4gIFJlbmRlcmVyMixcbiAgVHJhY2tCeUZ1bmN0aW9uLFxuICBWaWV3Q2hpbGRyZW4sXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhYnAtcm91dGVzJyxcbiAgdGVtcGxhdGVVcmw6ICdyb3V0ZXMuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBSb3V0ZXNDb21wb25lbnQge1xuICBASW5wdXQoKSBzbWFsbFNjcmVlbjogYm9vbGVhbjtcblxuICBAVmlld0NoaWxkcmVuKCdjaGlsZHJlbkNvbnRhaW5lcicpIGNoaWxkcmVuQ29udGFpbmVyczogUXVlcnlMaXN0PEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+PjtcblxuICB0cmFja0J5Rm46IFRyYWNrQnlGdW5jdGlvbjxUcmVlTm9kZTxBQlAuUm91dGU+PiA9IChfLCBpdGVtKSA9PiBpdGVtLm5hbWU7XG5cbiAgY29uc3RydWN0b3IocHVibGljIHJlYWRvbmx5IHJvdXRlc1NlcnZpY2U6IFJvdXRlc1NlcnZpY2UsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIGlzRHJvcGRvd24obm9kZTogVHJlZU5vZGU8QUJQLlJvdXRlPikge1xuICAgIHJldHVybiAhbm9kZT8uaXNMZWFmIHx8IHRoaXMucm91dGVzU2VydmljZS5oYXNDaGlsZHJlbihub2RlLm5hbWUpO1xuICB9XG5cbiAgY2xvc2VEcm9wZG93bigpIHtcbiAgICB0aGlzLmNoaWxkcmVuQ29udGFpbmVycy5mb3JFYWNoKCh7IG5hdGl2ZUVsZW1lbnQgfSkgPT4ge1xuICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyhuYXRpdmVFbGVtZW50LCAnZC1ub25lJyk7XG4gICAgICBzZXRUaW1lb3V0KCgpID0+IHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3MobmF0aXZlRWxlbWVudCwgJ2Qtbm9uZScpLCAwKTtcbiAgICB9KTtcbiAgfVxufVxuIl19