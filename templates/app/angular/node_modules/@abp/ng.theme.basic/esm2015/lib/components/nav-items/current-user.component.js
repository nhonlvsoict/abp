import { AuthService, ConfigStateService, NAVIGATE_TO_MANAGE_PROFILE, SessionStateService, } from '@abp/ng.core';
import { Component, Inject } from '@angular/core';
export class CurrentUserComponent {
    constructor(navigateToManageProfile, authService, configState, sessionState) {
        this.navigateToManageProfile = navigateToManageProfile;
        this.authService = authService;
        this.configState = configState;
        this.sessionState = sessionState;
        this.currentUser$ = this.configState.getOne$('currentUser');
        this.selectedTenant$ = this.sessionState.getTenant$();
    }
    get smallScreen() {
        return window.innerWidth < 992;
    }
    navigateToLogin() {
        this.authService.navigateToLogin();
    }
    logout() {
        this.authService.logout().subscribe();
    }
}
CurrentUserComponent.decorators = [
    { type: Component, args: [{
                selector: 'abp-current-user',
                template: "<ng-template #loginBtn>\n  <a role=\"button\" class=\"nav-link pointer\" (click)=\"navigateToLogin()\">{{\n    'AbpAccount::Login' | abpLocalization\n  }}</a>\n</ng-template>\n<div\n  *ngIf=\"(currentUser$ | async)?.isAuthenticated; else loginBtn\"\n  ngbDropdown\n  class=\"dropdown\"\n  #currentUserDropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <a\n    ngbDropdownToggle\n    class=\"nav-link\"\n    href=\"javascript:void(0)\"\n    role=\"button\"\n    id=\"dropdownMenuLink\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n  >\n    <small *ngIf=\"(selectedTenant$ | async)?.name as tenantName\"\n      ><i>{{ tenantName }}</i\n      >\\</small\n    >\n    <strong>{{ (currentUser$ | async)?.userName }}</strong>\n  </a>\n  <div\n    class=\"dropdown-menu dropdown-menu-right border-0 shadow-sm\"\n    aria-labelledby=\"dropdownMenuLink\"\n    [class.d-block]=\"smallScreen && currentUserDropdown.isOpen()\"\n  >\n    <a class=\"dropdown-item pointer\" (click)=\"navigateToManageProfile()\"\n      ><i class=\"fa fa-cog mr-1\"></i>{{ 'AbpAccount::MyAccount' | abpLocalization }}</a\n    >\n    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"logout()\"\n      ><i class=\"fa fa-power-off mr-1\"></i>{{ 'AbpUi::Logout' | abpLocalization }}</a\n    >\n  </div>\n</div>\n"
            },] }
];
CurrentUserComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [NAVIGATE_TO_MANAGE_PROFILE,] }] },
    { type: AuthService },
    { type: ConfigStateService },
    { type: SessionStateService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VycmVudC11c2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL3RoZW1lLWJhc2ljL3NyYy9saWIvY29tcG9uZW50cy9uYXYtaXRlbXMvY3VycmVudC11c2VyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsV0FBVyxFQUNYLGtCQUFrQixFQUVsQiwwQkFBMEIsRUFDMUIsbUJBQW1CLEdBQ3BCLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT2xELE1BQU0sT0FBTyxvQkFBb0I7SUFRL0IsWUFDNkMsdUJBQXVCLEVBQzFELFdBQXdCLEVBQ3hCLFdBQStCLEVBQy9CLFlBQWlDO1FBSEUsNEJBQXVCLEdBQXZCLHVCQUF1QixDQUFBO1FBQzFELGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3hCLGdCQUFXLEdBQVgsV0FBVyxDQUFvQjtRQUMvQixpQkFBWSxHQUFaLFlBQVksQ0FBcUI7UUFYM0MsaUJBQVksR0FBK0IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbkYsb0JBQWUsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBVzlDLENBQUM7SUFUSixJQUFJLFdBQVc7UUFDYixPQUFPLE1BQU0sQ0FBQyxVQUFVLEdBQUcsR0FBRyxDQUFDO0lBQ2pDLENBQUM7SUFTRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUNyQyxDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDeEMsQ0FBQzs7O1lBekJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixvMENBQTRDO2FBQzdDOzs7NENBVUksTUFBTSxTQUFDLDBCQUEwQjtZQXRCcEMsV0FBVztZQUNYLGtCQUFrQjtZQUdsQixtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBdXRoU2VydmljZSxcbiAgQ29uZmlnU3RhdGVTZXJ2aWNlLFxuICBDdXJyZW50VXNlckR0byxcbiAgTkFWSUdBVEVfVE9fTUFOQUdFX1BST0ZJTEUsXG4gIFNlc3Npb25TdGF0ZVNlcnZpY2UsXG59IGZyb20gJ0BhYnAvbmcuY29yZSc7XG5pbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhYnAtY3VycmVudC11c2VyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2N1cnJlbnQtdXNlci5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEN1cnJlbnRVc2VyQ29tcG9uZW50IHtcbiAgY3VycmVudFVzZXIkOiBPYnNlcnZhYmxlPEN1cnJlbnRVc2VyRHRvPiA9IHRoaXMuY29uZmlnU3RhdGUuZ2V0T25lJCgnY3VycmVudFVzZXInKTtcbiAgc2VsZWN0ZWRUZW5hbnQkID0gdGhpcy5zZXNzaW9uU3RhdGUuZ2V0VGVuYW50JCgpO1xuXG4gIGdldCBzbWFsbFNjcmVlbigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gd2luZG93LmlubmVyV2lkdGggPCA5OTI7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KE5BVklHQVRFX1RPX01BTkFHRV9QUk9GSUxFKSBwdWJsaWMgbmF2aWdhdGVUb01hbmFnZVByb2ZpbGUsXG4gICAgcHJpdmF0ZSBhdXRoU2VydmljZTogQXV0aFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBjb25maWdTdGF0ZTogQ29uZmlnU3RhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgc2Vzc2lvblN0YXRlOiBTZXNzaW9uU3RhdGVTZXJ2aWNlLFxuICApIHt9XG5cbiAgbmF2aWdhdGVUb0xvZ2luKCkge1xuICAgIHRoaXMuYXV0aFNlcnZpY2UubmF2aWdhdGVUb0xvZ2luKCk7XG4gIH1cblxuICBsb2dvdXQoKSB7XG4gICAgdGhpcy5hdXRoU2VydmljZS5sb2dvdXQoKS5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIl19