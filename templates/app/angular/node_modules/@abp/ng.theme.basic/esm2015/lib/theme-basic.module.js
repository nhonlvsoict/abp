import { CoreModule } from '@abp/ng.core';
import { ThemeSharedModule } from '@abp/ng.theme.shared';
import { NgModule } from '@angular/core';
import { NgbCollapseModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';
import { NgxValidateCoreModule, VALIDATION_ERROR_TEMPLATE, VALIDATION_INVALID_CLASSES, VALIDATION_TARGET_SELECTOR, } from '@ngx-validate/core';
import { AccountLayoutComponent } from './components/account-layout/account-layout.component';
import { ApplicationLayoutComponent } from './components/application-layout/application-layout.component';
import { EmptyLayoutComponent } from './components/empty-layout/empty-layout.component';
import { LogoComponent } from './components/logo/logo.component';
import { CurrentUserComponent } from './components/nav-items/current-user.component';
import { LanguagesComponent } from './components/nav-items/languages.component';
import { NavItemsComponent } from './components/nav-items/nav-items.component';
import { RoutesComponent } from './components/routes/routes.component';
import { ValidationErrorComponent } from './components/validation-error/validation-error.component';
import { BASIC_THEME_NAV_ITEM_PROVIDERS } from './providers/nav-item.provider';
import { BASIC_THEME_STYLES_PROVIDERS } from './providers/styles.provider';
import { PageAlertContainerComponent } from './components/page-alert-container/page-alert-container.component';
import { TenantBoxComponent } from './components/account-layout/tenant-box/tenant-box.component';
import { AuthWrapperComponent } from './components/account-layout/auth-wrapper/auth-wrapper.component';
export const LAYOUTS = [ApplicationLayoutComponent, AccountLayoutComponent, EmptyLayoutComponent];
export class BaseThemeBasicModule {
}
BaseThemeBasicModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ...LAYOUTS,
                    ValidationErrorComponent,
                    LogoComponent,
                    NavItemsComponent,
                    RoutesComponent,
                    CurrentUserComponent,
                    LanguagesComponent,
                    PageAlertContainerComponent,
                    TenantBoxComponent,
                    AuthWrapperComponent,
                ],
                exports: [
                    ...LAYOUTS,
                    ValidationErrorComponent,
                    LogoComponent,
                    NavItemsComponent,
                    RoutesComponent,
                    CurrentUserComponent,
                    LanguagesComponent,
                    PageAlertContainerComponent,
                ],
                imports: [
                    CoreModule,
                    ThemeSharedModule,
                    NgbCollapseModule,
                    NgbDropdownModule,
                    NgxValidateCoreModule,
                ],
                entryComponents: [...LAYOUTS, ValidationErrorComponent, CurrentUserComponent, LanguagesComponent],
            },] }
];
export class ThemeBasicModule {
    static forRoot() {
        return {
            ngModule: ThemeBasicModule,
            providers: [
                BASIC_THEME_NAV_ITEM_PROVIDERS,
                BASIC_THEME_STYLES_PROVIDERS,
                {
                    provide: VALIDATION_ERROR_TEMPLATE,
                    useValue: ValidationErrorComponent,
                },
                {
                    provide: VALIDATION_TARGET_SELECTOR,
                    useValue: '.form-group',
                },
                {
                    provide: VALIDATION_INVALID_CLASSES,
                    useValue: 'is-invalid',
                },
            ],
        };
    }
}
ThemeBasicModule.decorators = [
    { type: NgModule, args: [{
                exports: [BaseThemeBasicModule],
                imports: [BaseThemeBasicModule],
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUtYmFzaWMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtYmFzaWMvc3JjL2xpYi90aGVtZS1iYXNpYy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMxQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RCxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNsRixPQUFPLEVBQ0wscUJBQXFCLEVBQ3JCLHlCQUF5QixFQUN6QiwwQkFBMEIsRUFDMUIsMEJBQTBCLEdBQzNCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDOUYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sOERBQThELENBQUM7QUFDMUcsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDeEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwwREFBMEQsQ0FBQztBQUNwRyxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMvRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUMzRSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrRUFBa0UsQ0FBQztBQUMvRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2REFBNkQsQ0FBQztBQUNqRyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpRUFBaUUsQ0FBQztBQUV2RyxNQUFNLENBQUMsTUFBTSxPQUFPLEdBQUcsQ0FBQywwQkFBMEIsRUFBRSxzQkFBc0IsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO0FBa0NsRyxNQUFNLE9BQU8sb0JBQW9COzs7WUFoQ2hDLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osR0FBRyxPQUFPO29CQUNWLHdCQUF3QjtvQkFDeEIsYUFBYTtvQkFDYixpQkFBaUI7b0JBQ2pCLGVBQWU7b0JBQ2Ysb0JBQW9CO29CQUNwQixrQkFBa0I7b0JBQ2xCLDJCQUEyQjtvQkFDM0Isa0JBQWtCO29CQUNsQixvQkFBb0I7aUJBQ3JCO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxHQUFHLE9BQU87b0JBQ1Ysd0JBQXdCO29CQUN4QixhQUFhO29CQUNiLGlCQUFpQjtvQkFDakIsZUFBZTtvQkFDZixvQkFBb0I7b0JBQ3BCLGtCQUFrQjtvQkFDbEIsMkJBQTJCO2lCQUM1QjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsVUFBVTtvQkFDVixpQkFBaUI7b0JBQ2pCLGlCQUFpQjtvQkFDakIsaUJBQWlCO29CQUNqQixxQkFBcUI7aUJBQ3RCO2dCQUNELGVBQWUsRUFBRSxDQUFDLEdBQUcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixDQUFDO2FBQ2xHOztBQU9ELE1BQU0sT0FBTyxnQkFBZ0I7SUFDM0IsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQixTQUFTLEVBQUU7Z0JBQ1QsOEJBQThCO2dCQUM5Qiw0QkFBNEI7Z0JBQzVCO29CQUNFLE9BQU8sRUFBRSx5QkFBeUI7b0JBQ2xDLFFBQVEsRUFBRSx3QkFBd0I7aUJBQ25DO2dCQUNEO29CQUNFLE9BQU8sRUFBRSwwQkFBMEI7b0JBQ25DLFFBQVEsRUFBRSxhQUFhO2lCQUN4QjtnQkFDRDtvQkFDRSxPQUFPLEVBQUUsMEJBQTBCO29CQUNuQyxRQUFRLEVBQUUsWUFBWTtpQkFDdkI7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUF6QkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLG9CQUFvQixDQUFDO2dCQUMvQixPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzthQUNoQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvcmVNb2R1bGUgfSBmcm9tICdAYWJwL25nLmNvcmUnO1xuaW1wb3J0IHsgVGhlbWVTaGFyZWRNb2R1bGUgfSBmcm9tICdAYWJwL25nLnRoZW1lLnNoYXJlZCc7XG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiQ29sbGFwc2VNb2R1bGUsIE5nYkRyb3Bkb3duTW9kdWxlIH0gZnJvbSAnQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAnO1xuaW1wb3J0IHtcbiAgTmd4VmFsaWRhdGVDb3JlTW9kdWxlLFxuICBWQUxJREFUSU9OX0VSUk9SX1RFTVBMQVRFLFxuICBWQUxJREFUSU9OX0lOVkFMSURfQ0xBU1NFUyxcbiAgVkFMSURBVElPTl9UQVJHRVRfU0VMRUNUT1IsXG59IGZyb20gJ0BuZ3gtdmFsaWRhdGUvY29yZSc7XG5pbXBvcnQgeyBBY2NvdW50TGF5b3V0Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FjY291bnQtbGF5b3V0L2FjY291bnQtbGF5b3V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvbkxheW91dENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9hcHBsaWNhdGlvbi1sYXlvdXQvYXBwbGljYXRpb24tbGF5b3V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFbXB0eUxheW91dENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9lbXB0eS1sYXlvdXQvZW1wdHktbGF5b3V0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMb2dvQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2xvZ28vbG9nby5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ3VycmVudFVzZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbmF2LWl0ZW1zL2N1cnJlbnQtdXNlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTGFuZ3VhZ2VzQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25hdi1pdGVtcy9sYW5ndWFnZXMuY29tcG9uZW50JztcbmltcG9ydCB7IE5hdkl0ZW1zQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL25hdi1pdGVtcy9uYXYtaXRlbXMuY29tcG9uZW50JztcbmltcG9ydCB7IFJvdXRlc0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9yb3V0ZXMvcm91dGVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBWYWxpZGF0aW9uRXJyb3JDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvdmFsaWRhdGlvbi1lcnJvci92YWxpZGF0aW9uLWVycm9yLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCQVNJQ19USEVNRV9OQVZfSVRFTV9QUk9WSURFUlMgfSBmcm9tICcuL3Byb3ZpZGVycy9uYXYtaXRlbS5wcm92aWRlcic7XG5pbXBvcnQgeyBCQVNJQ19USEVNRV9TVFlMRVNfUFJPVklERVJTIH0gZnJvbSAnLi9wcm92aWRlcnMvc3R5bGVzLnByb3ZpZGVyJztcbmltcG9ydCB7IFBhZ2VBbGVydENvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9wYWdlLWFsZXJ0LWNvbnRhaW5lci9wYWdlLWFsZXJ0LWNvbnRhaW5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGVuYW50Qm94Q29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL2FjY291bnQtbGF5b3V0L3RlbmFudC1ib3gvdGVuYW50LWJveC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXV0aFdyYXBwZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvYWNjb3VudC1sYXlvdXQvYXV0aC13cmFwcGVyL2F1dGgtd3JhcHBlci5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgTEFZT1VUUyA9IFtBcHBsaWNhdGlvbkxheW91dENvbXBvbmVudCwgQWNjb3VudExheW91dENvbXBvbmVudCwgRW1wdHlMYXlvdXRDb21wb25lbnRdO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICAuLi5MQVlPVVRTLFxuICAgIFZhbGlkYXRpb25FcnJvckNvbXBvbmVudCxcbiAgICBMb2dvQ29tcG9uZW50LFxuICAgIE5hdkl0ZW1zQ29tcG9uZW50LFxuICAgIFJvdXRlc0NvbXBvbmVudCxcbiAgICBDdXJyZW50VXNlckNvbXBvbmVudCxcbiAgICBMYW5ndWFnZXNDb21wb25lbnQsXG4gICAgUGFnZUFsZXJ0Q29udGFpbmVyQ29tcG9uZW50LFxuICAgIFRlbmFudEJveENvbXBvbmVudCxcbiAgICBBdXRoV3JhcHBlckNvbXBvbmVudCxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIC4uLkxBWU9VVFMsXG4gICAgVmFsaWRhdGlvbkVycm9yQ29tcG9uZW50LFxuICAgIExvZ29Db21wb25lbnQsXG4gICAgTmF2SXRlbXNDb21wb25lbnQsXG4gICAgUm91dGVzQ29tcG9uZW50LFxuICAgIEN1cnJlbnRVc2VyQ29tcG9uZW50LFxuICAgIExhbmd1YWdlc0NvbXBvbmVudCxcbiAgICBQYWdlQWxlcnRDb250YWluZXJDb21wb25lbnQsXG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIFRoZW1lU2hhcmVkTW9kdWxlLFxuICAgIE5nYkNvbGxhcHNlTW9kdWxlLFxuICAgIE5nYkRyb3Bkb3duTW9kdWxlLFxuICAgIE5neFZhbGlkYXRlQ29yZU1vZHVsZSxcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbLi4uTEFZT1VUUywgVmFsaWRhdGlvbkVycm9yQ29tcG9uZW50LCBDdXJyZW50VXNlckNvbXBvbmVudCwgTGFuZ3VhZ2VzQ29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgQmFzZVRoZW1lQmFzaWNNb2R1bGUge31cblxuQE5nTW9kdWxlKHtcbiAgZXhwb3J0czogW0Jhc2VUaGVtZUJhc2ljTW9kdWxlXSxcbiAgaW1wb3J0czogW0Jhc2VUaGVtZUJhc2ljTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgVGhlbWVCYXNpY01vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8VGhlbWVCYXNpY01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogVGhlbWVCYXNpY01vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICBCQVNJQ19USEVNRV9OQVZfSVRFTV9QUk9WSURFUlMsXG4gICAgICAgIEJBU0lDX1RIRU1FX1NUWUxFU19QUk9WSURFUlMsXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBWQUxJREFUSU9OX0VSUk9SX1RFTVBMQVRFLFxuICAgICAgICAgIHVzZVZhbHVlOiBWYWxpZGF0aW9uRXJyb3JDb21wb25lbnQsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBWQUxJREFUSU9OX1RBUkdFVF9TRUxFQ1RPUixcbiAgICAgICAgICB1c2VWYWx1ZTogJy5mb3JtLWdyb3VwJyxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IFZBTElEQVRJT05fSU5WQUxJRF9DTEFTU0VTLFxuICAgICAgICAgIHVzZVZhbHVlOiAnaXMtaW52YWxpZCcsXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH07XG4gIH1cbn1cbiJdfQ==