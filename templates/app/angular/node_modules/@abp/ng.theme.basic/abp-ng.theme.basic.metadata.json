{"__symbolic":"module","version":4,"exports":[{"from":"./lib/nav-item.provider"},{"from":"./lib/styles.provider"},{"from":"./lib/account-layout/tenant-box/tenant-box.component"},{"from":"./lib/application-layout/application-layout.component"},{"from":"./lib/empty-layout/empty-layout.component"},{"from":"./lib/logo/logo.component"},{"from":"./lib/nav-items/current-user.component"},{"from":"./lib/nav-items/languages.component"},{"from":"./lib/nav-items/nav-items.component"},{"from":"./lib/routes/routes.component"},{"from":"./lib/validation-error/validation-error.component"},{"from":"./lib/page-alert-container/page-alert-container.component"}],"metadata":{"LAYOUTS":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"}],"BaseThemeBasicModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":27,"character":1},"arguments":[{"declarations":[{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"LAYOUTS"}},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"}],"exports":[{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"LAYOUTS"}},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"}],"imports":[{"__symbolic":"reference","module":"@abp/ng.core","name":"CoreModule","line":51,"character":4},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"ThemeSharedModule","line":52,"character":4},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbCollapseModule","line":53,"character":4},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbDropdownModule","line":54,"character":4},{"__symbolic":"reference","module":"@ngx-validate/core","name":"NgxValidateCoreModule","line":55,"character":4}],"entryComponents":[{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"LAYOUTS"}},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"}]}]}],"members":{}},"ThemeBasicModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":61,"character":1},"arguments":[{"exports":[{"__symbolic":"reference","name":"BaseThemeBasicModule"}],"imports":[{"__symbolic":"reference","name":"BaseThemeBasicModule"}]}]}],"members":{},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"ThemeBasicModule"},"providers":[{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵp"},{"provide":{"__symbolic":"reference","module":"@ngx-validate/core","name":"VALIDATION_ERROR_TEMPLATE","line":73,"character":19},"useValue":{"__symbolic":"reference","name":"ɵe"}},{"provide":{"__symbolic":"reference","module":"@ngx-validate/core","name":"VALIDATION_TARGET_SELECTOR","line":77,"character":19},"useValue":".form-group"},{"provide":{"__symbolic":"reference","module":"@ngx-validate/core","name":"VALIDATION_INVALID_CLASSES","line":81,"character":19},"useValue":"is-invalid"}]}}}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"abp-layout-application","animations":[{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"slideFromBottom","line":8,"character":15},{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"collapseWithMargin","line":8,"character":32}],"providers":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","module":"@abp/ng.core","name":"SubscriptionService","line":9,"character":29}],"template":"<nav\n  class=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4\"\n  id=\"main-navbar\"\n  style=\"min-height: 4rem\"\n>\n  <div class=\"container\">\n    <abp-logo *abpReplaceableTemplate=\"{ componentKey: service.logoComponentKey }\"></abp-logo>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      [attr.aria-expanded]=\"!service.isCollapsed\"\n      (click)=\"service.isCollapsed = !service.isCollapsed\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"navbar-collapse\" [class.overflow-hidden]=\"service.smallScreen\" id=\"main-navbar-collapse\">\n      <ng-container *ngTemplateOutlet=\"!service.smallScreen ? navigations : null\"></ng-container>\n\n      <div *ngIf=\"service.smallScreen\" [@collapseWithMargin]=\"service.isCollapsed ? 'collapsed' : 'expanded'\">\n        <ng-container *ngTemplateOutlet=\"navigations\"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <abp-routes\n          *abpReplaceableTemplate=\"{\n            componentKey: service.routesComponentKey,\n            inputs: {\n              smallScreen: { value: service.smallScreen }\n            }\n          }\"\n          class=\"mx-auto\"\n          [smallScreen]=\"service.smallScreen\"\n        ></abp-routes>\n\n        <abp-nav-items\n          *abpReplaceableTemplate=\"{\n            componentKey: service.navItemsComponentKey\n          }\"\n        ></abp-nav-items>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n<!-- [@slideFromBottom]=\"outlet.isActivated && outlet.activatedRoute?.routeConfig?.path\" TODO: throws ExpressionChangedAfterItHasBeenCheck when animation is active. It should be fixed -->\n<div class=\"container\">\n  <abp-page-alert-container></abp-page-alert-container>\n\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngAfterViewInit":[{"__symbolic":"method"}]},"statics":{"type":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@abp/ng.core","name":"eLayoutType","line":13,"character":16},"member":"application"}}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"SubscriptionService","line":18,"character":36},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":18,"character":72}]}],"checkWindowWidth":[{"__symbolic":"method"}],"subscribeWindowSize":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"abp-layout-account","providers":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","module":"@abp/ng.core","name":"SubscriptionService","line":7,"character":29}],"template":"<nav\n  class=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4\"\n  id=\"main-navbar\"\n  style=\"min-height: 4rem\"\n>\n  <div class=\"container\">\n    <abp-logo *abpReplaceableTemplate=\"{ componentKey: service.logoComponentKey }\"></abp-logo>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      [attr.aria-expanded]=\"!service.isCollapsed\"\n      (click)=\"service.isCollapsed = !service.isCollapsed\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div\n      class=\"navbar-collapse\"\n      [class.overflow-hidden]=\"service.smallScreen\"\n      id=\"main-navbar-collapse\"\n    >\n      <ng-container *ngTemplateOutlet=\"!service.smallScreen ? navigations : null\"></ng-container>\n\n      <div\n        *ngIf=\"service.smallScreen\"\n        [@collapseWithMargin]=\"service.isCollapsed ? 'collapsed' : 'expanded'\"\n      >\n        <ng-container *ngTemplateOutlet=\"navigations\"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <abp-routes\n          *abpReplaceableTemplate=\"{\n            componentKey: service.routesComponentKey,\n            inputs: {\n              smallScreen: { value: service.smallScreen }\n            }\n          }\"\n          class=\"mx-auto\"\n          [smallScreen]=\"service.smallScreen\"\n        ></abp-routes>\n\n        <abp-nav-items\n          *abpReplaceableTemplate=\"{\n            componentKey: service.navItemsComponentKey\n          }\"\n        ></abp-nav-items>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n<!-- [@slideFromBottom]=\"outlet.isActivated && outlet.activatedRoute?.routeConfig?.path\" TODO: throws ExpressionChangedAfterItHasBeenCheck when animation is active. It should be fixed -->\n<div class=\"container\">\n  <abp-page-alert-container></abp-page-alert-container>\n  <abp-auth-wrapper\n    *abpReplaceableTemplate=\"{\n      componentKey: authWrapperKey\n    }\"\n  >\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n  </abp-auth-wrapper>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"}]}],"ngAfterViewInit":[{"__symbolic":"method"}]},"statics":{"type":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@abp/ng.core","name":"eLayoutType","line":11,"character":16},"member":"account"}}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-layout-empty","template":"\n    <router-outlet></router-outlet>\n    <abp-confirmation></abp-confirmation>\n  "}]}],"members":{},"statics":{"type":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@abp/ng.core","name":"eLayoutType","line":11,"character":16},"member":"empty"}}},"ɵe":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-validate/core","name":"ValidationErrorComponent","line":13,"character":46},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-validation-error","template":"\n    <div class=\"invalid-feedback\" *ngFor=\"let error of abpErrors; trackBy: trackByFn\">\n      {{ error.message | abpLocalization: error.interpoliteParams }}\n    </div>\n  ","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":10,"character":19},"member":"OnPush"},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":11,"character":17},"member":"None"}}]}],"members":{}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-logo","template":"\n    <a class=\"navbar-brand\" routerLink=\"/\">\n      <img\n        *ngIf=\"appInfo.logoUrl; else appName\"\n        [src]=\"appInfo.logoUrl\"\n        [alt]=\"appInfo.name\"\n        width=\"100%\"\n        height=\"auto\"\n      />\n    </a>\n\n    <ng-template #appName>\n      {{ appInfo.name }}\n    </ng-template>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"EnvironmentService","line":26,"character":35}]}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-nav-items","template":"<ul class=\"navbar-nav\">\n  <ng-container *ngFor=\"let item of navItems.items$ | async; trackBy: trackByFn\">\n    <ng-container *ngIf=\"item.visible()\">\n      <li class=\"nav-item d-flex align-items-center\" *abpPermission=\"item.requiredPolicy\">\n        <ng-container\n          *ngIf=\"item.component; else htmlTemplate\"\n          [ngComponentOutlet]=\"item.component\"\n        ></ng-container>\n\n        <ng-template #htmlTemplate>\n          <div [innerHTML]=\"item.html\" (click)=\"item.action ? item.action() : null\"></div>\n        </ng-template>\n      </li>\n    </ng-container>\n  </ng-container>\n</ul>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"NavItemsService","line":10,"character":40}]}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"abp-routes","template":"<ul class=\"navbar-nav\">\n  <ng-container\n    *ngFor=\"let route of routesService.visible$ | async; trackBy: trackByFn\"\n    [ngTemplateOutlet]=\"isDropdown(route) ? dropdownLink : defaultLink\"\n    [ngTemplateOutletContext]=\"{ $implicit: route }\"\n  >\n  </ng-container>\n\n  <ng-template #defaultLink let-route>\n    <li class=\"nav-item\" *abpPermission=\"route.requiredPolicy\">\n      <a class=\"nav-link\" [routerLink]=\"[route.path]\"\n        ><i *ngIf=\"route.iconClass\" [ngClass]=\"route.iconClass\"></i>\n        {{ route.name | abpLocalization }}</a\n      >\n    </li>\n  </ng-template>\n\n  <ng-template #dropdownLink let-route>\n    <ng-container *ngIf=\"route.children?.length\">\n      <li\n        #navbarRootDropdown\n        class=\"nav-item dropdown\"\n        display=\"static\"\n        *abpPermission=\"route.requiredPolicy\"\n        (click)=\"\n          navbarRootDropdown.expand\n            ? (navbarRootDropdown.expand = false)\n            : (navbarRootDropdown.expand = true)\n        \"\n      >\n        <a\n          class=\"nav-link dropdown-toggle\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          href=\"javascript:void(0)\"\n        >\n          <i *ngIf=\"route.iconClass\" [ngClass]=\"route.iconClass\"></i>\n          {{ route.name | abpLocalization }}\n        </a>\n        <div\n          #routeContainer\n          class=\"dropdown-menu border-0 shadow-sm\"\n          (click)=\"$event.preventDefault(); $event.stopPropagation()\"\n          [class.d-block]=\"smallScreen && navbarRootDropdown.expand\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"forTemplate; context: { $implicit: route }\"\n          ></ng-container>\n        </div>\n      </li>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #forTemplate let-route>\n    <ng-container *ngFor=\"let child of route.children\">\n      <ng-template\n        [ngTemplateOutlet]=\"child.children?.length ? dropdownChild : defaultChild\"\n        [ngTemplateOutletContext]=\"{ $implicit: child }\"\n      ></ng-template>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #defaultChild let-child>\n    <ng-container *ngIf=\"child.path\">\n      <div class=\"dropdown-submenu\" *abpPermission=\"child.requiredPolicy\">\n        <a class=\"dropdown-item\" [routerLink]=\"[child.path]\" (click)=\"closeDropdown()\">\n          <i *ngIf=\"child.iconClass\" [ngClass]=\"child.iconClass\"></i>\n          {{ child.name | abpLocalization }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #dropdownChild let-child>\n    <div\n      class=\"dropdown-submenu\"\n      ngbDropdown\n      #dropdownSubmenu=\"ngbDropdown\"\n      placement=\"right-top\"\n      [autoClose]=\"true\"\n      *abpPermission=\"child.requiredPolicy\"\n    >\n      <div ngbDropdownToggle [class.dropdown-toggle]=\"false\">\n        <a\n          abpEllipsis=\"210px\"\n          [abpEllipsisEnabled]=\"!smallScreen\"\n          role=\"button\"\n          class=\"btn d-block text-left dropdown-toggle\"\n        >\n          <i *ngIf=\"child.iconClass\" [ngClass]=\"child.iconClass\"></i>\n          {{ child.name | abpLocalization }}\n        </a>\n      </div>\n      <div\n        #childrenContainer\n        class=\"dropdown-menu border-0 shadow-sm\"\n        [class.d-block]=\"smallScreen && dropdownSubmenu.isOpen()\"\n      >\n        <ng-container *ngTemplateOutlet=\"forTemplate; context: { $implicit: child }\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</ul>\n"}]}],"members":{"smallScreen":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"childrenContainers":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":18,"character":3},"arguments":["childrenContainer"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"RoutesService","line":22,"character":45},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":22,"character":80}]}],"isDropdown":[{"__symbolic":"method"}],"closeDropdown":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"abp-current-user","template":"<ng-template #loginBtn>\n  <a role=\"button\" class=\"nav-link pointer\" (click)=\"navigateToLogin()\">{{\n    'AbpAccount::Login' | abpLocalization\n  }}</a>\n</ng-template>\n<div\n  *ngIf=\"(currentUser$ | async)?.isAuthenticated; else loginBtn\"\n  ngbDropdown\n  class=\"dropdown\"\n  #currentUserDropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <a\n    ngbDropdownToggle\n    class=\"nav-link\"\n    href=\"javascript:void(0)\"\n    role=\"button\"\n    id=\"dropdownMenuLink\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n  >\n    <small *ngIf=\"(selectedTenant$ | async)?.name as tenantName\"\n      ><i>{{ tenantName }}</i\n      >\\</small\n    >\n    <strong>{{ (currentUser$ | async)?.userName }}</strong>\n  </a>\n  <div\n    class=\"dropdown-menu dropdown-menu-right border-0 shadow-sm\"\n    aria-labelledby=\"dropdownMenuLink\"\n    [class.d-block]=\"smallScreen && currentUserDropdown.isOpen()\"\n  >\n    <a class=\"dropdown-item pointer\" (click)=\"navigateToManageProfile()\"\n      ><i class=\"fa fa-cog mr-1\"></i>{{ 'AbpAccount::MyAccount' | abpLocalization }}</a\n    >\n    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"logout()\"\n      ><i class=\"fa fa-power-off mr-1\"></i>{{ 'AbpUi::Logout' | abpLocalization }}</a\n    >\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":23,"character":5},"arguments":[{"__symbolic":"reference","module":"@abp/ng.core","name":"NAVIGATE_TO_MANAGE_PROFILE","line":23,"character":12}]}],null,null,null],"parameters":[null,{"__symbolic":"reference","module":"@abp/ng.core","name":"AuthService","line":24,"character":25},{"__symbolic":"reference","module":"@abp/ng.core","name":"ConfigStateService","line":25,"character":25},{"__symbolic":"reference","module":"@abp/ng.core","name":"SessionStateService","line":26,"character":26}]}],"navigateToLogin":[{"__symbolic":"method"}],"logout":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"abp-languages","template":"\n    <div\n      *ngIf=\"(dropdownLanguages$ | async)?.length > 0\"\n      class=\"dropdown\"\n      ngbDropdown\n      #languageDropdown=\"ngbDropdown\"\n      display=\"static\"\n    >\n      <a\n        ngbDropdownToggle\n        class=\"nav-link\"\n        href=\"javascript:void(0)\"\n        role=\"button\"\n        id=\"dropdownMenuLink\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {{ defaultLanguage$ | async }}\n      </a>\n      <div\n        class=\"dropdown-menu dropdown-menu-right border-0 shadow-sm\"\n        aria-labelledby=\"dropdownMenuLink\"\n        [class.d-block]=\"smallScreen && languageDropdown.isOpen()\"\n      >\n        <a\n          *ngFor=\"let lang of dropdownLanguages$ | async\"\n          href=\"javascript:void(0)\"\n          class=\"dropdown-item\"\n          (click)=\"onChangeLang(lang.cultureName)\"\n          >{{ lang?.displayName }}</a\n        >\n      </div>\n    </div>\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.core","name":"SessionStateService","line":78,"character":36},{"__symbolic":"reference","module":"@abp/ng.core","name":"ConfigStateService","line":78,"character":78}]}],"onChangeLang":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-page-alert-container","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":6,"character":17},"member":"None"},"template":"<ng-container *ngFor=\"let alert of service.alerts$ | async; let i = index\">\n  <div\n    class=\"alert alert-{{ alert.type }} fade show\"\n    [ngClass]=\"{ 'alert-dismissible fade show': alert.dismissible }\"\n    role=\"alert\"\n  >\n    <h4 class=\"alert-heading\" *ngIf=\"alert.title\">\n      {{ alert.title | abpLocalization: alert.titleLocalizationParams }}\n    </h4>\n    {{ alert.message | abpLocalization: alert.messageLocalizationParams }}\n    <button\n      *ngIf=\"alert.dismissible\"\n      type=\"button\"\n      class=\"close\"\n      data-dismiss=\"alert\"\n      aria-label=\"Close\"\n      (click)=\"service.remove(i)\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n</ng-container>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"PageAlertService","line":9,"character":30}]}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-tenant-box","providers":[{"__symbolic":"reference","module":"@abp/ng.account.core","name":"TenantBoxService","line":6,"character":14}],"template":"<ng-container *ngIf=\"(service.currentTenant$ | async) || {} as currentTenant\">\n  <div class=\"card shadow-sm rounded mb-3\">\n    <div class=\"card-body px-5\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <span style=\"font-size: 0.8em\" class=\"text-uppercase text-muted\">{{\n            'AbpUiMultiTenancy::Tenant' | abpLocalization\n          }}</span\n          ><br />\n          <h6 class=\"m-0 d-inline-block\">\n            <i>{{ currentTenant.name || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}</i>\n          </h6>\n        </div>\n        <div class=\"col-auto\">\n          <a\n            id=\"AbpTenantSwitchLink\"\n            href=\"javascript:void(0);\"\n            class=\"btn btn-sm mt-3 btn-outline-primary\"\n            (click)=\"service.onSwitch()\"\n            >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <abp-modal size=\"md\" [(visible)]=\"service.isModalVisible\" [busy]=\"service.modalBusy\">\n    <ng-template #abpHeader>\n      <h5>Switch Tenant</h5>\n    </ng-template>\n    <ng-template #abpBody>\n      <form (ngSubmit)=\"service.save()\">\n        <div class=\"mt-2\">\n          <div class=\"form-group\">\n            <label for=\"name\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\n            <input\n              [(ngModel)]=\"service.name\"\n              type=\"text\"\n              id=\"name\"\n              name=\"tenant\"\n              class=\"form-control\"\n              autofocus\n            />\n          </div>\n          <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\n        </div>\n      </form>\n    </ng-template>\n    <ng-template #abpFooter>\n      <button abpClose type=\"button\" class=\"btn btn-secondary\">\n        {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\n      </button>\n      <abp-button\n        type=\"abp-button\"\n        iconClass=\"fa fa-check\"\n        (click)=\"service.save()\"\n        [disabled]=\"currentTenant?.name === service.name\"\n      >\n        <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\n      </abp-button>\n    </ng-template>\n  </abp-modal>\n</ng-container>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.account.core","name":"TenantBoxService","line":9,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"abp-auth-wrapper","providers":[{"__symbolic":"reference","module":"@abp/ng.account.core","name":"AuthWrapperService","line":6,"character":14}],"template":"<div class=\"row\">\n  <div class=\"mx-auto col col-md-5\">\n    <ng-container *ngIf=\"(service.isMultiTenancyEnabled$ | async) && service.isTenantBoxVisible\">\n      <abp-tenant-box\n        *abpReplaceableTemplate=\"{ componentKey: service.tenantBoxKey }\"\n      ></abp-tenant-box>\n    </ng-container>\n\n    <div class=\"abp-account-container\">\n      <div\n        *ngIf=\"service.enableLocalLogin$ | async; else disableLocalLoginTemplate\"\n        class=\"card mt-3 shadow-sm rounded\"\n      >\n        <div class=\"card-body p-5\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #disableLocalLoginTemplate>\n  <div class=\"alert alert-warning\">\n    <strong>{{ 'AbpAccount::InvalidLoginRequest' | abpLocalization }}</strong>\n    {{ 'AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient' | abpLocalization }}\n  </div>\n</ng-template>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@abp/ng.account.core","name":"AuthWrapperService","line":9,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵn":[{"provide":{"__symbolic":"reference","module":"@angular/core","name":"APP_INITIALIZER","line":8,"character":13},"useFactory":{"__symbolic":"reference","name":"ɵo"},"deps":[{"__symbolic":"reference","module":"@abp/ng.theme.shared","name":"NavItemsService","line":10,"character":11}],"multi":true}],"ɵo":{"__symbolic":"function","parameters":["navItems"],"value":{"__symbolic":"error","message":"Lambda not supported","line":16,"character":9,"module":"./lib/providers/nav-item.provider"}},"ɵp":[{"provide":{"__symbolic":"reference","module":"@angular/core","name":"APP_INITIALIZER","line":11,"character":13},"useFactory":{"__symbolic":"reference","name":"ɵq"},"deps":[{"__symbolic":"reference","module":"@abp/ng.core","name":"DomInsertionService","line":13,"character":11},{"__symbolic":"reference","module":"@abp/ng.core","name":"ReplaceableComponentsService","line":13,"character":32}],"multi":true}],"ɵq":{"__symbolic":"function","parameters":["domInsertion","replaceableComponents"],"value":{"__symbolic":"error","message":"Lambda not supported","line":22,"character":9,"module":"./lib/providers/styles.provider"}}},"origins":{"LAYOUTS":"./lib/theme-basic.module","BaseThemeBasicModule":"./lib/theme-basic.module","ThemeBasicModule":"./lib/theme-basic.module","ɵa":"./lib/components/application-layout/application-layout.component","ɵb":"./lib/services/layout.service","ɵc":"./lib/components/account-layout/account-layout.component","ɵd":"./lib/components/empty-layout/empty-layout.component","ɵe":"./lib/components/validation-error/validation-error.component","ɵf":"./lib/components/logo/logo.component","ɵg":"./lib/components/nav-items/nav-items.component","ɵh":"./lib/components/routes/routes.component","ɵi":"./lib/components/nav-items/current-user.component","ɵj":"./lib/components/nav-items/languages.component","ɵk":"./lib/components/page-alert-container/page-alert-container.component","ɵl":"./lib/components/account-layout/tenant-box/tenant-box.component","ɵm":"./lib/components/account-layout/auth-wrapper/auth-wrapper.component","ɵn":"./lib/providers/nav-item.provider","ɵo":"./lib/providers/nav-item.provider","ɵp":"./lib/providers/styles.provider","ɵq":"./lib/providers/styles.provider"},"importAs":"@abp/ng.theme.basic"}