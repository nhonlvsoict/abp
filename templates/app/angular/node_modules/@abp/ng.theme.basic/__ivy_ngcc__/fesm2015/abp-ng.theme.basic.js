import { Injectable, ChangeDetectorRef, Component, Inject, Renderer2, Input, ViewChildren, ChangeDetectionStrategy, ViewEncapsulation, APP_INITIALIZER, NgModule } from '@angular/core';
import { SubscriptionService, EnvironmentService, NAVIGATE_TO_MANAGE_PROFILE, AuthService, ConfigStateService, SessionStateService, RoutesService, DomInsertionService, ReplaceableComponentsService, CONTENT_STRATEGY, CoreModule } from '@abp/ng.core';
import { fromEvent } from 'rxjs';
import { debounceTime, map } from 'rxjs/operators';
import { AuthWrapperService, TenantBoxService } from '@abp/ng.account.core';
import { slideFromBottom, collapseWithMargin, NavItemsService, PageAlertService, ThemeSharedModule } from '@abp/ng.theme.shared';
import snq from 'snq';
import { ValidationErrorComponent as ValidationErrorComponent$1, NgxValidateCoreModule, VALIDATION_ERROR_TEMPLATE, VALIDATION_TARGET_SELECTOR, VALIDATION_INVALID_CLASSES } from '@ngx-validate/core';
import { NgbCollapseModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@abp/ng.core';
import * as ɵngcc2 from '@ng-bootstrap/ng-bootstrap';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/router';
import * as ɵngcc5 from '@abp/ng.account.core';
import * as ɵngcc6 from '@abp/ng.theme.shared';
import * as ɵngcc7 from '@angular/forms';

function AccountLayoutComponent_abp_logo_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-logo");
} }
function AccountLayoutComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function AccountLayoutComponent_div_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function AccountLayoutComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, AccountLayoutComponent_div_7_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    const _r3 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("@collapseWithMargin", ctx_r2.service.isCollapsed ? "collapsed" : "expanded");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function AccountLayoutComponent_ng_template_8_abp_routes_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-routes", 10);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("smallScreen", ctx_r7.service.smallScreen);
} }
function AccountLayoutComponent_ng_template_8_abp_nav_items_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-nav-items");
} }
const _c0 = function (a0) { return { value: a0 }; };
const _c1 = function (a0) { return { smallScreen: a0 }; };
const _c2 = function (a0, a1) { return { componentKey: a0, inputs: a1 }; };
const _c3 = function (a0) { return { componentKey: a0 }; };
function AccountLayoutComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, AccountLayoutComponent_ng_template_8_abp_routes_0_Template, 1, 1, "abp-routes", 9);
    ɵngcc0.ɵɵtemplate(1, AccountLayoutComponent_ng_template_8_abp_nav_items_1_Template, 1, 0, "abp-nav-items", 2);
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction2(6, _c2, ctx_r4.service.routesComponentKey, ɵngcc0.ɵɵpureFunction1(4, _c1, ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r4.service.smallScreen))));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx_r4.service.navItemsComponentKey));
} }
function AccountLayoutComponent_abp_auth_wrapper_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "abp-auth-wrapper");
    ɵngcc0.ɵɵelement(1, "router-outlet", null, 11);
    ɵngcc0.ɵɵelementEnd();
} }
function AuthWrapperComponent_ng_container_2_abp_tenant_box_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-tenant-box");
} }
function AuthWrapperComponent_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, AuthWrapperComponent_ng_container_2_abp_tenant_box_1_Template, 1, 0, "abp-tenant-box", 6);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction1(1, _c3, ctx_r0.service.tenantBoxKey));
} }
function AuthWrapperComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "div", 8);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function AuthWrapperComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "strong");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, "AbpAccount::InvalidLoginRequest"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 4, "AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient"), " ");
} }
const _c4 = ["*"];
function TenantBoxComponent_ng_container_0_ng_template_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h5");
    ɵngcc0.ɵɵtext(1, "Switch Tenant");
    ɵngcc0.ɵɵelementEnd();
} }
function TenantBoxComponent_ng_container_0_ng_template_20_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "form", 13);
    ɵngcc0.ɵɵlistener("ngSubmit", function TenantBoxComponent_ng_container_0_ng_template_20_Template_form_ngSubmit_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(2); return ctx_r8.service.save(); });
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelementStart(2, "div", 15);
    ɵngcc0.ɵɵelementStart(3, "label", 16);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "input", 17);
    ɵngcc0.ɵɵlistener("ngModelChange", function TenantBoxComponent_ng_container_0_ng_template_20_Template_input_ngModelChange_6_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(2); return ctx_r10.service.name = $event; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "p");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "AbpUiMultiTenancy::Name"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r5.service.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(9, 5, "AbpUiMultiTenancy::SwitchTenantHint"));
} }
function TenantBoxComponent_ng_container_0_ng_template_22_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 18);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "abp-button", 19);
    ɵngcc0.ɵɵlistener("click", function TenantBoxComponent_ng_container_0_ng_template_22_Template_abp_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(2); return ctx_r11.service.save(); });
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const currentTenant_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 3, "AbpTenantManagement::Cancel"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("disabled", (currentTenant_r1 == null ? null : currentTenant_r1.name) === ctx_r7.service.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 5, "AbpTenantManagement::Save"));
} }
function TenantBoxComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r15 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵelementStart(4, "div", 4);
    ɵngcc0.ɵɵelementStart(5, "span", 5);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "br");
    ɵngcc0.ɵɵelementStart(9, "h6", 6);
    ɵngcc0.ɵɵelementStart(10, "i");
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 7);
    ɵngcc0.ɵɵelementStart(14, "a", 8);
    ɵngcc0.ɵɵlistener("click", function TenantBoxComponent_ng_container_0_Template_a_click_14_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.service.onSwitch(); });
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "abp-modal", 9);
    ɵngcc0.ɵɵlistener("visibleChange", function TenantBoxComponent_ng_container_0_Template_abp_modal_visibleChange_17_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r16 = ɵngcc0.ɵɵnextContext(); return ctx_r16.service.isModalVisible = $event; });
    ɵngcc0.ɵɵtemplate(18, TenantBoxComponent_ng_container_0_ng_template_18_Template, 2, 0, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(20, TenantBoxComponent_ng_container_0_ng_template_20_Template, 10, 7, "ng-template", null, 11, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵtemplate(22, TenantBoxComponent_ng_container_0_ng_template_22_Template, 7, 7, "ng-template", null, 12, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const currentTenant_r1 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 5, "AbpUiMultiTenancy::Tenant"));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(currentTenant_r1.name || ɵngcc0.ɵɵpipeBind1(12, 7, "AbpUiMultiTenancy::NotSelected"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(16, 9, "AbpUiMultiTenancy::Switch"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("visible", ctx_r0.service.isModalVisible)("busy", ctx_r0.service.modalBusy);
} }
const _c5 = function () { return {}; };
function ApplicationLayoutComponent_abp_logo_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-logo");
} }
function ApplicationLayoutComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ApplicationLayoutComponent_div_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function ApplicationLayoutComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtemplate(1, ApplicationLayoutComponent_div_7_ng_container_1_Template, 1, 0, "ng-container", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    const _r3 = ɵngcc0.ɵɵreference(9);
    ɵngcc0.ɵɵproperty("@collapseWithMargin", ctx_r2.service.isCollapsed ? "collapsed" : "expanded");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r3);
} }
function ApplicationLayoutComponent_ng_template_8_abp_routes_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-routes", 11);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("smallScreen", ctx_r7.service.smallScreen);
} }
function ApplicationLayoutComponent_ng_template_8_abp_nav_items_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "abp-nav-items");
} }
function ApplicationLayoutComponent_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, ApplicationLayoutComponent_ng_template_8_abp_routes_0_Template, 1, 1, "abp-routes", 10);
    ɵngcc0.ɵɵtemplate(1, ApplicationLayoutComponent_ng_template_8_abp_nav_items_1_Template, 1, 0, "abp-nav-items", 2);
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction2(6, _c2, ctx_r4.service.routesComponentKey, ɵngcc0.ɵɵpureFunction1(4, _c1, ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r4.service.smallScreen))));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx_r4.service.navItemsComponentKey));
} }
function LogoComponent_img_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "img", 3);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("src", ctx_r0.appInfo.logoUrl, ɵngcc0.ɵɵsanitizeUrl)("alt", ctx_r0.appInfo.name);
} }
function LogoComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r2.appInfo.name, " ");
} }
function CurrentUserComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 2);
    ɵngcc0.ɵɵlistener("click", function CurrentUserComponent_ng_template_0_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.navigateToLogin(); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, "App::CustomLogin"));
} }
function CurrentUserComponent_div_2_small_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵelementStart(1, "i");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(3, "\\");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const tenantName_r7 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(tenantName_r7);
} }
function CurrentUserComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3, 4);
    ɵngcc0.ɵɵelementStart(2, "a", 5);
    ɵngcc0.ɵɵtemplate(3, CurrentUserComponent_div_2_small_3_Template, 4, 1, "small", 6);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementStart(5, "strong");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 7);
    ɵngcc0.ɵɵelementStart(9, "a", 8);
    ɵngcc0.ɵɵlistener("click", function CurrentUserComponent_div_2_Template_a_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.navigateToManageProfile(); });
    ɵngcc0.ɵɵelement(10, "i", 9);
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵpipe(12, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "a", 10);
    ɵngcc0.ɵɵlistener("click", function CurrentUserComponent_div_2_Template_a_click_13_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.logout(); });
    ɵngcc0.ɵɵelement(14, "i", 11);
    ɵngcc0.ɵɵtext(15);
    ɵngcc0.ɵɵpipe(16, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r5 = ɵngcc0.ɵɵreference(1);
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    let tmp_0_0;
    let tmp_1_0;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(4, 6, ctx_r2.selectedTenant$)) == null ? null : tmp_0_0.name);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate((tmp_1_0 = ɵngcc0.ɵɵpipeBind1(7, 8, ctx_r2.currentUser$)) == null ? null : tmp_1_0.userName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("d-block", ctx_r2.smallScreen && _r5.isOpen());
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(12, 10, "AbpAccount::MyAccount"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(16, 12, "AbpUi::Logout"));
} }
function LanguagesComponent_div_0_a_6_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "a", 6);
    ɵngcc0.ɵɵlistener("click", function LanguagesComponent_div_0_a_6_Template_a_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const lang_r3 = restoredCtx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(2); return ctx_r4.onChangeLang(lang_r3.cultureName); });
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lang_r3 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(lang_r3 == null ? null : lang_r3.displayName);
} }
function LanguagesComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1, 2);
    ɵngcc0.ɵɵelementStart(2, "a", 3);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 4);
    ɵngcc0.ɵɵtemplate(6, LanguagesComponent_div_0_a_6_Template, 2, 1, "a", 5);
    ɵngcc0.ɵɵpipe(7, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r1 = ɵngcc0.ɵɵreference(1);
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 4, ctx_r0.defaultLanguage$), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("d-block", ctx_r0.smallScreen && _r1.isOpen());
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(7, 6, ctx_r0.dropdownLanguages$));
} }
function NavItemsComponent_ng_container_1_ng_container_1_li_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} if (rf & 2) {
    const item_r1 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngComponentOutlet", item_r1.component);
} }
function NavItemsComponent_ng_container_1_ng_container_1_li_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵlistener("click", function NavItemsComponent_ng_container_1_ng_container_1_li_1_ng_template_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const item_r1 = ɵngcc0.ɵɵnextContext(3).$implicit; return item_r1.action ? item_r1.action() : null; });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r1 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("innerHTML", item_r1.html, ɵngcc0.ɵɵsanitizeHtml);
} }
function NavItemsComponent_ng_container_1_ng_container_1_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 4);
    ɵngcc0.ɵɵtemplate(1, NavItemsComponent_ng_container_1_ng_container_1_li_1_ng_container_1_Template, 1, 1, "ng-container", 5);
    ɵngcc0.ɵɵtemplate(2, NavItemsComponent_ng_container_1_ng_container_1_li_1_ng_template_2_Template, 1, 1, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r5 = ɵngcc0.ɵɵreference(3);
    const item_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r1.component)("ngIfElse", _r5);
} }
function NavItemsComponent_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, NavItemsComponent_ng_container_1_ng_container_1_li_1_Template, 4, 2, "li", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpPermission", item_r1.requiredPolicy);
} }
function NavItemsComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, NavItemsComponent_ng_container_1_ng_container_1_Template, 2, 1, "ng-container", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const item_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", item_r1.visible());
} }
const _c6 = ["childrenContainer"];
const _c7 = function (a0) { return { $implicit: a0 }; };
function RoutesComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0, 7);
} if (rf & 2) {
    const route_r11 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    const _r3 = ɵngcc0.ɵɵreference(6);
    const _r1 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", ctx_r0.isDropdown(route_r11) ? _r3 : _r1)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c7, route_r11));
} }
function RoutesComponent_ng_template_3_li_0_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 12);
} if (rf & 2) {
    const route_r12 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", route_r12.iconClass);
} }
const _c8 = function (a0) { return [a0]; };
function RoutesComponent_ng_template_3_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 9);
    ɵngcc0.ɵɵelementStart(1, "a", 10);
    ɵngcc0.ɵɵtemplate(2, RoutesComponent_ng_template_3_li_0_i_2_Template, 1, 1, "i", 11);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const route_r12 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(5, _c8, route_r12.path));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", route_r12.iconClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 3, route_r12.name), "");
} }
function RoutesComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, RoutesComponent_ng_template_3_li_0_Template, 5, 7, "li", 8);
} if (rf & 2) {
    const route_r12 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("abpPermission", route_r12.requiredPolicy);
} }
function RoutesComponent_ng_template_5_ng_container_0_li_1_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 12);
} if (rf & 2) {
    const route_r17 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", route_r17.iconClass);
} }
function RoutesComponent_ng_template_5_ng_container_0_li_1_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function RoutesComponent_ng_template_5_ng_container_0_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 15, 16);
    ɵngcc0.ɵɵlistener("click", function RoutesComponent_ng_template_5_ng_container_0_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); const _r20 = ɵngcc0.ɵɵreference(1); return _r20.expand ? _r20.expand = false : _r20.expand = true; });
    ɵngcc0.ɵɵelementStart(2, "a", 17);
    ɵngcc0.ɵɵtemplate(3, RoutesComponent_ng_template_5_ng_container_0_li_1_i_3_Template, 1, 1, "i", 11);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 18, 19);
    ɵngcc0.ɵɵlistener("click", function RoutesComponent_ng_template_5_ng_container_0_li_1_Template_div_click_6_listener($event) { $event.preventDefault(); return $event.stopPropagation(); });
    ɵngcc0.ɵɵtemplate(8, RoutesComponent_ng_template_5_ng_container_0_li_1_ng_container_8_Template, 1, 0, "ng-container", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r20 = ɵngcc0.ɵɵreference(1);
    const route_r17 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r19 = ɵngcc0.ɵɵnextContext();
    const _r5 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", route_r17.iconClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, route_r17.name), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("d-block", ctx_r19.smallScreen && _r20.expand);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(8, _c7, route_r17));
} }
function RoutesComponent_ng_template_5_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, RoutesComponent_ng_template_5_ng_container_0_li_1_Template, 9, 10, "li", 14);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const route_r17 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpPermission", route_r17.requiredPolicy);
} }
function RoutesComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, RoutesComponent_ng_template_5_ng_container_0_Template, 2, 1, "ng-container", 13);
} if (rf & 2) {
    const route_r17 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", route_r17.children == null ? null : route_r17.children.length);
} }
function RoutesComponent_ng_template_7_ng_container_0_ng_template_1_Template(rf, ctx) { }
function RoutesComponent_ng_template_7_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, RoutesComponent_ng_template_7_ng_container_0_ng_template_1_Template, 0, 0, "ng-template", 7);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const child_r32 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext(2);
    const _r9 = ɵngcc0.ɵɵreference(12);
    const _r7 = ɵngcc0.ɵɵreference(10);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", (child_r32.children == null ? null : child_r32.children.length) ? _r9 : _r7)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c7, child_r32));
} }
function RoutesComponent_ng_template_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, RoutesComponent_ng_template_7_ng_container_0_Template, 2, 4, "ng-container", 21);
} if (rf & 2) {
    const route_r30 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngForOf", route_r30.children);
} }
function RoutesComponent_ng_template_9_ng_container_0_div_1_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 12);
} if (rf & 2) {
    const child_r34 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r34.iconClass);
} }
function RoutesComponent_ng_template_9_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    const _r40 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵelementStart(1, "a", 24);
    ɵngcc0.ɵɵlistener("click", function RoutesComponent_ng_template_9_ng_container_0_div_1_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r40); const ctx_r39 = ɵngcc0.ɵɵnextContext(3); return ctx_r39.closeDropdown(); });
    ɵngcc0.ɵɵtemplate(2, RoutesComponent_ng_template_9_ng_container_0_div_1_i_2_Template, 1, 1, "i", 11);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const child_r34 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(5, _c8, child_r34.path));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r34.iconClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 3, child_r34.name), "");
} }
function RoutesComponent_ng_template_9_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, RoutesComponent_ng_template_9_ng_container_0_div_1_Template, 5, 7, "div", 22);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const child_r34 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpPermission", child_r34.requiredPolicy);
} }
function RoutesComponent_ng_template_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, RoutesComponent_ng_template_9_ng_container_0_Template, 2, 1, "ng-container", 13);
} if (rf & 2) {
    const child_r34 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", child_r34.path);
} }
function RoutesComponent_ng_template_11_div_0_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 12);
} if (rf & 2) {
    const child_r43 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngClass", child_r43.iconClass);
} }
function RoutesComponent_ng_template_11_div_0_ng_container_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
function RoutesComponent_ng_template_11_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 26, 27);
    ɵngcc0.ɵɵelementStart(2, "div", 28);
    ɵngcc0.ɵɵelementStart(3, "a", 29);
    ɵngcc0.ɵɵtemplate(4, RoutesComponent_ng_template_11_div_0_i_4_Template, 1, 1, "i", 11);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 30, 31);
    ɵngcc0.ɵɵtemplate(9, RoutesComponent_ng_template_11_div_0_ng_container_9_Template, 1, 0, "ng-container", 20);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r45 = ɵngcc0.ɵɵreference(1);
    const child_r43 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r44 = ɵngcc0.ɵɵnextContext();
    const _r5 = ɵngcc0.ɵɵreference(8);
    ɵngcc0.ɵɵproperty("autoClose", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("dropdown-toggle", false);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("abpEllipsisEnabled", !ctx_r44.smallScreen);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", child_r43.iconClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 10, child_r43.name), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵclassProp("d-block", ctx_r44.smallScreen && _r45.isOpen());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", _r5)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(12, _c7, child_r43));
} }
function RoutesComponent_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, RoutesComponent_ng_template_11_div_0_Template, 10, 14, "div", 25);
} if (rf & 2) {
    const child_r43 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("abpPermission", child_r43.requiredPolicy);
} }
function ValidationErrorComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const error_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, error_r1.message, error_r1.interpoliteParams), " ");
} }
function PageAlertContainerComponent_ng_container_0_h4_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h4", 4);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "abpLocalization");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const alert_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(2, 1, alert_r1.title, alert_r1.titleLocalizationParams), " ");
} }
function PageAlertContainerComponent_ng_container_0_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function PageAlertContainerComponent_ng_container_0_button_5_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const i_r2 = ɵngcc0.ɵɵnextContext().index; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.service.remove(i_r2); });
    ɵngcc0.ɵɵelementStart(1, "span", 6);
    ɵngcc0.ɵɵtext(2, "\u00D7");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
const _c9 = function (a0) { return { "alert-dismissible fade show": a0 }; };
function PageAlertContainerComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵtemplate(2, PageAlertContainerComponent_ng_container_0_h4_2_Template, 3, 4, "h4", 2);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "abpLocalization");
    ɵngcc0.ɵɵtemplate(5, PageAlertContainerComponent_ng_container_0_button_5_Template, 3, 0, "button", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const alert_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassMapInterpolate1("alert alert-", alert_r1.type, " fade show");
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(10, _c9, alert_r1.dismissible));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", alert_r1.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(4, 7, alert_r1.message, alert_r1.messageLocalizationParams), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", alert_r1.dismissible);
} }
class LayoutService {
    constructor(subscription, cdRef) {
        this.subscription = subscription;
        this.cdRef = cdRef;
        this.isCollapsed = true;
        this.logoComponentKey = "Theme.LogoComponent" /* Logo */;
        this.routesComponentKey = "Theme.RoutesComponent" /* Routes */;
        this.navItemsComponentKey = "Theme.NavItemsComponent" /* NavItems */;
    }
    checkWindowWidth() {
        const isSmallScreen = window.innerWidth < 992;
        if (isSmallScreen && this.smallScreen === false) {
            this.isCollapsed = false;
            setTimeout(() => {
                this.isCollapsed = true;
            }, 100);
        }
        this.smallScreen = isSmallScreen;
        this.cdRef.detectChanges();
    }
    subscribeWindowSize() {
        this.checkWindowWidth();
        const resize$ = fromEvent(window, 'resize').pipe(debounceTime(150));
        this.subscription.addOne(resize$, () => this.checkWindowWidth());
    }
}
LayoutService.ɵfac = function LayoutService_Factory(t) { return new (t || LayoutService)(ɵngcc0.ɵɵinject(ɵngcc1.SubscriptionService), ɵngcc0.ɵɵinject(ɵngcc0.ChangeDetectorRef)); };
LayoutService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LayoutService, factory: LayoutService.ɵfac });
LayoutService.ctorParameters = () => [
    { type: SubscriptionService },
    { type: ChangeDetectorRef }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LayoutService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.SubscriptionService }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();

class AccountLayoutComponent {
    constructor(service) {
        this.service = service;
        this.authWrapperKey = 'Account.AuthWrapperComponent';
    }
    ngAfterViewInit() {
        this.service.subscribeWindowSize();
    }
}
AccountLayoutComponent.ɵfac = function AccountLayoutComponent_Factory(t) { return new (t || AccountLayoutComponent)(ɵngcc0.ɵɵdirectiveInject(LayoutService)); };
AccountLayoutComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AccountLayoutComponent, selectors: [["abp-layout-account"]], features: [ɵngcc0.ɵɵProvidersFeature([LayoutService, SubscriptionService])], decls: 13, vars: 11, consts: [["id", "main-navbar", 1, "navbar", "navbar-expand-lg", "navbar-dark", "bg-dark", "shadow-sm", "flex-column", "flex-md-row", "mb-4", 2, "min-height", "4rem"], [1, "container"], [4, "abpReplaceableTemplate"], ["type", "button", 1, "navbar-toggler", 3, "click"], [1, "navbar-toggler-icon"], ["id", "main-navbar-collapse", 1, "navbar-collapse"], [4, "ngTemplateOutlet"], [4, "ngIf"], ["navigations", ""], ["class", "mx-auto", 3, "smallScreen", 4, "abpReplaceableTemplate"], [1, "mx-auto", 3, "smallScreen"], ["outlet", "outlet"]], template: function AccountLayoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, AccountLayoutComponent_abp_logo_2_Template, 1, 0, "abp-logo", 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function AccountLayoutComponent_Template_button_click_3_listener() { return ctx.service.isCollapsed = !ctx.service.isCollapsed; });
        ɵngcc0.ɵɵelement(4, "span", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵtemplate(6, AccountLayoutComponent_ng_container_6_Template, 1, 0, "ng-container", 6);
        ɵngcc0.ɵɵtemplate(7, AccountLayoutComponent_div_7_Template, 2, 2, "div", 7);
        ɵngcc0.ɵɵtemplate(8, AccountLayoutComponent_ng_template_8_Template, 2, 11, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 1);
        ɵngcc0.ɵɵelement(11, "abp-page-alert-container");
        ɵngcc0.ɵɵtemplate(12, AccountLayoutComponent_abp_auth_wrapper_12_Template, 3, 0, "abp-auth-wrapper", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r3 = ɵngcc0.ɵɵreference(9);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction1(7, _c3, ctx.service.logoComponentKey));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("aria-expanded", !ctx.service.isCollapsed);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("overflow-hidden", ctx.service.smallScreen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", !ctx.service.smallScreen ? _r3 : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.service.smallScreen);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction1(9, _c3, ctx.authWrapperKey));
    } }, directives: function () { return [ɵngcc2.NgbNavbar, ɵngcc1.ReplaceableTemplateDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgIf, PageAlertContainerComponent, LogoComponent, RoutesComponent, NavItemsComponent, AuthWrapperComponent, ɵngcc4.RouterOutlet]; }, encapsulation: 2 });
// required for dynamic component
AccountLayoutComponent.type = "account" /* account */;
AccountLayoutComponent.ctorParameters = () => [
    { type: LayoutService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AccountLayoutComponent, [{
        type: Component,
        args: [{
                selector: 'abp-layout-account',
                template: "<nav\n  class=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4\"\n  id=\"main-navbar\"\n  style=\"min-height: 4rem\"\n>\n  <div class=\"container\">\n    <abp-logo *abpReplaceableTemplate=\"{ componentKey: service.logoComponentKey }\"></abp-logo>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      [attr.aria-expanded]=\"!service.isCollapsed\"\n      (click)=\"service.isCollapsed = !service.isCollapsed\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div\n      class=\"navbar-collapse\"\n      [class.overflow-hidden]=\"service.smallScreen\"\n      id=\"main-navbar-collapse\"\n    >\n      <ng-container *ngTemplateOutlet=\"!service.smallScreen ? navigations : null\"></ng-container>\n\n      <div\n        *ngIf=\"service.smallScreen\"\n        [@collapseWithMargin]=\"service.isCollapsed ? 'collapsed' : 'expanded'\"\n      >\n        <ng-container *ngTemplateOutlet=\"navigations\"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <abp-routes\n          *abpReplaceableTemplate=\"{\n            componentKey: service.routesComponentKey,\n            inputs: {\n              smallScreen: { value: service.smallScreen }\n            }\n          }\"\n          class=\"mx-auto\"\n          [smallScreen]=\"service.smallScreen\"\n        ></abp-routes>\n\n        <abp-nav-items\n          *abpReplaceableTemplate=\"{\n            componentKey: service.navItemsComponentKey\n          }\"\n        ></abp-nav-items>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n<!-- [@slideFromBottom]=\"outlet.isActivated && outlet.activatedRoute?.routeConfig?.path\" TODO: throws ExpressionChangedAfterItHasBeenCheck when animation is active. It should be fixed -->\n<div class=\"container\">\n  <abp-page-alert-container></abp-page-alert-container>\n  <abp-auth-wrapper\n    *abpReplaceableTemplate=\"{\n      componentKey: authWrapperKey\n    }\"\n  >\n    <router-outlet #outlet=\"outlet\"></router-outlet>\n  </abp-auth-wrapper>\n</div>\n",
                providers: [LayoutService, SubscriptionService]
            }]
    }], function () { return [{ type: LayoutService }]; }, null); })();

class AuthWrapperComponent {
    constructor(service) {
        this.service = service;
    }
    ngOnInit() { }
}
AuthWrapperComponent.ɵfac = function AuthWrapperComponent_Factory(t) { return new (t || AuthWrapperComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.AuthWrapperService)); };
AuthWrapperComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AuthWrapperComponent, selectors: [["abp-auth-wrapper"]], features: [ɵngcc0.ɵɵProvidersFeature([AuthWrapperService])], ngContentSelectors: _c4, decls: 9, vars: 7, consts: [[1, "row"], [1, "mx-auto", "col", "col-md-5"], [4, "ngIf"], [1, "abp-account-container"], ["class", "card mt-3 shadow-sm rounded", 4, "ngIf", "ngIfElse"], ["disableLocalLoginTemplate", ""], [4, "abpReplaceableTemplate"], [1, "card", "mt-3", "shadow-sm", "rounded"], [1, "card-body", "p-5"], [1, "alert", "alert-warning"]], template: function AuthWrapperComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, AuthWrapperComponent_ng_container_2_Template, 2, 3, "ng-container", 2);
        ɵngcc0.ɵɵpipe(3, "async");
        ɵngcc0.ɵɵelementStart(4, "div", 3);
        ɵngcc0.ɵɵtemplate(5, AuthWrapperComponent_div_5_Template, 3, 0, "div", 4);
        ɵngcc0.ɵɵpipe(6, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(7, AuthWrapperComponent_ng_template_7_Template, 6, 6, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r2 = ɵngcc0.ɵɵreference(8);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 3, ctx.service.isMultiTenancyEnabled$) && ctx.service.isTenantBoxVisible);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(6, 5, ctx.service.enableLocalLogin$))("ngIfElse", _r2);
    } }, directives: function () { return [ɵngcc3.NgIf, ɵngcc1.ReplaceableTemplateDirective, TenantBoxComponent]; }, pipes: function () { return [ɵngcc3.AsyncPipe, ɵngcc1.LocalizationPipe]; }, encapsulation: 2 });
AuthWrapperComponent.ctorParameters = () => [
    { type: AuthWrapperService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuthWrapperComponent, [{
        type: Component,
        args: [{
                selector: 'abp-auth-wrapper',
                template: "<div class=\"row\">\n  <div class=\"mx-auto col col-md-5\">\n    <ng-container *ngIf=\"(service.isMultiTenancyEnabled$ | async) && service.isTenantBoxVisible\">\n      <abp-tenant-box\n        *abpReplaceableTemplate=\"{ componentKey: service.tenantBoxKey }\"\n      ></abp-tenant-box>\n    </ng-container>\n\n    <div class=\"abp-account-container\">\n      <div\n        *ngIf=\"service.enableLocalLogin$ | async; else disableLocalLoginTemplate\"\n        class=\"card mt-3 shadow-sm rounded\"\n      >\n        <div class=\"card-body p-5\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #disableLocalLoginTemplate>\n  <div class=\"alert alert-warning\">\n    <strong>{{ 'AbpAccount::InvalidLoginRequest' | abpLocalization }}</strong>\n    {{ 'AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient' | abpLocalization }}\n  </div>\n</ng-template>\n",
                providers: [AuthWrapperService]
            }]
    }], function () { return [{ type: ɵngcc5.AuthWrapperService }]; }, null); })();

class TenantBoxComponent {
    constructor(service) {
        this.service = service;
    }
    ngOnInit() { }
}
TenantBoxComponent.ɵfac = function TenantBoxComponent_Factory(t) { return new (t || TenantBoxComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.TenantBoxService)); };
TenantBoxComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TenantBoxComponent, selectors: [["abp-tenant-box"]], features: [ɵngcc0.ɵɵProvidersFeature([TenantBoxService])], decls: 2, vars: 4, consts: [[4, "ngIf"], [1, "card", "shadow-sm", "rounded", "mb-3"], [1, "card-body", "px-5"], [1, "row"], [1, "col"], [1, "text-uppercase", "text-muted", 2, "font-size", "0.8em"], [1, "m-0", "d-inline-block"], [1, "col-auto"], ["id", "AbpTenantSwitchLink", "href", "javascript:void(0);", 1, "btn", "btn-sm", "mt-3", "btn-outline-primary", 3, "click"], ["size", "md", 3, "visible", "busy", "visibleChange"], ["abpHeader", ""], ["abpBody", ""], ["abpFooter", ""], [3, "ngSubmit"], [1, "mt-2"], [1, "form-group"], ["for", "name"], ["type", "text", "id", "name", "name", "tenant", "autofocus", "", 1, "form-control", 3, "ngModel", "ngModelChange"], ["abpClose", "", "type", "button", 1, "btn", "btn-secondary"], ["type", "abp-button", "iconClass", "fa fa-check", 3, "disabled", "click"]], template: function TenantBoxComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, TenantBoxComponent_ng_container_0_Template, 24, 11, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.service.currentTenant$) || ɵngcc0.ɵɵpureFunction0(3, _c5));
    } }, directives: [ɵngcc3.NgIf, ɵngcc6.ModalComponent, ɵngcc7.ɵNgNoValidate, ɵngcc7.NgControlStatusGroup, ɵngcc7.NgForm, ɵngcc7.DefaultValueAccessor, ɵngcc1.AutofocusDirective, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc6.ModalCloseDirective, ɵngcc6.ButtonComponent], pipes: [ɵngcc3.AsyncPipe, ɵngcc1.LocalizationPipe], encapsulation: 2 });
TenantBoxComponent.ctorParameters = () => [
    { type: TenantBoxService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TenantBoxComponent, [{
        type: Component,
        args: [{
                selector: 'abp-tenant-box',
                template: "<ng-container *ngIf=\"(service.currentTenant$ | async) || {} as currentTenant\">\n  <div class=\"card shadow-sm rounded mb-3\">\n    <div class=\"card-body px-5\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <span style=\"font-size: 0.8em\" class=\"text-uppercase text-muted\">{{\n            'AbpUiMultiTenancy::Tenant' | abpLocalization\n          }}</span\n          ><br />\n          <h6 class=\"m-0 d-inline-block\">\n            <i>{{ currentTenant.name || ('AbpUiMultiTenancy::NotSelected' | abpLocalization) }}</i>\n          </h6>\n        </div>\n        <div class=\"col-auto\">\n          <a\n            id=\"AbpTenantSwitchLink\"\n            href=\"javascript:void(0);\"\n            class=\"btn btn-sm mt-3 btn-outline-primary\"\n            (click)=\"service.onSwitch()\"\n            >{{ 'AbpUiMultiTenancy::Switch' | abpLocalization }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <abp-modal size=\"md\" [(visible)]=\"service.isModalVisible\" [busy]=\"service.modalBusy\">\n    <ng-template #abpHeader>\n      <h5>Switch Tenant</h5>\n    </ng-template>\n    <ng-template #abpBody>\n      <form (ngSubmit)=\"service.save()\">\n        <div class=\"mt-2\">\n          <div class=\"form-group\">\n            <label for=\"name\">{{ 'AbpUiMultiTenancy::Name' | abpLocalization }}</label>\n            <input\n              [(ngModel)]=\"service.name\"\n              type=\"text\"\n              id=\"name\"\n              name=\"tenant\"\n              class=\"form-control\"\n              autofocus\n            />\n          </div>\n          <p>{{ 'AbpUiMultiTenancy::SwitchTenantHint' | abpLocalization }}</p>\n        </div>\n      </form>\n    </ng-template>\n    <ng-template #abpFooter>\n      <button abpClose type=\"button\" class=\"btn btn-secondary\">\n        {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\n      </button>\n      <abp-button\n        type=\"abp-button\"\n        iconClass=\"fa fa-check\"\n        (click)=\"service.save()\"\n        [disabled]=\"currentTenant?.name === service.name\"\n      >\n        <span>{{ 'AbpTenantManagement::Save' | abpLocalization }}</span>\n      </abp-button>\n    </ng-template>\n  </abp-modal>\n</ng-container>\n",
                providers: [TenantBoxService]
            }]
    }], function () { return [{ type: ɵngcc5.TenantBoxService }]; }, null); })();

class ApplicationLayoutComponent {
    constructor(service) {
        this.service = service;
    }
    ngAfterViewInit() {
        this.service.subscribeWindowSize();
    }
}
ApplicationLayoutComponent.ɵfac = function ApplicationLayoutComponent_Factory(t) { return new (t || ApplicationLayoutComponent)(ɵngcc0.ɵɵdirectiveInject(LayoutService)); };
ApplicationLayoutComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ApplicationLayoutComponent, selectors: [["abp-layout-application"]], features: [ɵngcc0.ɵɵProvidersFeature([LayoutService, SubscriptionService])], decls: 14, vars: 8, consts: [["id", "main-navbar", 1, "navbar", "navbar-expand-lg", "navbar-dark", "bg-dark", "shadow-sm", "flex-column", "flex-md-row", "mb-4", 2, "min-height", "4rem"], [1, "container"], [4, "abpReplaceableTemplate"], ["type", "button", 1, "navbar-toggler", 3, "click"], [1, "navbar-toggler-icon"], ["id", "main-navbar-collapse", 1, "navbar-collapse"], [4, "ngTemplateOutlet"], [4, "ngIf"], ["navigations", ""], ["outlet", "outlet"], ["class", "mx-auto", 3, "smallScreen", 4, "abpReplaceableTemplate"], [1, "mx-auto", 3, "smallScreen"]], template: function ApplicationLayoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "nav", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, ApplicationLayoutComponent_abp_logo_2_Template, 1, 0, "abp-logo", 2);
        ɵngcc0.ɵɵelementStart(3, "button", 3);
        ɵngcc0.ɵɵlistener("click", function ApplicationLayoutComponent_Template_button_click_3_listener() { return ctx.service.isCollapsed = !ctx.service.isCollapsed; });
        ɵngcc0.ɵɵelement(4, "span", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵtemplate(6, ApplicationLayoutComponent_ng_container_6_Template, 1, 0, "ng-container", 6);
        ɵngcc0.ɵɵtemplate(7, ApplicationLayoutComponent_div_7_Template, 2, 2, "div", 7);
        ɵngcc0.ɵɵtemplate(8, ApplicationLayoutComponent_ng_template_8_Template, 2, 11, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 1);
        ɵngcc0.ɵɵelement(11, "abp-page-alert-container");
        ɵngcc0.ɵɵelement(12, "router-outlet", null, 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r3 = ɵngcc0.ɵɵreference(9);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("abpReplaceableTemplate", ɵngcc0.ɵɵpureFunction1(6, _c3, ctx.service.logoComponentKey));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵattribute("aria-expanded", !ctx.service.isCollapsed);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵclassProp("overflow-hidden", ctx.service.smallScreen);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngTemplateOutlet", !ctx.service.smallScreen ? _r3 : null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.service.smallScreen);
    } }, directives: function () { return [ɵngcc2.NgbNavbar, ɵngcc1.ReplaceableTemplateDirective, ɵngcc3.NgTemplateOutlet, ɵngcc3.NgIf, PageAlertContainerComponent, ɵngcc4.RouterOutlet, LogoComponent, RoutesComponent, NavItemsComponent]; }, encapsulation: 2, data: { animation: [slideFromBottom, collapseWithMargin] } });
// required for dynamic component
ApplicationLayoutComponent.type = "application" /* application */;
ApplicationLayoutComponent.ctorParameters = () => [
    { type: LayoutService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ApplicationLayoutComponent, [{
        type: Component,
        args: [{
                selector: 'abp-layout-application',
                template: "<nav\n  class=\"navbar navbar-expand-lg navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4\"\n  id=\"main-navbar\"\n  style=\"min-height: 4rem\"\n>\n  <div class=\"container\">\n    <abp-logo *abpReplaceableTemplate=\"{ componentKey: service.logoComponentKey }\"></abp-logo>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      [attr.aria-expanded]=\"!service.isCollapsed\"\n      (click)=\"service.isCollapsed = !service.isCollapsed\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"navbar-collapse\" [class.overflow-hidden]=\"service.smallScreen\" id=\"main-navbar-collapse\">\n      <ng-container *ngTemplateOutlet=\"!service.smallScreen ? navigations : null\"></ng-container>\n\n      <div *ngIf=\"service.smallScreen\" [@collapseWithMargin]=\"service.isCollapsed ? 'collapsed' : 'expanded'\">\n        <ng-container *ngTemplateOutlet=\"navigations\"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <abp-routes\n          *abpReplaceableTemplate=\"{\n            componentKey: service.routesComponentKey,\n            inputs: {\n              smallScreen: { value: service.smallScreen }\n            }\n          }\"\n          class=\"mx-auto\"\n          [smallScreen]=\"service.smallScreen\"\n        ></abp-routes>\n\n        <abp-nav-items\n          *abpReplaceableTemplate=\"{\n            componentKey: service.navItemsComponentKey\n          }\"\n        ></abp-nav-items>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n<!-- [@slideFromBottom]=\"outlet.isActivated && outlet.activatedRoute?.routeConfig?.path\" TODO: throws ExpressionChangedAfterItHasBeenCheck when animation is active. It should be fixed -->\n<div class=\"container\">\n  <abp-page-alert-container></abp-page-alert-container>\n\n  <router-outlet #outlet=\"outlet\"></router-outlet>\n</div>\n",
                animations: [slideFromBottom, collapseWithMargin],
                providers: [LayoutService, SubscriptionService]
            }]
    }], function () { return [{ type: LayoutService }]; }, null); })();

class EmptyLayoutComponent {
}
EmptyLayoutComponent.ɵfac = function EmptyLayoutComponent_Factory(t) { return new (t || EmptyLayoutComponent)(); };
EmptyLayoutComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: EmptyLayoutComponent, selectors: [["abp-layout-empty"]], decls: 2, vars: 0, template: function EmptyLayoutComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "router-outlet");
        ɵngcc0.ɵɵelement(1, "abp-confirmation");
    } }, directives: [ɵngcc4.RouterOutlet, ɵngcc6.ConfirmationComponent], encapsulation: 2 });
EmptyLayoutComponent.type = "empty" /* empty */;
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EmptyLayoutComponent, [{
        type: Component,
        args: [{
                selector: 'abp-layout-empty',
                template: `
    <router-outlet></router-outlet>
    <abp-confirmation></abp-confirmation>
  `
            }]
    }], null, null); })();

class LogoComponent {
    constructor(environment) {
        this.environment = environment;
    }
    get appInfo() {
        return this.environment.getEnvironment().application;
    }
}
LogoComponent.ɵfac = function LogoComponent_Factory(t) { return new (t || LogoComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.EnvironmentService)); };
LogoComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LogoComponent, selectors: [["abp-logo"]], decls: 4, vars: 2, consts: [["routerLink", "/", 1, "navbar-brand"], ["width", "100%", "height", "auto", 3, "src", "alt", 4, "ngIf", "ngIfElse"], ["appName", ""], ["width", "100%", "height", "auto", 3, "src", "alt"]], template: function LogoComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtemplate(1, LogoComponent_img_1_Template, 1, 2, "img", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, LogoComponent_ng_template_2_Template, 1, 1, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.appInfo.logoUrl)("ngIfElse", _r1);
    } }, directives: [ɵngcc4.RouterLinkWithHref, ɵngcc3.NgIf], encapsulation: 2 });
LogoComponent.ctorParameters = () => [
    { type: EnvironmentService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LogoComponent, [{
        type: Component,
        args: [{
                selector: 'abp-logo',
                template: `
    <a class="navbar-brand" routerLink="/">
      <img
        *ngIf="appInfo.logoUrl; else appName"
        [src]="appInfo.logoUrl"
        [alt]="appInfo.name"
        width="100%"
        height="auto"
      />
    </a>

    <ng-template #appName>
      {{ appInfo.name }}
    </ng-template>
  `
            }]
    }], function () { return [{ type: ɵngcc1.EnvironmentService }]; }, null); })();

class CurrentUserComponent {
    constructor(navigateToManageProfile, authService, configState, sessionState) {
        this.navigateToManageProfile = navigateToManageProfile;
        this.authService = authService;
        this.configState = configState;
        this.sessionState = sessionState;
        this.currentUser$ = this.configState.getOne$('currentUser');
        this.selectedTenant$ = this.sessionState.getTenant$();
    }
    get smallScreen() {
        return window.innerWidth < 992;
    }
    navigateToLogin() {
        this.authService.navigateToLogin();
    }
    logout() {
        this.authService.logout().subscribe();
    }
}
CurrentUserComponent.ɵfac = function CurrentUserComponent_Factory(t) { return new (t || CurrentUserComponent)(ɵngcc0.ɵɵdirectiveInject(NAVIGATE_TO_MANAGE_PROFILE), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AuthService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SessionStateService)); };
CurrentUserComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CurrentUserComponent, selectors: [["abp-current-user"]], decls: 4, vars: 4, consts: [["loginBtn", ""], ["ngbDropdown", "", "class", "dropdown", "display", "static", 4, "ngIf", "ngIfElse"], ["role", "button", 1, "nav-link", "pointer", 3, "click"], ["ngbDropdown", "", "display", "static", 1, "dropdown"], ["currentUserDropdown", "ngbDropdown"], ["ngbDropdownToggle", "", "href", "javascript:void(0)", "role", "button", "id", "dropdownMenuLink", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link"], [4, "ngIf"], ["aria-labelledby", "dropdownMenuLink", 1, "dropdown-menu", "dropdown-menu-right", "border-0", "shadow-sm"], [1, "dropdown-item", "pointer", 3, "click"], [1, "fa", "fa-cog", "mr-1"], ["href", "javascript:void(0)", 1, "dropdown-item", 3, "click"], [1, "fa", "fa-power-off", "mr-1"]], template: function CurrentUserComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, CurrentUserComponent_ng_template_0_Template, 3, 3, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(2, CurrentUserComponent_div_2_Template, 17, 14, "div", 1);
        ɵngcc0.ɵɵpipe(3, "async");
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        let tmp_0_0;
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(3, 2, ctx.currentUser$)) == null ? null : tmp_0_0.isAuthenticated)("ngIfElse", _r0);
    } }, directives: [ɵngcc3.NgIf, ɵngcc2.NgbDropdown, ɵngcc2.NgbDropdownToggle], pipes: [ɵngcc3.AsyncPipe, ɵngcc1.LocalizationPipe], encapsulation: 2 });
CurrentUserComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [NAVIGATE_TO_MANAGE_PROFILE,] }] },
    { type: AuthService },
    { type: ConfigStateService },
    { type: SessionStateService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CurrentUserComponent, [{
        type: Component,
        args: [{
                selector: 'abp-current-user',
                template: "<ng-template #loginBtn>\n  <a role=\"button\" class=\"nav-link pointer\" (click)=\"navigateToLogin()\">{{\n    'AbpAccount::Login' | abpLocalization\n  }}</a>\n</ng-template>\n<div\n  *ngIf=\"(currentUser$ | async)?.isAuthenticated; else loginBtn\"\n  ngbDropdown\n  class=\"dropdown\"\n  #currentUserDropdown=\"ngbDropdown\"\n  display=\"static\"\n>\n  <a\n    ngbDropdownToggle\n    class=\"nav-link\"\n    href=\"javascript:void(0)\"\n    role=\"button\"\n    id=\"dropdownMenuLink\"\n    data-toggle=\"dropdown\"\n    aria-haspopup=\"true\"\n    aria-expanded=\"false\"\n  >\n    <small *ngIf=\"(selectedTenant$ | async)?.name as tenantName\"\n      ><i>{{ tenantName }}</i\n      >\\</small\n    >\n    <strong>{{ (currentUser$ | async)?.userName }}</strong>\n  </a>\n  <div\n    class=\"dropdown-menu dropdown-menu-right border-0 shadow-sm\"\n    aria-labelledby=\"dropdownMenuLink\"\n    [class.d-block]=\"smallScreen && currentUserDropdown.isOpen()\"\n  >\n    <a class=\"dropdown-item pointer\" (click)=\"navigateToManageProfile()\"\n      ><i class=\"fa fa-cog mr-1\"></i>{{ 'AbpAccount::MyAccount' | abpLocalization }}</a\n    >\n    <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"logout()\"\n      ><i class=\"fa fa-power-off mr-1\"></i>{{ 'AbpUi::Logout' | abpLocalization }}</a\n    >\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [NAVIGATE_TO_MANAGE_PROFILE]
            }] }, { type: ɵngcc1.AuthService }, { type: ɵngcc1.ConfigStateService }, { type: ɵngcc1.SessionStateService }]; }, null); })();

class LanguagesComponent {
    constructor(sessionState, configState) {
        this.sessionState = sessionState;
        this.configState = configState;
        this.languages$ = this.configState.getDeep$('localization.languages');
    }
    get smallScreen() {
        return window.innerWidth < 992;
    }
    get defaultLanguage$() {
        return this.languages$.pipe(map(languages => snq(() => languages.find(lang => lang.cultureName === this.selectedLangCulture).displayName), ''));
    }
    get dropdownLanguages$() {
        return this.languages$.pipe(map(languages => snq(() => languages.filter(lang => lang.cultureName !== this.selectedLangCulture)), []));
    }
    get selectedLangCulture() {
        return this.sessionState.getLanguage();
    }
    onChangeLang(cultureName) {
        this.sessionState.setLanguage(cultureName);
    }
}
LanguagesComponent.ɵfac = function LanguagesComponent_Factory(t) { return new (t || LanguagesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SessionStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ConfigStateService)); };
LanguagesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LanguagesComponent, selectors: [["abp-languages"]], decls: 2, vars: 3, consts: [["class", "dropdown", "ngbDropdown", "", "display", "static", 4, "ngIf"], ["ngbDropdown", "", "display", "static", 1, "dropdown"], ["languageDropdown", "ngbDropdown"], ["ngbDropdownToggle", "", "href", "javascript:void(0)", "role", "button", "id", "dropdownMenuLink", "data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", 1, "nav-link"], ["aria-labelledby", "dropdownMenuLink", 1, "dropdown-menu", "dropdown-menu-right", "border-0", "shadow-sm"], ["href", "javascript:void(0)", "class", "dropdown-item", 3, "click", 4, "ngFor", "ngForOf"], ["href", "javascript:void(0)", 1, "dropdown-item", 3, "click"]], template: function LanguagesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LanguagesComponent_div_0_Template, 8, 8, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        let tmp_0_0;
        ɵngcc0.ɵɵproperty("ngIf", ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 1, ctx.dropdownLanguages$)) == null ? null : tmp_0_0.length) > 0);
    } }, directives: [ɵngcc3.NgIf, ɵngcc2.NgbDropdown, ɵngcc2.NgbDropdownToggle, ɵngcc3.NgForOf], pipes: [ɵngcc3.AsyncPipe], encapsulation: 2 });
LanguagesComponent.ctorParameters = () => [
    { type: SessionStateService },
    { type: ConfigStateService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LanguagesComponent, [{
        type: Component,
        args: [{
                selector: 'abp-languages',
                // tslint:disable-next-line: component-max-inline-declarations
                template: `
    <div
      *ngIf="(dropdownLanguages$ | async)?.length > 0"
      class="dropdown"
      ngbDropdown
      #languageDropdown="ngbDropdown"
      display="static"
    >
      <a
        ngbDropdownToggle
        class="nav-link"
        href="javascript:void(0)"
        role="button"
        id="dropdownMenuLink"
        data-toggle="dropdown"
        aria-haspopup="true"
        aria-expanded="false"
      >
        {{ defaultLanguage$ | async }}
      </a>
      <div
        class="dropdown-menu dropdown-menu-right border-0 shadow-sm"
        aria-labelledby="dropdownMenuLink"
        [class.d-block]="smallScreen && languageDropdown.isOpen()"
      >
        <a
          *ngFor="let lang of dropdownLanguages$ | async"
          href="javascript:void(0)"
          class="dropdown-item"
          (click)="onChangeLang(lang.cultureName)"
          >{{ lang?.displayName }}</a
        >
      </div>
    </div>
  `
            }]
    }], function () { return [{ type: ɵngcc1.SessionStateService }, { type: ɵngcc1.ConfigStateService }]; }, null); })();

class NavItemsComponent {
    constructor(navItems) {
        this.navItems = navItems;
        this.trackByFn = (_, element) => element.id;
    }
}
NavItemsComponent.ɵfac = function NavItemsComponent_Factory(t) { return new (t || NavItemsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.NavItemsService)); };
NavItemsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NavItemsComponent, selectors: [["abp-nav-items"]], decls: 3, vars: 4, consts: [[1, "navbar-nav"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [4, "ngIf"], ["class", "nav-item d-flex align-items-center", 4, "abpPermission"], [1, "nav-item", "d-flex", "align-items-center"], [3, "ngComponentOutlet", 4, "ngIf", "ngIfElse"], ["htmlTemplate", ""], [3, "ngComponentOutlet"], [3, "innerHTML", "click"]], template: function NavItemsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, NavItemsComponent_ng_container_1_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 2, ctx.navItems.items$))("ngForTrackBy", ctx.trackByFn);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc1.PermissionDirective, ɵngcc3.NgComponentOutlet], pipes: [ɵngcc3.AsyncPipe], encapsulation: 2 });
NavItemsComponent.ctorParameters = () => [
    { type: NavItemsService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NavItemsComponent, [{
        type: Component,
        args: [{
                selector: 'abp-nav-items',
                template: "<ul class=\"navbar-nav\">\n  <ng-container *ngFor=\"let item of navItems.items$ | async; trackBy: trackByFn\">\n    <ng-container *ngIf=\"item.visible()\">\n      <li class=\"nav-item d-flex align-items-center\" *abpPermission=\"item.requiredPolicy\">\n        <ng-container\n          *ngIf=\"item.component; else htmlTemplate\"\n          [ngComponentOutlet]=\"item.component\"\n        ></ng-container>\n\n        <ng-template #htmlTemplate>\n          <div [innerHTML]=\"item.html\" (click)=\"item.action ? item.action() : null\"></div>\n        </ng-template>\n      </li>\n    </ng-container>\n  </ng-container>\n</ul>\n"
            }]
    }], function () { return [{ type: ɵngcc6.NavItemsService }]; }, null); })();

class RoutesComponent {
    constructor(routesService, renderer) {
        this.routesService = routesService;
        this.renderer = renderer;
        this.trackByFn = (_, item) => item.name;
    }
    isDropdown(node) {
        return !(node === null || node === void 0 ? void 0 : node.isLeaf) || this.routesService.hasChildren(node.name);
    }
    closeDropdown() {
        this.childrenContainers.forEach(({ nativeElement }) => {
            this.renderer.addClass(nativeElement, 'd-none');
            setTimeout(() => this.renderer.removeClass(nativeElement, 'd-none'), 0);
        });
    }
}
RoutesComponent.ɵfac = function RoutesComponent_Factory(t) { return new (t || RoutesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RoutesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
RoutesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RoutesComponent, selectors: [["abp-routes"]], viewQuery: function RoutesComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c6, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.childrenContainers = _t);
    } }, inputs: { smallScreen: "smallScreen" }, decls: 13, vars: 4, consts: [[1, "navbar-nav"], [3, "ngTemplateOutlet", "ngTemplateOutletContext", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["defaultLink", ""], ["dropdownLink", ""], ["forTemplate", ""], ["defaultChild", ""], ["dropdownChild", ""], [3, "ngTemplateOutlet", "ngTemplateOutletContext"], ["class", "nav-item", 4, "abpPermission"], [1, "nav-item"], [1, "nav-link", 3, "routerLink"], [3, "ngClass", 4, "ngIf"], [3, "ngClass"], [4, "ngIf"], ["class", "nav-item dropdown", "display", "static", 3, "click", 4, "abpPermission"], ["display", "static", 1, "nav-item", "dropdown", 3, "click"], ["navbarRootDropdown", ""], ["data-toggle", "dropdown", "aria-haspopup", "true", "aria-expanded", "false", "href", "javascript:void(0)", 1, "nav-link", "dropdown-toggle"], [1, "dropdown-menu", "border-0", "shadow-sm", 3, "click"], ["routeContainer", ""], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], [4, "ngFor", "ngForOf"], ["class", "dropdown-submenu", 4, "abpPermission"], [1, "dropdown-submenu"], [1, "dropdown-item", 3, "routerLink", "click"], ["class", "dropdown-submenu", "ngbDropdown", "", "placement", "right-top", 3, "autoClose", 4, "abpPermission"], ["ngbDropdown", "", "placement", "right-top", 1, "dropdown-submenu", 3, "autoClose"], ["dropdownSubmenu", "ngbDropdown"], ["ngbDropdownToggle", ""], ["abpEllipsis", "210px", "role", "button", 1, "btn", "d-block", "text-left", "dropdown-toggle", 3, "abpEllipsisEnabled"], [1, "dropdown-menu", "border-0", "shadow-sm"], ["childrenContainer", ""]], template: function RoutesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "ul", 0);
        ɵngcc0.ɵɵtemplate(1, RoutesComponent_ng_container_1_Template, 1, 4, "ng-container", 1);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵtemplate(3, RoutesComponent_ng_template_3_Template, 1, 1, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, RoutesComponent_ng_template_5_Template, 1, 1, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(7, RoutesComponent_ng_template_7_Template, 1, 1, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(9, RoutesComponent_ng_template_9_Template, 1, 1, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(11, RoutesComponent_ng_template_11_Template, 1, 1, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(2, 2, ctx.routesService.visible$))("ngForTrackBy", ctx.trackByFn);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc3.NgTemplateOutlet, ɵngcc1.PermissionDirective, ɵngcc4.RouterLinkWithHref, ɵngcc3.NgIf, ɵngcc3.NgClass, ɵngcc2.NgbDropdown, ɵngcc2.NgbDropdownToggle, ɵngcc6.EllipsisDirective], pipes: [ɵngcc3.AsyncPipe, ɵngcc1.LocalizationPipe], encapsulation: 2 });
RoutesComponent.ctorParameters = () => [
    { type: RoutesService },
    { type: Renderer2 }
];
RoutesComponent.propDecorators = {
    smallScreen: [{ type: Input }],
    childrenContainers: [{ type: ViewChildren, args: ['childrenContainer',] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RoutesComponent, [{
        type: Component,
        args: [{
                selector: 'abp-routes',
                template: "<ul class=\"navbar-nav\">\n  <ng-container\n    *ngFor=\"let route of routesService.visible$ | async; trackBy: trackByFn\"\n    [ngTemplateOutlet]=\"isDropdown(route) ? dropdownLink : defaultLink\"\n    [ngTemplateOutletContext]=\"{ $implicit: route }\"\n  >\n  </ng-container>\n\n  <ng-template #defaultLink let-route>\n    <li class=\"nav-item\" *abpPermission=\"route.requiredPolicy\">\n      <a class=\"nav-link\" [routerLink]=\"[route.path]\"\n        ><i *ngIf=\"route.iconClass\" [ngClass]=\"route.iconClass\"></i>\n        {{ route.name | abpLocalization }}</a\n      >\n    </li>\n  </ng-template>\n\n  <ng-template #dropdownLink let-route>\n    <ng-container *ngIf=\"route.children?.length\">\n      <li\n        #navbarRootDropdown\n        class=\"nav-item dropdown\"\n        display=\"static\"\n        *abpPermission=\"route.requiredPolicy\"\n        (click)=\"\n          navbarRootDropdown.expand\n            ? (navbarRootDropdown.expand = false)\n            : (navbarRootDropdown.expand = true)\n        \"\n      >\n        <a\n          class=\"nav-link dropdown-toggle\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n          href=\"javascript:void(0)\"\n        >\n          <i *ngIf=\"route.iconClass\" [ngClass]=\"route.iconClass\"></i>\n          {{ route.name | abpLocalization }}\n        </a>\n        <div\n          #routeContainer\n          class=\"dropdown-menu border-0 shadow-sm\"\n          (click)=\"$event.preventDefault(); $event.stopPropagation()\"\n          [class.d-block]=\"smallScreen && navbarRootDropdown.expand\"\n        >\n          <ng-container\n            *ngTemplateOutlet=\"forTemplate; context: { $implicit: route }\"\n          ></ng-container>\n        </div>\n      </li>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #forTemplate let-route>\n    <ng-container *ngFor=\"let child of route.children\">\n      <ng-template\n        [ngTemplateOutlet]=\"child.children?.length ? dropdownChild : defaultChild\"\n        [ngTemplateOutletContext]=\"{ $implicit: child }\"\n      ></ng-template>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #defaultChild let-child>\n    <ng-container *ngIf=\"child.path\">\n      <div class=\"dropdown-submenu\" *abpPermission=\"child.requiredPolicy\">\n        <a class=\"dropdown-item\" [routerLink]=\"[child.path]\" (click)=\"closeDropdown()\">\n          <i *ngIf=\"child.iconClass\" [ngClass]=\"child.iconClass\"></i>\n          {{ child.name | abpLocalization }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #dropdownChild let-child>\n    <div\n      class=\"dropdown-submenu\"\n      ngbDropdown\n      #dropdownSubmenu=\"ngbDropdown\"\n      placement=\"right-top\"\n      [autoClose]=\"true\"\n      *abpPermission=\"child.requiredPolicy\"\n    >\n      <div ngbDropdownToggle [class.dropdown-toggle]=\"false\">\n        <a\n          abpEllipsis=\"210px\"\n          [abpEllipsisEnabled]=\"!smallScreen\"\n          role=\"button\"\n          class=\"btn d-block text-left dropdown-toggle\"\n        >\n          <i *ngIf=\"child.iconClass\" [ngClass]=\"child.iconClass\"></i>\n          {{ child.name | abpLocalization }}\n        </a>\n      </div>\n      <div\n        #childrenContainer\n        class=\"dropdown-menu border-0 shadow-sm\"\n        [class.d-block]=\"smallScreen && dropdownSubmenu.isOpen()\"\n      >\n        <ng-container *ngTemplateOutlet=\"forTemplate; context: { $implicit: child }\"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</ul>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RoutesService }, { type: ɵngcc0.Renderer2 }]; }, { smallScreen: [{
            type: Input
        }], childrenContainers: [{
            type: ViewChildren,
            args: ['childrenContainer']
        }] }); })();

class ValidationErrorComponent extends ValidationErrorComponent$1 {
    get abpErrors() {
        if (!this.errors || !this.errors.length)
            return [];
        return this.errors.map(error => {
            if (!error.message)
                return error;
            const index = error.message.indexOf('[');
            if (index > -1) {
                return Object.assign(Object.assign({}, error), { message: error.message.slice(0, index), interpoliteParams: error.message.slice(index + 1, error.message.length - 1).split(',') });
            }
            return error;
        });
    }
}
ValidationErrorComponent.ɵfac = /*@__PURE__*/ function () { let ɵValidationErrorComponent_BaseFactory; return function ValidationErrorComponent_Factory(t) { return (ɵValidationErrorComponent_BaseFactory || (ɵValidationErrorComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(ValidationErrorComponent)))(t || ValidationErrorComponent); }; }();
ValidationErrorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ValidationErrorComponent, selectors: [["abp-validation-error"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 2, consts: [["class", "invalid-feedback", 4, "ngFor", "ngForOf", "ngForTrackBy"], [1, "invalid-feedback"]], template: function ValidationErrorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, ValidationErrorComponent_div_0_Template, 3, 4, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.abpErrors)("ngForTrackBy", ctx.trackByFn);
    } }, directives: [ɵngcc3.NgForOf], pipes: [ɵngcc1.LocalizationPipe], encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ValidationErrorComponent, [{
        type: Component,
        args: [{
                selector: 'abp-validation-error',
                template: `
    <div class="invalid-feedback" *ngFor="let error of abpErrors; trackBy: trackByFn">
      {{ error.message | abpLocalization: error.interpoliteParams }}
    </div>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None
            }]
    }], null, null); })();

class PageAlertContainerComponent {
    constructor(service) {
        this.service = service;
    }
}
PageAlertContainerComponent.ɵfac = function PageAlertContainerComponent_Factory(t) { return new (t || PageAlertContainerComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.PageAlertService)); };
PageAlertContainerComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PageAlertContainerComponent, selectors: [["abp-page-alert-container"]], decls: 2, vars: 3, consts: [[4, "ngFor", "ngForOf"], ["role", "alert", 3, "ngClass"], ["class", "alert-heading", 4, "ngIf"], ["type", "button", "class", "close", "data-dismiss", "alert", "aria-label", "Close", 3, "click", 4, "ngIf"], [1, "alert-heading"], ["type", "button", "data-dismiss", "alert", "aria-label", "Close", 1, "close", 3, "click"], ["aria-hidden", "true"]], template: function PageAlertContainerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, PageAlertContainerComponent_ng_container_0_Template, 6, 12, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.service.alerts$));
    } }, directives: [ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc3.NgIf], pipes: [ɵngcc3.AsyncPipe, ɵngcc1.LocalizationPipe], encapsulation: 2 });
PageAlertContainerComponent.ctorParameters = () => [
    { type: PageAlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PageAlertContainerComponent, [{
        type: Component,
        args: [{
                selector: 'abp-page-alert-container',
                template: "<ng-container *ngFor=\"let alert of service.alerts$ | async; let i = index\">\n  <div\n    class=\"alert alert-{{ alert.type }} fade show\"\n    [ngClass]=\"{ 'alert-dismissible fade show': alert.dismissible }\"\n    role=\"alert\"\n  >\n    <h4 class=\"alert-heading\" *ngIf=\"alert.title\">\n      {{ alert.title | abpLocalization: alert.titleLocalizationParams }}\n    </h4>\n    {{ alert.message | abpLocalization: alert.messageLocalizationParams }}\n    <button\n      *ngIf=\"alert.dismissible\"\n      type=\"button\"\n      class=\"close\"\n      data-dismiss=\"alert\"\n      aria-label=\"Close\"\n      (click)=\"service.remove(i)\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n</ng-container>\n",
                encapsulation: ViewEncapsulation.None
            }]
    }], function () { return [{ type: ɵngcc6.PageAlertService }]; }, null); })();

const BASIC_THEME_NAV_ITEM_PROVIDERS = [
    {
        provide: APP_INITIALIZER,
        useFactory: configureNavItems,
        deps: [NavItemsService],
        multi: true,
    },
];
function configureNavItems(navItems) {
    return () => {
        navItems.addItems([
            {
                id: "Theme.LanguagesComponent" /* Languages */,
                order: 100,
                component: LanguagesComponent,
            },
            {
                id: "Theme.CurrentUserComponent" /* CurrentUser */,
                order: 100,
                component: CurrentUserComponent,
            },
        ]);
    };
}

var styles = `
.content-header-title {
    font-size: 24px;
}
.entry-row {
    margin-bottom: 15px;
}
#main-navbar-tools a.dropdown-toggle {
    text-decoration: none;
    color: #fff;
}
.navbar .dropdown-submenu {
    position: relative;
}
.navbar .dropdown-menu {
    margin: 0;
    padding: 0;
}
.navbar .dropdown-menu a {
    font-size: .9em;
    padding: 10px 15px;
    display: block;
    min-width: 210px;
    text-align: left;
    border-radius: 0.25rem;
    min-height: 44px;
}
[dir=rtl] .navbar .dropdown-menu a {
    text-align: right!important;
}
.navbar .dropdown-submenu a::after {
    transform: rotate(-90deg);
    position: absolute;
    right: 16px;
    top: 18px;
}
[dir=rtl] .navbar .dropdown-submenu a::after {
    transform: rotate(90deg);
    left: 16px;
    right: auto;
    top: 20px;
}
.navbar .dropdown-submenu .dropdown-menu {
    top: 0;
    left: 100%;
}
.card-header .btn {
    padding: 2px 6px;
}
.card-header h5 {
    margin: 0;
}
.container > .card {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
}
@media screen and (min-width: 992px) {
    .navbar .dropdown:hover > .dropdown-menu {
        display: block;
    }

    .navbar .dropdown-submenu:hover > .dropdown-menu {
        display: block;
    }
}
.input-validation-error {
    border-color: #dc3545;
}
.field-validation-error {
    font-size: 0.8em;
}
.ui-table .ui-table-tbody > tr.empty-row > div.empty-row-content {
    border: 1px solid #c8c8c8;
  }
.abp-loading {
    background: rgba(0, 0, 0, 0.05);
}
.modal-backdrop {
background-color: rgba(0, 0, 0, 0.6);
}

.confirmation .confirmation-backdrop {
	 background: rgba(0, 0, 0, 0.7) !important;
}
 .confirmation .confirmation-dialog {
	 border: none;
	 border-radius: 10px;
	 background-color: #fff;
	 box-shadow: 0 0 10px -5px rgba(0, 0, 0, 0.5);
}
 .confirmation .confirmation-dialog .icon-container .icon {
	 stroke: #fff;
	 color: #fff;
}
 .confirmation .confirmation-dialog .icon-container.info .icon {
	 stroke: #2f96b4;
	 color: #2f96b4;
}
 .confirmation .confirmation-dialog .icon-container.success .icon {
	 stroke: #51a351;
	 color: #51a351;
}
 .confirmation .confirmation-dialog .icon-container.warning .icon {
	 stroke: #f89406;
	 color: #f89406;
}
 .confirmation .confirmation-dialog .icon-container.error .icon {
	 stroke: #bd362f;
	 color: #bd362f;
}
 .confirmation .confirmation-dialog .content .title {
	 color: #222;
}
 .confirmation .confirmation-dialog .content .message {
	 color: #777;
}
 .confirmation .confirmation-dialog .footer {
	 background: transparent;
}
 .confirmation .confirmation-dialog .footer .confirmation-button {
	 background-color: #eee;
	 color: #777;
}
 .confirmation .confirmation-dialog .footer .confirmation-button:hover, .confirmation .confirmation-dialog .footer .confirmation-button:focus, .confirmation .confirmation-dialog .footer .confirmation-button:active {
	 background-color: #bbb;
}
 .confirmation .confirmation-dialog .footer .confirmation-button--confirm {
	 background-color: #2f96b4;
	 color: #fff;
}
 .confirmation .confirmation-dialog .footer .confirmation-button--confirm:hover {
	 background-color: #2e819b;
}
.ui-table .pagination-wrapper {
    background-color: #f4f4f4;
    border: 1px solid #c8c8c8;
}
.bordered .datatable-body-row {
    border-top: 1px solid #eee;
    margin-top: -1px;
}
.breadcrumb {
    background-color: transparent;
    padding: 0.27rem;
}
`;

const BASIC_THEME_STYLES_PROVIDERS = [
    {
        provide: APP_INITIALIZER,
        useFactory: configureStyles,
        deps: [DomInsertionService, ReplaceableComponentsService],
        multi: true,
    },
];
function configureStyles(domInsertion, replaceableComponents) {
    return () => {
        domInsertion.insertContent(CONTENT_STRATEGY.AppendStyleToHead(styles));
        initLayouts(replaceableComponents);
    };
}
function initLayouts(replaceableComponents) {
    replaceableComponents.add({
        key: "Theme.ApplicationLayoutComponent" /* ApplicationLayout */,
        component: ApplicationLayoutComponent,
    });
    replaceableComponents.add({
        key: "Theme.AccountLayoutComponent" /* AccountLayout */,
        component: AccountLayoutComponent,
    });
    replaceableComponents.add({
        key: "Theme.EmptyLayoutComponent" /* EmptyLayout */,
        component: EmptyLayoutComponent,
    });
}

const LAYOUTS = [ApplicationLayoutComponent, AccountLayoutComponent, EmptyLayoutComponent];
class BaseThemeBasicModule {
}
BaseThemeBasicModule.ɵfac = function BaseThemeBasicModule_Factory(t) { return new (t || BaseThemeBasicModule)(); };
BaseThemeBasicModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BaseThemeBasicModule });
BaseThemeBasicModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CoreModule,
            ThemeSharedModule,
            NgbCollapseModule,
            NgbDropdownModule,
            NgxValidateCoreModule,
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BaseThemeBasicModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ...LAYOUTS,
                    ValidationErrorComponent,
                    LogoComponent,
                    NavItemsComponent,
                    RoutesComponent,
                    CurrentUserComponent,
                    LanguagesComponent,
                    PageAlertContainerComponent,
                    TenantBoxComponent,
                    AuthWrapperComponent,
                ],
                exports: [
                    ...LAYOUTS,
                    ValidationErrorComponent,
                    LogoComponent,
                    NavItemsComponent,
                    RoutesComponent,
                    CurrentUserComponent,
                    LanguagesComponent,
                    PageAlertContainerComponent,
                ],
                imports: [
                    CoreModule,
                    ThemeSharedModule,
                    NgbCollapseModule,
                    NgbDropdownModule,
                    NgxValidateCoreModule,
                ],
                entryComponents: [...LAYOUTS, ValidationErrorComponent, CurrentUserComponent, LanguagesComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BaseThemeBasicModule, { declarations: function () { return [ApplicationLayoutComponent, AccountLayoutComponent, EmptyLayoutComponent, ValidationErrorComponent, LogoComponent, NavItemsComponent, RoutesComponent, CurrentUserComponent, LanguagesComponent, PageAlertContainerComponent, TenantBoxComponent, AuthWrapperComponent]; }, imports: function () { return [CoreModule,
        ThemeSharedModule,
        NgbCollapseModule,
        NgbDropdownModule,
        NgxValidateCoreModule]; }, exports: function () { return [ApplicationLayoutComponent, AccountLayoutComponent, EmptyLayoutComponent, ValidationErrorComponent, LogoComponent, NavItemsComponent, RoutesComponent, CurrentUserComponent, LanguagesComponent, PageAlertContainerComponent]; } }); })();
class ThemeBasicModule {
    static forRoot() {
        return {
            ngModule: ThemeBasicModule,
            providers: [
                BASIC_THEME_NAV_ITEM_PROVIDERS,
                BASIC_THEME_STYLES_PROVIDERS,
                {
                    provide: VALIDATION_ERROR_TEMPLATE,
                    useValue: ValidationErrorComponent,
                },
                {
                    provide: VALIDATION_TARGET_SELECTOR,
                    useValue: '.form-group',
                },
                {
                    provide: VALIDATION_INVALID_CLASSES,
                    useValue: 'is-invalid',
                },
            ],
        };
    }
}
ThemeBasicModule.ɵfac = function ThemeBasicModule_Factory(t) { return new (t || ThemeBasicModule)(); };
ThemeBasicModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ThemeBasicModule });
ThemeBasicModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BaseThemeBasicModule], BaseThemeBasicModule] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ThemeBasicModule, [{
        type: NgModule,
        args: [{
                exports: [BaseThemeBasicModule],
                imports: [BaseThemeBasicModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ThemeBasicModule, { imports: [BaseThemeBasicModule], exports: [BaseThemeBasicModule] }); })();

/*
 * Public API Surface of theme-basic
 */

/**
 * Generated bundle index. Do not edit.
 */

export { AccountLayoutComponent, ApplicationLayoutComponent, AuthWrapperComponent, BASIC_THEME_NAV_ITEM_PROVIDERS, BASIC_THEME_STYLES_PROVIDERS, BaseThemeBasicModule, CurrentUserComponent, EmptyLayoutComponent, LAYOUTS, LanguagesComponent, LogoComponent, NavItemsComponent, PageAlertContainerComponent, RoutesComponent, TenantBoxComponent, ThemeBasicModule, ValidationErrorComponent, configureNavItems, configureStyles, ApplicationLayoutComponent as ɵa, LayoutService as ɵb, AccountLayoutComponent as ɵc, EmptyLayoutComponent as ɵd, ValidationErrorComponent as ɵe, LogoComponent as ɵf, NavItemsComponent as ɵg, RoutesComponent as ɵh, CurrentUserComponent as ɵi, LanguagesComponent as ɵj, PageAlertContainerComponent as ɵk, TenantBoxComponent as ɵl, AuthWrapperComponent as ɵm, BASIC_THEME_NAV_ITEM_PROVIDERS as ɵn, configureNavItems as ɵo, BASIC_THEME_STYLES_PROVIDERS as ɵp, configureStyles as ɵq };

//# sourceMappingURL=abp-ng.theme.basic.js.map