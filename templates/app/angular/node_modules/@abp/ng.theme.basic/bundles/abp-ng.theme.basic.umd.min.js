!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@abp/ng.core"),require("rxjs"),require("rxjs/operators"),require("@abp/ng.account.core"),require("@abp/ng.theme.shared"),require("snq"),require("@ngx-validate/core"),require("@ng-bootstrap/ng-bootstrap")):"function"==typeof define&&define.amd?define("@abp/ng.theme.basic",["exports","@angular/core","@abp/ng.core","rxjs","rxjs/operators","@abp/ng.account.core","@abp/ng.theme.shared","snq","@ngx-validate/core","@ng-bootstrap/ng-bootstrap"],e):e(((n="undefined"!=typeof globalThis?globalThis:n||self).abp=n.abp||{},n.abp.ng=n.abp.ng||{},n.abp.ng.theme=n.abp.ng.theme||{},n.abp.ng.theme.basic={}),n.ng.core,n.ng_core,n.rxjs,n.rxjs.operators,n.ng_account_core,n.ng_theme_shared,n.snq,n.core$1,n.ngBootstrap)}(this,(function(n,e,t,o,a,r,i,c,s,l){"use strict";function p(n){return n&&"object"==typeof n&&"default"in n?n:{default:n}}var d=p(c),u=function(){function n(n,e){this.subscription=n,this.cdRef=e,this.isCollapsed=!0,this.logoComponentKey="Theme.LogoComponent",this.routesComponentKey="Theme.RoutesComponent",this.navItemsComponentKey="Theme.NavItemsComponent"}return n.prototype.checkWindowWidth=function(){var n=this,e=window.innerWidth<992;e&&!1===this.smallScreen&&(this.isCollapsed=!1,setTimeout((function(){n.isCollapsed=!0}),100)),this.smallScreen=e,this.cdRef.detectChanges()},n.prototype.subscribeWindowSize=function(){var n=this;this.checkWindowWidth();var e=o.fromEvent(window,"resize").pipe(a.debounceTime(150));this.subscription.addOne(e,(function(){return n.checkWindowWidth()}))},n}();u.decorators=[{type:e.Injectable}],u.ctorParameters=function(){return[{type:t.SubscriptionService},{type:e.ChangeDetectorRef}]};var m=function(){function n(n){this.service=n,this.authWrapperKey="Account.AuthWrapperComponent"}return n.prototype.ngAfterViewInit=function(){this.service.subscribeWindowSize()},n}();m.type="account",m.decorators=[{type:e.Component,args:[{selector:"abp-layout-account",template:'<nav\n  class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4"\n  id="main-navbar"\n  style="min-height: 4rem"\n>\n  <div class="container">\n    <abp-logo *abpReplaceableTemplate="{ componentKey: service.logoComponentKey }"></abp-logo>\n    <button\n      class="navbar-toggler"\n      type="button"\n      [attr.aria-expanded]="!service.isCollapsed"\n      (click)="service.isCollapsed = !service.isCollapsed"\n    >\n      <span class="navbar-toggler-icon"></span>\n    </button>\n    <div\n      class="navbar-collapse"\n      [class.overflow-hidden]="service.smallScreen"\n      id="main-navbar-collapse"\n    >\n      <ng-container *ngTemplateOutlet="!service.smallScreen ? navigations : null"></ng-container>\n\n      <div\n        *ngIf="service.smallScreen"\n        [@collapseWithMargin]="service.isCollapsed ? \'collapsed\' : \'expanded\'"\n      >\n        <ng-container *ngTemplateOutlet="navigations"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <abp-routes\n          *abpReplaceableTemplate="{\n            componentKey: service.routesComponentKey,\n            inputs: {\n              smallScreen: { value: service.smallScreen }\n            }\n          }"\n          class="mx-auto"\n          [smallScreen]="service.smallScreen"\n        ></abp-routes>\n\n        <abp-nav-items\n          *abpReplaceableTemplate="{\n            componentKey: service.navItemsComponentKey\n          }"\n        ></abp-nav-items>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n\x3c!-- [@slideFromBottom]="outlet.isActivated && outlet.activatedRoute?.routeConfig?.path" TODO: throws ExpressionChangedAfterItHasBeenCheck when animation is active. It should be fixed --\x3e\n<div class="container">\n  <abp-page-alert-container></abp-page-alert-container>\n  <abp-auth-wrapper\n    *abpReplaceableTemplate="{\n      componentKey: authWrapperKey\n    }"\n  >\n    <router-outlet #outlet="outlet"></router-outlet>\n  </abp-auth-wrapper>\n</div>\n',providers:[u,t.SubscriptionService]}]}],m.ctorParameters=function(){return[{type:u}]};var g=function(){function n(n){this.service=n}return n.prototype.ngOnInit=function(){},n}();g.decorators=[{type:e.Component,args:[{selector:"abp-auth-wrapper",template:'<div class="row">\n  <div class="mx-auto col col-md-5">\n    <ng-container *ngIf="(service.isMultiTenancyEnabled$ | async) && service.isTenantBoxVisible">\n      <abp-tenant-box\n        *abpReplaceableTemplate="{ componentKey: service.tenantBoxKey }"\n      ></abp-tenant-box>\n    </ng-container>\n\n    <div class="abp-account-container">\n      <div\n        *ngIf="service.enableLocalLogin$ | async; else disableLocalLoginTemplate"\n        class="card mt-3 shadow-sm rounded"\n      >\n        <div class="card-body p-5">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #disableLocalLoginTemplate>\n  <div class="alert alert-warning">\n    <strong>{{ \'AbpAccount::InvalidLoginRequest\' | abpLocalization }}</strong>\n    {{ \'AbpAccount::ThereAreNoLoginSchemesConfiguredForThisClient\' | abpLocalization }}\n  </div>\n</ng-template>\n',providers:[r.AuthWrapperService]}]}],g.ctorParameters=function(){return[{type:r.AuthWrapperService}]};var b=function(){function n(n){this.service=n}return n.prototype.ngOnInit=function(){},n}();b.decorators=[{type:e.Component,args:[{selector:"abp-tenant-box",template:'<ng-container *ngIf="(service.currentTenant$ | async) || {} as currentTenant">\n  <div class="card shadow-sm rounded mb-3">\n    <div class="card-body px-5">\n      <div class="row">\n        <div class="col">\n          <span style="font-size: 0.8em" class="text-uppercase text-muted">{{\n            \'AbpUiMultiTenancy::Tenant\' | abpLocalization\n          }}</span\n          ><br />\n          <h6 class="m-0 d-inline-block">\n            <i>{{ currentTenant.name || (\'AbpUiMultiTenancy::NotSelected\' | abpLocalization) }}</i>\n          </h6>\n        </div>\n        <div class="col-auto">\n          <a\n            id="AbpTenantSwitchLink"\n            href="javascript:void(0);"\n            class="btn btn-sm mt-3 btn-outline-primary"\n            (click)="service.onSwitch()"\n            >{{ \'AbpUiMultiTenancy::Switch\' | abpLocalization }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <abp-modal size="md" [(visible)]="service.isModalVisible" [busy]="service.modalBusy">\n    <ng-template #abpHeader>\n      <h5>Switch Tenant</h5>\n    </ng-template>\n    <ng-template #abpBody>\n      <form (ngSubmit)="service.save()">\n        <div class="mt-2">\n          <div class="form-group">\n            <label for="name">{{ \'AbpUiMultiTenancy::Name\' | abpLocalization }}</label>\n            <input\n              [(ngModel)]="service.name"\n              type="text"\n              id="name"\n              name="tenant"\n              class="form-control"\n              autofocus\n            />\n          </div>\n          <p>{{ \'AbpUiMultiTenancy::SwitchTenantHint\' | abpLocalization }}</p>\n        </div>\n      </form>\n    </ng-template>\n    <ng-template #abpFooter>\n      <button abpClose type="button" class="btn btn-secondary">\n        {{ \'AbpTenantManagement::Cancel\' | abpLocalization }}\n      </button>\n      <abp-button\n        type="abp-button"\n        iconClass="fa fa-check"\n        (click)="service.save()"\n        [disabled]="currentTenant?.name === service.name"\n      >\n        <span>{{ \'AbpTenantManagement::Save\' | abpLocalization }}</span>\n      </abp-button>\n    </ng-template>\n  </abp-modal>\n</ng-container>\n',providers:[r.TenantBoxService]}]}],b.ctorParameters=function(){return[{type:r.TenantBoxService}]};var f=function(){function n(n){this.service=n}return n.prototype.ngAfterViewInit=function(){this.service.subscribeWindowSize()},n}();f.type="application",f.decorators=[{type:e.Component,args:[{selector:"abp-layout-application",template:'<nav\n  class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm flex-column flex-md-row mb-4"\n  id="main-navbar"\n  style="min-height: 4rem"\n>\n  <div class="container">\n    <abp-logo *abpReplaceableTemplate="{ componentKey: service.logoComponentKey }"></abp-logo>\n    <button\n      class="navbar-toggler"\n      type="button"\n      [attr.aria-expanded]="!service.isCollapsed"\n      (click)="service.isCollapsed = !service.isCollapsed"\n    >\n      <span class="navbar-toggler-icon"></span>\n    </button>\n    <div class="navbar-collapse" [class.overflow-hidden]="service.smallScreen" id="main-navbar-collapse">\n      <ng-container *ngTemplateOutlet="!service.smallScreen ? navigations : null"></ng-container>\n\n      <div *ngIf="service.smallScreen" [@collapseWithMargin]="service.isCollapsed ? \'collapsed\' : \'expanded\'">\n        <ng-container *ngTemplateOutlet="navigations"></ng-container>\n      </div>\n\n      <ng-template #navigations>\n        <abp-routes\n          *abpReplaceableTemplate="{\n            componentKey: service.routesComponentKey,\n            inputs: {\n              smallScreen: { value: service.smallScreen }\n            }\n          }"\n          class="mx-auto"\n          [smallScreen]="service.smallScreen"\n        ></abp-routes>\n\n        <abp-nav-items\n          *abpReplaceableTemplate="{\n            componentKey: service.navItemsComponentKey\n          }"\n        ></abp-nav-items>\n      </ng-template>\n    </div>\n  </div>\n</nav>\n\n\x3c!-- [@slideFromBottom]="outlet.isActivated && outlet.activatedRoute?.routeConfig?.path" TODO: throws ExpressionChangedAfterItHasBeenCheck when animation is active. It should be fixed --\x3e\n<div class="container">\n  <abp-page-alert-container></abp-page-alert-container>\n\n  <router-outlet #outlet="outlet"></router-outlet>\n</div>\n',animations:[i.slideFromBottom,i.collapseWithMargin],providers:[u,t.SubscriptionService]}]}],f.ctorParameters=function(){return[{type:u}]};var v=function(){};v.type="empty",v.decorators=[{type:e.Component,args:[{selector:"abp-layout-empty",template:"\n    <router-outlet></router-outlet>\n    <abp-confirmation></abp-confirmation>\n  "}]}];var h=function(){function n(n){this.environment=n}return Object.defineProperty(n.prototype,"appInfo",{get:function(){return this.environment.getEnvironment().application},enumerable:!1,configurable:!0}),n}();h.decorators=[{type:e.Component,args:[{selector:"abp-logo",template:'\n    <a class="navbar-brand" routerLink="/">\n      <img\n        *ngIf="appInfo.logoUrl; else appName"\n        [src]="appInfo.logoUrl"\n        [alt]="appInfo.name"\n        width="100%"\n        height="auto"\n      />\n    </a>\n\n    <ng-template #appName>\n      {{ appInfo.name }}\n    </ng-template>\n  '}]}],h.ctorParameters=function(){return[{type:t.EnvironmentService}]};var y=function(){function n(n,e,t,o){this.navigateToManageProfile=n,this.authService=e,this.configState=t,this.sessionState=o,this.currentUser$=this.configState.getOne$("currentUser"),this.selectedTenant$=this.sessionState.getTenant$()}return Object.defineProperty(n.prototype,"smallScreen",{get:function(){return window.innerWidth<992},enumerable:!1,configurable:!0}),n.prototype.navigateToLogin=function(){this.authService.navigateToLogin()},n.prototype.logout=function(){this.authService.logout().subscribe()},n}();y.decorators=[{type:e.Component,args:[{selector:"abp-current-user",template:'<ng-template #loginBtn>\n  <a role="button" class="nav-link pointer" (click)="navigateToLogin()">{{\n    \'AbpAccount::Login\' | abpLocalization\n  }}</a>\n</ng-template>\n<div\n  *ngIf="(currentUser$ | async)?.isAuthenticated; else loginBtn"\n  ngbDropdown\n  class="dropdown"\n  #currentUserDropdown="ngbDropdown"\n  display="static"\n>\n  <a\n    ngbDropdownToggle\n    class="nav-link"\n    href="javascript:void(0)"\n    role="button"\n    id="dropdownMenuLink"\n    data-toggle="dropdown"\n    aria-haspopup="true"\n    aria-expanded="false"\n  >\n    <small *ngIf="(selectedTenant$ | async)?.name as tenantName"\n      ><i>{{ tenantName }}</i\n      >\\</small\n    >\n    <strong>{{ (currentUser$ | async)?.userName }}</strong>\n  </a>\n  <div\n    class="dropdown-menu dropdown-menu-right border-0 shadow-sm"\n    aria-labelledby="dropdownMenuLink"\n    [class.d-block]="smallScreen && currentUserDropdown.isOpen()"\n  >\n    <a class="dropdown-item pointer" (click)="navigateToManageProfile()"\n      ><i class="fa fa-cog mr-1"></i>{{ \'AbpAccount::MyAccount\' | abpLocalization }}</a\n    >\n    <a class="dropdown-item" href="javascript:void(0)" (click)="logout()"\n      ><i class="fa fa-power-off mr-1"></i>{{ \'AbpUi::Logout\' | abpLocalization }}</a\n    >\n  </div>\n</div>\n'}]}],y.ctorParameters=function(){return[{type:void 0,decorators:[{type:e.Inject,args:[t.NAVIGATE_TO_MANAGE_PROFILE]}]},{type:t.AuthService},{type:t.ConfigStateService},{type:t.SessionStateService}]};var w=function(){function n(n,e){this.sessionState=n,this.configState=e,this.languages$=this.configState.getDeep$("localization.languages")}return Object.defineProperty(n.prototype,"smallScreen",{get:function(){return window.innerWidth<992},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"defaultLanguage$",{get:function(){var n=this;return this.languages$.pipe(a.map((function(e){return d.default((function(){return e.find((function(e){return e.cultureName===n.selectedLangCulture})).displayName}))}),""))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"dropdownLanguages$",{get:function(){var n=this;return this.languages$.pipe(a.map((function(e){return d.default((function(){return e.filter((function(e){return e.cultureName!==n.selectedLangCulture}))}))}),[]))},enumerable:!1,configurable:!0}),Object.defineProperty(n.prototype,"selectedLangCulture",{get:function(){return this.sessionState.getLanguage()},enumerable:!1,configurable:!0}),n.prototype.onChangeLang=function(n){this.sessionState.setLanguage(n)},n}();w.decorators=[{type:e.Component,args:[{selector:"abp-languages",template:'\n    <div\n      *ngIf="(dropdownLanguages$ | async)?.length > 0"\n      class="dropdown"\n      ngbDropdown\n      #languageDropdown="ngbDropdown"\n      display="static"\n    >\n      <a\n        ngbDropdownToggle\n        class="nav-link"\n        href="javascript:void(0)"\n        role="button"\n        id="dropdownMenuLink"\n        data-toggle="dropdown"\n        aria-haspopup="true"\n        aria-expanded="false"\n      >\n        {{ defaultLanguage$ | async }}\n      </a>\n      <div\n        class="dropdown-menu dropdown-menu-right border-0 shadow-sm"\n        aria-labelledby="dropdownMenuLink"\n        [class.d-block]="smallScreen && languageDropdown.isOpen()"\n      >\n        <a\n          *ngFor="let lang of dropdownLanguages$ | async"\n          href="javascript:void(0)"\n          class="dropdown-item"\n          (click)="onChangeLang(lang.cultureName)"\n          >{{ lang?.displayName }}</a\n        >\n      </div>\n    </div>\n  '}]}],w.ctorParameters=function(){return[{type:t.SessionStateService},{type:t.ConfigStateService}]};var C=function(n){this.navItems=n,this.trackByFn=function(n,e){return e.id}};C.decorators=[{type:e.Component,args:[{selector:"abp-nav-items",template:'<ul class="navbar-nav">\n  <ng-container *ngFor="let item of navItems.items$ | async; trackBy: trackByFn">\n    <ng-container *ngIf="item.visible()">\n      <li class="nav-item d-flex align-items-center" *abpPermission="item.requiredPolicy">\n        <ng-container\n          *ngIf="item.component; else htmlTemplate"\n          [ngComponentOutlet]="item.component"\n        ></ng-container>\n\n        <ng-template #htmlTemplate>\n          <div [innerHTML]="item.html" (click)="item.action ? item.action() : null"></div>\n        </ng-template>\n      </li>\n    </ng-container>\n  </ng-container>\n</ul>\n'}]}],C.ctorParameters=function(){return[{type:i.NavItemsService}]};var S=function(){function n(n,e){this.routesService=n,this.renderer=e,this.trackByFn=function(n,e){return e.name}}return n.prototype.isDropdown=function(n){return!(null==n?void 0:n.isLeaf)||this.routesService.hasChildren(n.name)},n.prototype.closeDropdown=function(){var n=this;this.childrenContainers.forEach((function(e){var t=e.nativeElement;n.renderer.addClass(t,"d-none"),setTimeout((function(){return n.renderer.removeClass(t,"d-none")}),0)}))},n}();S.decorators=[{type:e.Component,args:[{selector:"abp-routes",template:'<ul class="navbar-nav">\n  <ng-container\n    *ngFor="let route of routesService.visible$ | async; trackBy: trackByFn"\n    [ngTemplateOutlet]="isDropdown(route) ? dropdownLink : defaultLink"\n    [ngTemplateOutletContext]="{ $implicit: route }"\n  >\n  </ng-container>\n\n  <ng-template #defaultLink let-route>\n    <li class="nav-item" *abpPermission="route.requiredPolicy">\n      <a class="nav-link" [routerLink]="[route.path]"\n        ><i *ngIf="route.iconClass" [ngClass]="route.iconClass"></i>\n        {{ route.name | abpLocalization }}</a\n      >\n    </li>\n  </ng-template>\n\n  <ng-template #dropdownLink let-route>\n    <ng-container *ngIf="route.children?.length">\n      <li\n        #navbarRootDropdown\n        class="nav-item dropdown"\n        display="static"\n        *abpPermission="route.requiredPolicy"\n        (click)="\n          navbarRootDropdown.expand\n            ? (navbarRootDropdown.expand = false)\n            : (navbarRootDropdown.expand = true)\n        "\n      >\n        <a\n          class="nav-link dropdown-toggle"\n          data-toggle="dropdown"\n          aria-haspopup="true"\n          aria-expanded="false"\n          href="javascript:void(0)"\n        >\n          <i *ngIf="route.iconClass" [ngClass]="route.iconClass"></i>\n          {{ route.name | abpLocalization }}\n        </a>\n        <div\n          #routeContainer\n          class="dropdown-menu border-0 shadow-sm"\n          (click)="$event.preventDefault(); $event.stopPropagation()"\n          [class.d-block]="smallScreen && navbarRootDropdown.expand"\n        >\n          <ng-container\n            *ngTemplateOutlet="forTemplate; context: { $implicit: route }"\n          ></ng-container>\n        </div>\n      </li>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #forTemplate let-route>\n    <ng-container *ngFor="let child of route.children">\n      <ng-template\n        [ngTemplateOutlet]="child.children?.length ? dropdownChild : defaultChild"\n        [ngTemplateOutletContext]="{ $implicit: child }"\n      ></ng-template>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #defaultChild let-child>\n    <ng-container *ngIf="child.path">\n      <div class="dropdown-submenu" *abpPermission="child.requiredPolicy">\n        <a class="dropdown-item" [routerLink]="[child.path]" (click)="closeDropdown()">\n          <i *ngIf="child.iconClass" [ngClass]="child.iconClass"></i>\n          {{ child.name | abpLocalization }}</a\n        >\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <ng-template #dropdownChild let-child>\n    <div\n      class="dropdown-submenu"\n      ngbDropdown\n      #dropdownSubmenu="ngbDropdown"\n      placement="right-top"\n      [autoClose]="true"\n      *abpPermission="child.requiredPolicy"\n    >\n      <div ngbDropdownToggle [class.dropdown-toggle]="false">\n        <a\n          abpEllipsis="210px"\n          [abpEllipsisEnabled]="!smallScreen"\n          role="button"\n          class="btn d-block text-left dropdown-toggle"\n        >\n          <i *ngIf="child.iconClass" [ngClass]="child.iconClass"></i>\n          {{ child.name | abpLocalization }}\n        </a>\n      </div>\n      <div\n        #childrenContainer\n        class="dropdown-menu border-0 shadow-sm"\n        [class.d-block]="smallScreen && dropdownSubmenu.isOpen()"\n      >\n        <ng-container *ngTemplateOutlet="forTemplate; context: { $implicit: child }"></ng-container>\n      </div>\n    </div>\n  </ng-template>\n</ul>\n'}]}],S.ctorParameters=function(){return[{type:t.RoutesService},{type:e.Renderer2}]},S.propDecorators={smallScreen:[{type:e.Input}],childrenContainers:[{type:e.ViewChildren,args:["childrenContainer"]}]};
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
var T=function(n,e){return(T=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t])})(n,e)};Object.create;function x(n,e){var t="function"==typeof Symbol&&n[Symbol.iterator];if(!t)return n;var o,a,r=t.call(n),i=[];try{for(;(void 0===e||e-- >0)&&!(o=r.next()).done;)i.push(o.value)}catch(n){a={error:n}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(a)throw a.error}}return i}function L(){for(var n=[],e=0;e<arguments.length;e++)n=n.concat(x(arguments[e]));return n}Object.create;var k=function(n){function e(){return null!==n&&n.apply(this,arguments)||this}return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}T(n,e),n.prototype=null===e?Object.create(e):(t.prototype=e.prototype,new t)}(e,n),Object.defineProperty(e.prototype,"abpErrors",{get:function(){return this.errors&&this.errors.length?this.errors.map((function(n){if(!n.message)return n;var e=n.message.indexOf("[");return e>-1?Object.assign(Object.assign({},n),{message:n.message.slice(0,e),interpoliteParams:n.message.slice(e+1,n.message.length-1).split(",")}):n})):[]},enumerable:!1,configurable:!0}),e}(s.ValidationErrorComponent);k.decorators=[{type:e.Component,args:[{selector:"abp-validation-error",template:'\n    <div class="invalid-feedback" *ngFor="let error of abpErrors; trackBy: trackByFn">\n      {{ error.message | abpLocalization: error.interpoliteParams }}\n    </div>\n  ',changeDetection:e.ChangeDetectionStrategy.OnPush,encapsulation:e.ViewEncapsulation.None}]}];var I=function(n){this.service=n};I.decorators=[{type:e.Component,args:[{selector:"abp-page-alert-container",template:'<ng-container *ngFor="let alert of service.alerts$ | async; let i = index">\n  <div\n    class="alert alert-{{ alert.type }} fade show"\n    [ngClass]="{ \'alert-dismissible fade show\': alert.dismissible }"\n    role="alert"\n  >\n    <h4 class="alert-heading" *ngIf="alert.title">\n      {{ alert.title | abpLocalization: alert.titleLocalizationParams }}\n    </h4>\n    {{ alert.message | abpLocalization: alert.messageLocalizationParams }}\n    <button\n      *ngIf="alert.dismissible"\n      type="button"\n      class="close"\n      data-dismiss="alert"\n      aria-label="Close"\n      (click)="service.remove(i)"\n    >\n      <span aria-hidden="true">&times;</span>\n    </button>\n  </div>\n</ng-container>\n',encapsulation:e.ViewEncapsulation.None}]}],I.ctorParameters=function(){return[{type:i.PageAlertService}]};var A=[{provide:e.APP_INITIALIZER,useFactory:O,deps:[i.NavItemsService],multi:!0}];function O(n){return function(){n.addItems([{id:"Theme.LanguagesComponent",order:100,component:w},{id:"Theme.CurrentUserComponent",order:100,component:y}])}}var P=[{provide:e.APP_INITIALIZER,useFactory:E,deps:[t.DomInsertionService,t.ReplaceableComponentsService],multi:!0}];function E(n,e){return function(){n.insertContent(t.CONTENT_STRATEGY.AppendStyleToHead("\n.content-header-title {\n    font-size: 24px;\n}\n.entry-row {\n    margin-bottom: 15px;\n}\n#main-navbar-tools a.dropdown-toggle {\n    text-decoration: none;\n    color: #fff;\n}\n.navbar .dropdown-submenu {\n    position: relative;\n}\n.navbar .dropdown-menu {\n    margin: 0;\n    padding: 0;\n}\n.navbar .dropdown-menu a {\n    font-size: .9em;\n    padding: 10px 15px;\n    display: block;\n    min-width: 210px;\n    text-align: left;\n    border-radius: 0.25rem;\n    min-height: 44px;\n}\n[dir=rtl] .navbar .dropdown-menu a {\n    text-align: right!important;\n}\n.navbar .dropdown-submenu a::after {\n    transform: rotate(-90deg);\n    position: absolute;\n    right: 16px;\n    top: 18px;\n}\n[dir=rtl] .navbar .dropdown-submenu a::after {\n    transform: rotate(90deg);\n    left: 16px;\n    right: auto;\n    top: 20px;\n}\n.navbar .dropdown-submenu .dropdown-menu {\n    top: 0;\n    left: 100%;\n}\n.card-header .btn {\n    padding: 2px 6px;\n}\n.card-header h5 {\n    margin: 0;\n}\n.container > .card {\n    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;\n}\n@media screen and (min-width: 992px) {\n    .navbar .dropdown:hover > .dropdown-menu {\n        display: block;\n    }\n\n    .navbar .dropdown-submenu:hover > .dropdown-menu {\n        display: block;\n    }\n}\n.input-validation-error {\n    border-color: #dc3545;\n}\n.field-validation-error {\n    font-size: 0.8em;\n}\n.ui-table .ui-table-tbody > tr.empty-row > div.empty-row-content {\n    border: 1px solid #c8c8c8;\n  }\n.abp-loading {\n    background: rgba(0, 0, 0, 0.05);\n}\n.modal-backdrop {\nbackground-color: rgba(0, 0, 0, 0.6);\n}\n\n.confirmation .confirmation-backdrop {\n\t background: rgba(0, 0, 0, 0.7) !important;\n}\n .confirmation .confirmation-dialog {\n\t border: none;\n\t border-radius: 10px;\n\t background-color: #fff;\n\t box-shadow: 0 0 10px -5px rgba(0, 0, 0, 0.5);\n}\n .confirmation .confirmation-dialog .icon-container .icon {\n\t stroke: #fff;\n\t color: #fff;\n}\n .confirmation .confirmation-dialog .icon-container.info .icon {\n\t stroke: #2f96b4;\n\t color: #2f96b4;\n}\n .confirmation .confirmation-dialog .icon-container.success .icon {\n\t stroke: #51a351;\n\t color: #51a351;\n}\n .confirmation .confirmation-dialog .icon-container.warning .icon {\n\t stroke: #f89406;\n\t color: #f89406;\n}\n .confirmation .confirmation-dialog .icon-container.error .icon {\n\t stroke: #bd362f;\n\t color: #bd362f;\n}\n .confirmation .confirmation-dialog .content .title {\n\t color: #222;\n}\n .confirmation .confirmation-dialog .content .message {\n\t color: #777;\n}\n .confirmation .confirmation-dialog .footer {\n\t background: transparent;\n}\n .confirmation .confirmation-dialog .footer .confirmation-button {\n\t background-color: #eee;\n\t color: #777;\n}\n .confirmation .confirmation-dialog .footer .confirmation-button:hover, .confirmation .confirmation-dialog .footer .confirmation-button:focus, .confirmation .confirmation-dialog .footer .confirmation-button:active {\n\t background-color: #bbb;\n}\n .confirmation .confirmation-dialog .footer .confirmation-button--confirm {\n\t background-color: #2f96b4;\n\t color: #fff;\n}\n .confirmation .confirmation-dialog .footer .confirmation-button--confirm:hover {\n\t background-color: #2e819b;\n}\n.ui-table .pagination-wrapper {\n    background-color: #f4f4f4;\n    border: 1px solid #c8c8c8;\n}\n.bordered .datatable-body-row {\n    border-top: 1px solid #eee;\n    margin-top: -1px;\n}\n.breadcrumb {\n    background-color: transparent;\n    padding: 0.27rem;\n}\n")),function(n){n.add({key:"Theme.ApplicationLayoutComponent",component:f}),n.add({key:"Theme.AccountLayoutComponent",component:m}),n.add({key:"Theme.EmptyLayoutComponent",component:v})}(e)}}var D=[f,m,v],R=function(){};R.decorators=[{type:e.NgModule,args:[{declarations:L(D,[k,h,C,S,y,w,I,b,g]),exports:L(D,[k,h,C,S,y,w,I]),imports:[t.CoreModule,i.ThemeSharedModule,l.NgbCollapseModule,l.NgbDropdownModule,s.NgxValidateCoreModule],entryComponents:L(D,[k,y,w])}]}];var M=function(){function n(){}return n.forRoot=function(){return{ngModule:n,providers:[A,P,{provide:s.VALIDATION_ERROR_TEMPLATE,useValue:k},{provide:s.VALIDATION_TARGET_SELECTOR,useValue:".form-group"},{provide:s.VALIDATION_INVALID_CLASSES,useValue:"is-invalid"}]}},n}();M.decorators=[{type:e.NgModule,args:[{exports:[R],imports:[R]}]}],n.AccountLayoutComponent=m,n.ApplicationLayoutComponent=f,n.AuthWrapperComponent=g,n.BASIC_THEME_NAV_ITEM_PROVIDERS=A,n.BASIC_THEME_STYLES_PROVIDERS=P,n.BaseThemeBasicModule=R,n.CurrentUserComponent=y,n.EmptyLayoutComponent=v,n.LAYOUTS=D,n.LanguagesComponent=w,n.LogoComponent=h,n.NavItemsComponent=C,n.PageAlertContainerComponent=I,n.RoutesComponent=S,n.TenantBoxComponent=b,n.ThemeBasicModule=M,n.ValidationErrorComponent=k,n.configureNavItems=O,n.configureStyles=E,n.ɵa=f,n.ɵb=u,n.ɵc=m,n.ɵd=v,n.ɵe=k,n.ɵf=h,n.ɵg=C,n.ɵh=S,n.ɵi=y,n.ɵj=w,n.ɵk=I,n.ɵl=b,n.ɵm=g,n.ɵn=A,n.ɵo=O,n.ɵp=P,n.ɵq=E,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.theme.basic.umd.min.js.map