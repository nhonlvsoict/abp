{"version":3,"file":"abp-ng.feature-management.js","sources":["../../../packages/feature-management/src/lib/proxy/feature-management/features.service.ts","../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.ts","../../../packages/feature-management/src/lib/directives/free-text-input.directive.ts","../../../packages/feature-management/src/lib/feature-management.module.ts","../../../packages/feature-management/src/abp-ng.feature-management.ts"],"names":[],"mappings":"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","sourcesContent":["import type { GetFeatureListResultDto, UpdateFeaturesDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeaturesService {\n  apiName = 'AbpFeatureManagement';\n\n  get = (providerName: string, providerKey: string) =>\n    this.restService.request<any, GetFeatureListResultDto>({\n      method: 'GET',\n      url: '/api/feature-management/features',\n      params: { providerName, providerKey },\n    },\n    { apiName: this.apiName });\n\n  update = (providerName: string, providerKey: string, input: UpdateFeaturesDto) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: '/api/feature-management/features',\n      params: { providerName, providerKey },\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import {\n  AbpApplicationConfigurationService,\n  ConfigStateService,\n  TrackByService,\n} from '@abp/ng.core';\nimport { LocaleDirection } from '@abp/ng.theme.shared';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { finalize, tap } from 'rxjs/operators';\nimport { FeatureManagement } from '../../models/feature-management';\nimport { FeaturesService } from '../../proxy/feature-management/features.service';\nimport {\n  FeatureDto,\n  FeatureGroupDto,\n  UpdateFeatureDto,\n} from '../../proxy/feature-management/models';\n\nenum ValueTypes {\n  ToggleStringValueType = 'ToggleStringValueType',\n  FreeTextStringValueType = 'FreeTextStringValueType',\n  SelectionStringValueType = 'SelectionStringValueType',\n}\n\n@Component({\n  selector: 'abp-feature-management',\n  templateUrl: './feature-management.component.html',\n  exportAs: 'abpFeatureManagement',\n})\nexport class FeatureManagementComponent\n  implements\n    FeatureManagement.FeatureManagementComponentInputs,\n    FeatureManagement.FeatureManagementComponentOutputs {\n  @Input()\n  providerKey: string;\n\n  @Input()\n  providerName: string;\n\n  selectedGroupDisplayName: string;\n\n  groups: Pick<FeatureGroupDto, 'name' | 'displayName'>[] = [];\n\n  features: {\n    [group: string]: Array<FeatureDto & { style?: { [key: string]: number }; initialValue: any }>;\n  };\n\n  valueTypes = ValueTypes;\n\n  protected _visible;\n\n  @Input()\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  set visible(value: boolean) {\n    if (this._visible === value) return;\n\n    this._visible = value;\n    this.visibleChange.emit(value);\n    if (value) this.openModal();\n  }\n\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\n\n  modalBusy = false;\n\n  constructor(\n    public readonly track: TrackByService,\n    protected service: FeaturesService,\n    protected store: Store,\n    protected configState: ConfigStateService,\n    protected appConfigService: AbpApplicationConfigurationService,\n  ) {}\n\n  openModal() {\n    if (!this.providerName) {\n      throw new Error('providerName is required.');\n    }\n\n    this.getFeatures();\n  }\n\n  getFeatures() {\n    this.service.get(this.providerName, this.providerKey).subscribe(res => {\n      if (!res.groups?.length) return;\n      this.groups = res.groups.map(({ name, displayName }) => ({ name, displayName }));\n      this.selectedGroupDisplayName = this.groups[0].displayName;\n      this.features = res.groups.reduce(\n        (acc, val) => ({\n          ...acc,\n          [val.name]: mapFeatures(val.features, document.body.dir as LocaleDirection),\n        }),\n        {},\n      );\n    });\n  }\n\n  save() {\n    if (this.modalBusy) return;\n\n    const changedFeatures = [] as UpdateFeatureDto[];\n\n    Object.keys(this.features).forEach(key => {\n      this.features[key].forEach(feature => {\n        if (feature.value !== feature.initialValue)\n          changedFeatures.push({ name: feature.name, value: `${feature.value}` });\n      });\n    });\n\n    if (!changedFeatures.length) {\n      this.visible = false;\n      return;\n    }\n\n    this.modalBusy = true;\n    this.service\n      .update(this.providerName, this.providerKey, { features: changedFeatures })\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.visible = false;\n\n        if (!this.providerKey) {\n          // to refresh host's features\n          this.appConfigService\n            .get()\n            .pipe(tap(res => this.configState.setState(res)))\n            .subscribe();\n        }\n      });\n  }\n\n  onCheckboxClick(val: boolean, feature: FeatureDto) {\n    if (val) {\n      this.checkToggleAncestors(feature);\n    } else {\n      this.uncheckToggleDescendants(feature);\n    }\n  }\n\n  private uncheckToggleDescendants(feature: FeatureDto) {\n    this.findAllDescendantsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\n      this.setFeatureValue(node, false),\n    );\n  }\n\n  private checkToggleAncestors(feature: FeatureDto) {\n    this.findAllAncestorsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\n      this.setFeatureValue(node, true),\n    );\n  }\n\n  private findAllAncestorsOfByType(feature: FeatureDto, type: ValueTypes) {\n    let parent = this.findParentByType(feature, type);\n    const ancestors = [];\n    while (parent) {\n      ancestors.push(parent);\n      parent = this.findParentByType(parent, type);\n    }\n    return ancestors;\n  }\n\n  private findAllDescendantsOfByType(feature: FeatureDto, type: ValueTypes) {\n    const descendants = [];\n    const queue = [feature];\n\n    while (queue.length) {\n      const node = queue.pop();\n      const newDescendants = this.findChildrenByType(node, type);\n      descendants.push(...newDescendants);\n      queue.push(...newDescendants);\n    }\n\n    return descendants;\n  }\n\n  private findParentByType(feature: FeatureDto, type: ValueTypes) {\n    return this.getCurrentGroup().find(\n      f => f.valueType.name === type && f.name === feature.parentName,\n    );\n  }\n\n  private findChildrenByType(feature: FeatureDto, type: ValueTypes) {\n    return this.getCurrentGroup().filter(\n      f => f.valueType.name === type && f.parentName === feature.name,\n    );\n  }\n\n  private getCurrentGroup() {\n    return this.features[this.selectedGroupDisplayName] ?? [];\n  }\n\n  private setFeatureValue(feature: FeatureDto, val: boolean) {\n    feature.value = val as any;\n  }\n}\n\nfunction mapFeatures(features: FeatureDto[], dir: LocaleDirection) {\n  const margin = `margin-${dir === 'rtl' ? 'right' : 'left'}.px`;\n\n  return features.map(feature => {\n    const value =\n      feature.valueType?.name === ValueTypes.ToggleStringValueType\n        ? (feature.value || '').toLowerCase() === 'true'\n        : feature.value;\n\n    return {\n      ...feature,\n      value,\n      initialValue: value,\n      style: { [margin]: feature.depth * 20 },\n    };\n  });\n}\n","import { Directive, Input, HostBinding } from '@angular/core';\n\n// TODO: improve this type\nexport interface FreeTextType {\n  valueType: {\n    validator: {\n      name: string;\n    };\n  };\n}\n\nexport const INPUT_TYPES = {\n  numeric: 'number',\n  default: 'text',\n};\n\n@Directive({\n  selector: 'input[abpFeatureManagementFreeText]',\n  exportAs: 'inputAbpFeatureManagementFreeText',\n})\nexport class FreeTextInputDirective {\n  _feature: FreeTextType;\n  @Input('abpFeatureManagementFreeText') set feature(val: FreeTextType) {\n    this._feature = val;\n    this.setInputType();\n  }\n\n  get feature() {\n    return this._feature;\n  }\n\n  @HostBinding('type') type: string;\n\n  private setInputType() {\n    const validatorType = this.feature?.valueType?.validator?.name.toLowerCase();\n    this.type = INPUT_TYPES[validatorType] ?? INPUT_TYPES.default;\n  }\n}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxsModule } from '@ngxs/store';\nimport { FeatureManagementComponent } from './components/feature-management/feature-management.component';\nimport { FreeTextInputDirective } from './directives/free-text-input.directive';\n\nconst exported = [FeatureManagementComponent, FreeTextInputDirective];\n\n@NgModule({\n  declarations: [...exported],\n  imports: [CoreModule, ThemeSharedModule, NgbNavModule, NgxsModule.forFeature([])],\n  exports: [...exported],\n})\nexport class FeatureManagementModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {FeatureManagementComponent as ɵa} from './lib/components/feature-management/feature-management.component';\nexport {FreeTextInputDirective as ɵc} from './lib/directives/free-text-input.directive';\nexport {FeaturesService as ɵb} from './lib/proxy/feature-management/features.service';"]}