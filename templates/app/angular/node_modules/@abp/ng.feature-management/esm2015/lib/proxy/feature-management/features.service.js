import { RestService } from '@abp/ng.core';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@abp/ng.core";
export class FeaturesService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'AbpFeatureManagement';
        this.get = (providerName, providerKey) => this.restService.request({
            method: 'GET',
            url: '/api/feature-management/features',
            params: { providerName, providerKey },
        }, { apiName: this.apiName });
        this.update = (providerName, providerKey, input) => this.restService.request({
            method: 'PUT',
            url: '/api/feature-management/features',
            params: { providerName, providerKey },
            body: input,
        }, { apiName: this.apiName });
    }
}
FeaturesService.ɵprov = i0.ɵɵdefineInjectable({ factory: function FeaturesService_Factory() { return new FeaturesService(i0.ɵɵinject(i1.RestService)); }, token: FeaturesService, providedIn: "root" });
FeaturesService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
FeaturesService.ctorParameters = () => [
    { type: RestService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmVhdHVyZXMuc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2ZlYXR1cmUtbWFuYWdlbWVudC9zcmMvbGliL3Byb3h5L2ZlYXR1cmUtbWFuYWdlbWVudC9mZWF0dXJlcy5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBSzNDLE1BQU0sT0FBTyxlQUFlO0lBb0IxQixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQW5CNUMsWUFBTyxHQUFHLHNCQUFzQixDQUFDO1FBRWpDLFFBQUcsR0FBRyxDQUFDLFlBQW9CLEVBQUUsV0FBbUIsRUFBRSxFQUFFLENBQ2xELElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUErQjtZQUNyRCxNQUFNLEVBQUUsS0FBSztZQUNiLEdBQUcsRUFBRSxrQ0FBa0M7WUFDdkMsTUFBTSxFQUFFLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRTtTQUN0QyxFQUNELEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBRTdCLFdBQU0sR0FBRyxDQUFDLFlBQW9CLEVBQUUsV0FBbUIsRUFBRSxLQUF3QixFQUFFLEVBQUUsQ0FDL0UsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQVk7WUFDbEMsTUFBTSxFQUFFLEtBQUs7WUFDYixHQUFHLEVBQUUsa0NBQWtDO1lBQ3ZDLE1BQU0sRUFBRSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUU7WUFDckMsSUFBSSxFQUFFLEtBQUs7U0FDWixFQUNELEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBRWtCLENBQUM7Ozs7WUF2QmpELFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7O1lBTFEsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIHsgR2V0RmVhdHVyZUxpc3RSZXN1bHREdG8sIFVwZGF0ZUZlYXR1cmVzRHRvIH0gZnJvbSAnLi9tb2RlbHMnO1xuaW1wb3J0IHsgUmVzdFNlcnZpY2UgfSBmcm9tICdAYWJwL25nLmNvcmUnO1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgRmVhdHVyZXNTZXJ2aWNlIHtcbiAgYXBpTmFtZSA9ICdBYnBGZWF0dXJlTWFuYWdlbWVudCc7XG5cbiAgZ2V0ID0gKHByb3ZpZGVyTmFtZTogc3RyaW5nLCBwcm92aWRlcktleTogc3RyaW5nKSA9PlxuICAgIHRoaXMucmVzdFNlcnZpY2UucmVxdWVzdDxhbnksIEdldEZlYXR1cmVMaXN0UmVzdWx0RHRvPih7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgdXJsOiAnL2FwaS9mZWF0dXJlLW1hbmFnZW1lbnQvZmVhdHVyZXMnLFxuICAgICAgcGFyYW1zOiB7IHByb3ZpZGVyTmFtZSwgcHJvdmlkZXJLZXkgfSxcbiAgICB9LFxuICAgIHsgYXBpTmFtZTogdGhpcy5hcGlOYW1lIH0pO1xuXG4gIHVwZGF0ZSA9IChwcm92aWRlck5hbWU6IHN0cmluZywgcHJvdmlkZXJLZXk6IHN0cmluZywgaW5wdXQ6IFVwZGF0ZUZlYXR1cmVzRHRvKSA9PlxuICAgIHRoaXMucmVzdFNlcnZpY2UucmVxdWVzdDxhbnksIHZvaWQ+KHtcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICB1cmw6ICcvYXBpL2ZlYXR1cmUtbWFuYWdlbWVudC9mZWF0dXJlcycsXG4gICAgICBwYXJhbXM6IHsgcHJvdmlkZXJOYW1lLCBwcm92aWRlcktleSB9LFxuICAgICAgYm9keTogaW5wdXQsXG4gICAgfSxcbiAgICB7IGFwaU5hbWU6IHRoaXMuYXBpTmFtZSB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlc3RTZXJ2aWNlOiBSZXN0U2VydmljZSkge31cbn1cbiJdfQ==