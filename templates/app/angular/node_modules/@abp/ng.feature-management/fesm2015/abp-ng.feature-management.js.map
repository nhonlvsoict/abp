{"version":3,"file":"abp-ng.feature-management.js","sources":["../../../packages/feature-management/src/lib/proxy/feature-management/features.service.ts","../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.ts","../../../packages/feature-management/src/lib/directives/free-text-input.directive.ts","../../../packages/feature-management/src/lib/feature-management.module.ts","../../../packages/feature-management/src/abp-ng.feature-management.ts"],"sourcesContent":["import type { GetFeatureListResultDto, UpdateFeaturesDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FeaturesService {\n  apiName = 'AbpFeatureManagement';\n\n  get = (providerName: string, providerKey: string) =>\n    this.restService.request<any, GetFeatureListResultDto>({\n      method: 'GET',\n      url: '/api/feature-management/features',\n      params: { providerName, providerKey },\n    },\n    { apiName: this.apiName });\n\n  update = (providerName: string, providerKey: string, input: UpdateFeaturesDto) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: '/api/feature-management/features',\n      params: { providerName, providerKey },\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import {\n  AbpApplicationConfigurationService,\n  ConfigStateService,\n  TrackByService,\n} from '@abp/ng.core';\nimport { LocaleDirection } from '@abp/ng.theme.shared';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { finalize, tap } from 'rxjs/operators';\nimport { FeatureManagement } from '../../models/feature-management';\nimport { FeaturesService } from '../../proxy/feature-management/features.service';\nimport {\n  FeatureDto,\n  FeatureGroupDto,\n  UpdateFeatureDto,\n} from '../../proxy/feature-management/models';\n\nenum ValueTypes {\n  ToggleStringValueType = 'ToggleStringValueType',\n  FreeTextStringValueType = 'FreeTextStringValueType',\n  SelectionStringValueType = 'SelectionStringValueType',\n}\n\n@Component({\n  selector: 'abp-feature-management',\n  templateUrl: './feature-management.component.html',\n  exportAs: 'abpFeatureManagement',\n})\nexport class FeatureManagementComponent\n  implements\n    FeatureManagement.FeatureManagementComponentInputs,\n    FeatureManagement.FeatureManagementComponentOutputs {\n  @Input()\n  providerKey: string;\n\n  @Input()\n  providerName: string;\n\n  selectedGroupDisplayName: string;\n\n  groups: Pick<FeatureGroupDto, 'name' | 'displayName'>[] = [];\n\n  features: {\n    [group: string]: Array<FeatureDto & { style?: { [key: string]: number }; initialValue: any }>;\n  };\n\n  valueTypes = ValueTypes;\n\n  protected _visible;\n\n  @Input()\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  set visible(value: boolean) {\n    if (this._visible === value) return;\n\n    this._visible = value;\n    this.visibleChange.emit(value);\n    if (value) this.openModal();\n  }\n\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\n\n  modalBusy = false;\n\n  constructor(\n    public readonly track: TrackByService,\n    protected service: FeaturesService,\n    protected store: Store,\n    protected configState: ConfigStateService,\n    protected appConfigService: AbpApplicationConfigurationService,\n  ) {}\n\n  openModal() {\n    if (!this.providerName) {\n      throw new Error('providerName is required.');\n    }\n\n    this.getFeatures();\n  }\n\n  getFeatures() {\n    this.service.get(this.providerName, this.providerKey).subscribe(res => {\n      if (!res.groups?.length) return;\n      this.groups = res.groups.map(({ name, displayName }) => ({ name, displayName }));\n      this.selectedGroupDisplayName = this.groups[0].displayName;\n      this.features = res.groups.reduce(\n        (acc, val) => ({\n          ...acc,\n          [val.name]: mapFeatures(val.features, document.body.dir as LocaleDirection),\n        }),\n        {},\n      );\n    });\n  }\n\n  save() {\n    if (this.modalBusy) return;\n\n    const changedFeatures = [] as UpdateFeatureDto[];\n\n    Object.keys(this.features).forEach(key => {\n      this.features[key].forEach(feature => {\n        if (feature.value !== feature.initialValue)\n          changedFeatures.push({ name: feature.name, value: `${feature.value}` });\n      });\n    });\n\n    if (!changedFeatures.length) {\n      this.visible = false;\n      return;\n    }\n\n    this.modalBusy = true;\n    this.service\n      .update(this.providerName, this.providerKey, { features: changedFeatures })\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.visible = false;\n\n        if (!this.providerKey) {\n          // to refresh host's features\n          this.appConfigService\n            .get()\n            .pipe(tap(res => this.configState.setState(res)))\n            .subscribe();\n        }\n      });\n  }\n\n  onCheckboxClick(val: boolean, feature: FeatureDto) {\n    if (val) {\n      this.checkToggleAncestors(feature);\n    } else {\n      this.uncheckToggleDescendants(feature);\n    }\n  }\n\n  private uncheckToggleDescendants(feature: FeatureDto) {\n    this.findAllDescendantsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\n      this.setFeatureValue(node, false),\n    );\n  }\n\n  private checkToggleAncestors(feature: FeatureDto) {\n    this.findAllAncestorsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\n      this.setFeatureValue(node, true),\n    );\n  }\n\n  private findAllAncestorsOfByType(feature: FeatureDto, type: ValueTypes) {\n    let parent = this.findParentByType(feature, type);\n    const ancestors = [];\n    while (parent) {\n      ancestors.push(parent);\n      parent = this.findParentByType(parent, type);\n    }\n    return ancestors;\n  }\n\n  private findAllDescendantsOfByType(feature: FeatureDto, type: ValueTypes) {\n    const descendants = [];\n    const queue = [feature];\n\n    while (queue.length) {\n      const node = queue.pop();\n      const newDescendants = this.findChildrenByType(node, type);\n      descendants.push(...newDescendants);\n      queue.push(...newDescendants);\n    }\n\n    return descendants;\n  }\n\n  private findParentByType(feature: FeatureDto, type: ValueTypes) {\n    return this.getCurrentGroup().find(\n      f => f.valueType.name === type && f.name === feature.parentName,\n    );\n  }\n\n  private findChildrenByType(feature: FeatureDto, type: ValueTypes) {\n    return this.getCurrentGroup().filter(\n      f => f.valueType.name === type && f.parentName === feature.name,\n    );\n  }\n\n  private getCurrentGroup() {\n    return this.features[this.selectedGroupDisplayName] ?? [];\n  }\n\n  private setFeatureValue(feature: FeatureDto, val: boolean) {\n    feature.value = val as any;\n  }\n}\n\nfunction mapFeatures(features: FeatureDto[], dir: LocaleDirection) {\n  const margin = `margin-${dir === 'rtl' ? 'right' : 'left'}.px`;\n\n  return features.map(feature => {\n    const value =\n      feature.valueType?.name === ValueTypes.ToggleStringValueType\n        ? (feature.value || '').toLowerCase() === 'true'\n        : feature.value;\n\n    return {\n      ...feature,\n      value,\n      initialValue: value,\n      style: { [margin]: feature.depth * 20 },\n    };\n  });\n}\n","import { Directive, Input, HostBinding } from '@angular/core';\n\n// TODO: improve this type\nexport interface FreeTextType {\n  valueType: {\n    validator: {\n      name: string;\n    };\n  };\n}\n\nexport const INPUT_TYPES = {\n  numeric: 'number',\n  default: 'text',\n};\n\n@Directive({\n  selector: 'input[abpFeatureManagementFreeText]',\n  exportAs: 'inputAbpFeatureManagementFreeText',\n})\nexport class FreeTextInputDirective {\n  _feature: FreeTextType;\n  @Input('abpFeatureManagementFreeText') set feature(val: FreeTextType) {\n    this._feature = val;\n    this.setInputType();\n  }\n\n  get feature() {\n    return this._feature;\n  }\n\n  @HostBinding('type') type: string;\n\n  private setInputType() {\n    const validatorType = this.feature?.valueType?.validator?.name.toLowerCase();\n    this.type = INPUT_TYPES[validatorType] ?? INPUT_TYPES.default;\n  }\n}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxsModule } from '@ngxs/store';\nimport { FeatureManagementComponent } from './components/feature-management/feature-management.component';\nimport { FreeTextInputDirective } from './directives/free-text-input.directive';\n\nconst exported = [FeatureManagementComponent, FreeTextInputDirective];\n\n@NgModule({\n  declarations: [...exported],\n  imports: [CoreModule, ThemeSharedModule, NgbNavModule, NgxsModule.forFeature([])],\n  exports: [...exported],\n})\nexport class FeatureManagementModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {FeatureManagementComponent as ɵa} from './lib/components/feature-management/feature-management.component';\nexport {FreeTextInputDirective as ɵc} from './lib/directives/free-text-input.directive';\nexport {FeaturesService as ɵb} from './lib/proxy/feature-management/features.service';"],"names":[],"mappings":"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"}