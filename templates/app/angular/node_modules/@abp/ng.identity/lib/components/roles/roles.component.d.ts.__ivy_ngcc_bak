import { ListService, PagedAndSortedResultRequestDto } from '@abp/ng.core';
import { ePermissionManagementComponents } from '@abp/ng.permission-management';
import { ConfirmationService } from '@abp/ng.theme.shared';
import { Injector, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { Store } from '@ngxs/store';
import { Observable } from 'rxjs';
import { IdentityRoleDto } from '../../proxy/identity/models';
export declare class RolesComponent implements OnInit {
    readonly list: ListService<PagedAndSortedResultRequestDto>;
    protected confirmationService: ConfirmationService;
    protected store: Store;
    protected injector: Injector;
    data$: Observable<IdentityRoleDto[]>;
    totalCount$: Observable<number>;
    form: FormGroup;
    selected: IdentityRoleDto;
    isModalVisible: boolean;
    visiblePermissions: boolean;
    providerKey: string;
    modalBusy: boolean;
    permissionManagementKey: ePermissionManagementComponents;
    onVisiblePermissionChange: (event: any) => void;
    constructor(list: ListService<PagedAndSortedResultRequestDto>, confirmationService: ConfirmationService, store: Store, injector: Injector);
    ngOnInit(): void;
    buildForm(): void;
    openModal(): void;
    add(): void;
    edit(id: string): void;
    save(): void;
    delete(id: string, name: string): void;
    private hookToQuery;
    openPermissionsModal(providerKey: string): void;
    sort(data: any): void;
}
