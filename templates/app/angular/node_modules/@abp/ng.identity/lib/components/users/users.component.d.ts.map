{"version":3,"file":"users.component.d.ts","sources":["users.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ListService } from '@abp/ng.core';\r\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\r\nimport { ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { Injector, OnInit, TemplateRef, TrackByFunction } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { IdentityUserService } from '../../proxy/identity/identity-user.service';\r\nimport { GetIdentityUsersInput, IdentityRoleDto, IdentityUserDto } from '../../proxy/identity/models';\r\nexport declare class UsersComponent implements OnInit {\r\n    readonly list: ListService<GetIdentityUsersInput>;\r\n    protected confirmationService: ConfirmationService;\r\n    protected userService: IdentityUserService;\r\n    protected fb: FormBuilder;\r\n    protected store: Store;\r\n    protected injector: Injector;\r\n    data$: Observable<IdentityUserDto[]>;\r\n    totalCount$: Observable<number>;\r\n    modalContent: TemplateRef<any>;\r\n    form: FormGroup;\r\n    selected: IdentityUserDto;\r\n    selectedUserRoles: IdentityRoleDto[];\r\n    roles: IdentityRoleDto[];\r\n    visiblePermissions: boolean;\r\n    providerKey: string;\r\n    isModalVisible: boolean;\r\n    modalBusy: boolean;\r\n    permissionManagementKey: ePermissionManagementComponents;\r\n    trackByFn: TrackByFunction<AbstractControl>;\r\n    onVisiblePermissionChange: (event: any) => void;\r\n    get roleGroups(): FormGroup[];\r\n    constructor(list: ListService<GetIdentityUsersInput>, confirmationService: ConfirmationService, userService: IdentityUserService, fb: FormBuilder, store: Store, injector: Injector);\r\n    ngOnInit(): void;\r\n    buildForm(): void;\r\n    openModal(): void;\r\n    add(): void;\r\n    edit(id: string): void;\r\n    save(): void;\r\n    delete(id: string, userName: string): void;\r\n    sort(data: any): void;\r\n    private hookToQuery;\r\n    openPermissionsModal(providerKey: string): void;\r\n}\r\n"]}