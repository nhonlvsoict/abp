{"version":3,"sources":["../../../packages/identity/src/lib/actions/identity.actions.ts","../../../node_modules/tslib/tslib.es6.js","../../../packages/identity/src/lib/proxy/identity/identity-role.service.ts","../../../packages/identity/src/lib/proxy/identity/identity-user.service.ts","../../../packages/identity/src/lib/states/identity.state.ts","../../../packages/identity/src/lib/components/roles/roles.component.ts","../../../packages/identity/src/lib/components/users/users.component.ts","../../../packages/identity/src/lib/defaults/default-roles-entity-actions.ts","../../../packages/identity/src/lib/defaults/default-roles-entity-props.ts","../../../packages/identity/src/lib/defaults/default-roles-form-props.ts","../../../packages/identity/src/lib/defaults/default-roles-toolbar-actions.ts","../../../packages/identity/src/lib/defaults/default-users-entity-actions.ts","../../../packages/identity/src/lib/defaults/default-users-entity-props.ts","../../../packages/identity/src/lib/defaults/default-users-form-props.ts","../../../packages/identity/src/lib/defaults/default-users-toolbar-actions.ts","../../../packages/identity/src/lib/tokens/extensions.token.ts","../../../packages/identity/src/lib/guards/extensions.guard.ts","../../../packages/identity/src/lib/identity-routing.module.ts","../../../packages/identity/src/lib/identity.module.ts","../../../packages/identity/src/lib/proxy/identity/identity-user-lookup.service.ts","../../../packages/identity/src/lib/proxy/identity/profile.service.ts","../../../packages/identity/src/lib/services/identity-state.service.ts"],"names":["payload","this","GetRoles","type","GetRoleById","DeleteRole","CreateRole","UpdateRole","GetUsers","GetUserById","DeleteUser","CreateUser","UpdateUser","GetUserRoles","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","create","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","restService","_this","apiName","input","request","method","url","body","delete","id","get","getAllList","getList","params","sorting","skipCount","maxResultCount","update","Injectable","args","providedIn","RestService","findByEmail","email","findByUsername","username","getAssignableRoles","filter","getRoles","updateRoles","IdentityState","identityUserService","identityRoleService","_a","roles","items","getRolesTotalCount","totalCount","getUsers","users","getUsersTotalCount","prototype","_b","patchState","pipe","tap","getRole","selectedRole","deleteRole","_","addRole","updateRole","getState","assign","getUser","selectedUser","deleteUser","addUser","updateUser","getUserRoles","pluck","selectedUserRoles","IdentityUserService","IdentityRoleService","Action","Selector","State","name","defaults","RolesComponent","list","confirmationService","store","injector","visiblePermissions","modalBusy","permissionManagementKey","onVisiblePermissionChange","event","ngOnInit","hookToQuery","buildForm","data","FormPropData","selected","form","generateFormFromProps","openModal","isModalVisible","add","edit","dispatch","subscribe","save","valid","finalize","warn","messageLocalizationParams","status","Confirmation","Status","confirm","query","openPermissionsModal","providerKey","setTimeout","sort","sorts","prop","dir","sortKey","sortOrder","Component","selector","template","providers","ListService","provide","EXTENSIONS_IDENTIFIER","useValue","ConfirmationService","Store","Injector","Select","UsersComponent","userService","fb","trackByFn","index","item","keys","snq","controls","addControl","array","map","role","group","find","userRole","isDefault","switchMap","take","state","roleNames","mappedRoleNames","userName","FormBuilder","ViewChild","static","DEFAULT_ROLES_ENTITY_ACTIONS","EntityAction","createMany","text","action","getInjected","record","permission","visible","isStatic","DEFAULT_ROLES_ENTITY_PROPS","EntityProp","displayName","sortable","valueResolver","l10n","LocalizationService","t","instant","bind","isPublic","of","DEFAULT_ROLES_CREATE_FORM_PROPS","FormProp","disabled","validators","Validators","required","defaultValue","DEFAULT_ROLES_EDIT_FORM_PROPS","DEFAULT_ROLES_TOOLBAR_ACTIONS","ToolbarAction","icon","DEFAULT_USERS_ENTITY_ACTIONS","DEFAULT_USERS_ENTITY_PROPS","columnWidth","DEFAULT_USERS_CREATE_FORM_PROPS","maxLength","autocomplete","getPasswordValidators","DEFAULT_USERS_EDIT_FORM_PROPS","DEFAULT_USERS_TOOLBAR_ACTIONS","DEFAULT_IDENTITY_ENTITY_ACTIONS","DEFAULT_IDENTITY_TOOLBAR_ACTIONS","DEFAULT_IDENTITY_ENTITY_PROPS","_c","DEFAULT_IDENTITY_CREATE_FORM_PROPS","_d","DEFAULT_IDENTITY_EDIT_FORM_PROPS","_e","IDENTITY_ENTITY_ACTION_CONTRIBUTORS","InjectionToken","IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS","IDENTITY_ENTITY_PROP_CONTRIBUTORS","IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS","IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS","IdentityExtensionsGuard","canActivate","extensions","ExtensionsService","actionContributors","toolbarContributors","propContributors","createFormContributors","editFormContributors","configState","ConfigStateService","getObjectExtensionEntitiesFromStore","entities","Role","User","mapEntitiesToContributors","objectExtensionContributors","mergeWithDefaultActions","entityActions","toolbarActions","mergeWithDefaultProps","entityProps","createFormProps","createForm","editFormProps","editForm","mapTo","requiredPolicy","replaceableComponent","defaultComponent","ɵ1","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","AuthGuard","PermissionGuard","children","ReplaceableRouteContainerComponent","ɵ0","NgModule","imports","RouterModule","forChild","exports","IdentityModule","options","ngModule","entityActionContributors","toolbarActionContributors","entityPropContributors","createFormPropContributors","editFormPropContributors","forLazy","LazyModuleFactory","declarations","NgxsModule","forFeature","CoreModule","IdentityRoutingModule","NgbNavModule","ThemeSharedModule","UiExtensionsModule","NgbDropdownModule","PermissionManagementModule","NgxValidateCoreModule","findById","findByUserName","getCount","search","changePassword","IdentityStateService","selectSnapshot","dispatchGetRoles","_i","apply","dispatchGetRoleById","dispatchDeleteRole","dispatchCreateRole","dispatchUpdateRole","dispatchGetUsers","dispatchGetUserById","dispatchDeleteUser","dispatchCreateUser","dispatchUpdateUser","dispatchGetUserRoles"],"mappings":"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","sourcesContent":["import { Identity } from '../models/identity';\nimport { ABP, PagedAndSortedResultRequestDto } from '@abp/ng.core';\nimport {\n  GetIdentityUsersInput,\n  IdentityRoleCreateDto,\n  IdentityRoleUpdateDto,\n  IdentityUserCreateDto,\n  IdentityUserUpdateDto,\n} from '../proxy/identity/models';\n\nexport class GetRoles {\n  static readonly type = '[Identity] Get Roles';\n  constructor(public payload?: PagedAndSortedResultRequestDto) {}\n}\n\nexport class GetRoleById {\n  static readonly type = '[Identity] Get Role By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteRole {\n  static readonly type = '[Identity] Delete Role';\n  constructor(public payload: string) {}\n}\n\nexport class CreateRole {\n  static readonly type = '[Identity] Create Role';\n  constructor(public payload: IdentityRoleCreateDto) {}\n}\n\nexport class UpdateRole {\n  static readonly type = '[Identity] Update Role';\n  constructor(public payload: IdentityRoleUpdateDto & { id: string }) {}\n}\n\nexport class GetUsers {\n  static readonly type = '[Identity] Get Users';\n  constructor(public payload?: GetIdentityUsersInput) {}\n}\n\nexport class GetUserById {\n  static readonly type = '[Identity] Get User By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteUser {\n  static readonly type = '[Identity] Delete User';\n  constructor(public payload: string) {}\n}\n\nexport class CreateUser {\n  static readonly type = '[Identity] Create User';\n  constructor(public payload: IdentityUserCreateDto) {}\n}\n\nexport class UpdateUser {\n  static readonly type = '[Identity] Update User';\n  constructor(public payload: IdentityUserUpdateDto & { id: string }) {}\n}\n\nexport class GetUserRoles {\n  static readonly type = '[Identity] Get User Roles';\n  constructor(public payload: string) {}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import type { ListResultDto, PagedAndSortedResultRequestDto, PagedResultDto } from '@abp/ng.core';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport type { IdentityRoleCreateDto, IdentityRoleDto, IdentityRoleUpdateDto } from './models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityRoleService {\n  apiName = 'AbpIdentity';\n\n  create = (input: IdentityRoleCreateDto) =>\n    this.restService.request<any, IdentityRoleDto>({\n      method: 'POST',\n      url: '/api/identity/roles',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  delete = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/identity/roles/${id}`,\n    },\n    { apiName: this.apiName });\n\n  get = (id: string) =>\n    this.restService.request<any, IdentityRoleDto>({\n      method: 'GET',\n      url: `/api/identity/roles/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getAllList = () =>\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: '/api/identity/roles/all',\n    },\n    { apiName: this.apiName });\n\n  getList = (input: PagedAndSortedResultRequestDto) =>\n    this.restService.request<any, PagedResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: '/api/identity/roles',\n      params: { sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  update = (id: string, input: IdentityRoleUpdateDto) =>\n    this.restService.request<any, IdentityRoleDto>({\n      method: 'PUT',\n      url: `/api/identity/roles/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import type {\n  GetIdentityUsersInput,\n  IdentityRoleDto,\n  IdentityUserCreateDto,\n  IdentityUserDto,\n  IdentityUserUpdateDto,\n  IdentityUserUpdateRolesDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { ListResultDto, PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityUserService {\n  apiName = 'AbpIdentity';\n\n  create = (input: IdentityUserCreateDto) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'POST',\n      url: '/api/identity/users',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  delete = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/identity/users/${id}`,\n    },\n    { apiName: this.apiName });\n\n  findByEmail = (email: string) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'GET',\n      url: `/api/identity/users/by-email/${email}`,\n    },\n    { apiName: this.apiName });\n\n  findByUsername = (username: string) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'GET',\n      url: '/api/identity/users/by-username/{userName}',\n    },\n    { apiName: this.apiName });\n\n  get = (id: string) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'GET',\n      url: `/api/identity/users/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getAssignableRoles = () =>\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: '/api/identity/users/assignable-roles',\n    },\n    { apiName: this.apiName });\n\n  getList = (input: GetIdentityUsersInput) =>\n    this.restService.request<any, PagedResultDto<IdentityUserDto>>({\n      method: 'GET',\n      url: '/api/identity/users',\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  getRoles = (id: string) =>\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: `/api/identity/users/${id}/roles`,\n    },\n    { apiName: this.apiName });\n\n  update = (id: string, input: IdentityUserUpdateDto) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'PUT',\n      url: `/api/identity/users/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  updateRoles = (id: string, input: IdentityUserUpdateRolesDto) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: `/api/identity/users/${id}/roles`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { pluck, tap } from 'rxjs/operators';\nimport {\n  CreateRole,\n  CreateUser,\n  DeleteRole,\n  DeleteUser,\n  GetRoleById,\n  GetRoles,\n  GetUserById,\n  GetUserRoles,\n  GetUsers,\n  UpdateRole,\n  UpdateUser,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityRoleService } from '../proxy/identity/identity-role.service';\nimport { IdentityUserService } from '../proxy/identity/identity-user.service';\nimport { IdentityRoleDto, IdentityUserDto } from '../proxy/identity/models';\n\n@State<Identity.State>({\n  name: 'IdentityState',\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\n})\n@Injectable()\nexport class IdentityState {\n  @Selector()\n  static getRoles({ roles }: Identity.State): IdentityRoleDto[] {\n    return roles.items || [];\n  }\n\n  @Selector()\n  static getRolesTotalCount({ roles }: Identity.State): number {\n    return roles.totalCount || 0;\n  }\n\n  @Selector()\n  static getUsers({ users }: Identity.State): IdentityUserDto[] {\n    return users.items || [];\n  }\n\n  @Selector()\n  static getUsersTotalCount({ users }: Identity.State): number {\n    return users.totalCount || 0;\n  }\n\n  constructor(\n    private identityUserService: IdentityUserService,\n    private identityRoleService: IdentityRoleService,\n  ) {}\n\n  @Action(GetRoles)\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\n    return this.identityRoleService.getList(payload).pipe(\n      tap(roles =>\n        patchState({\n          roles,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetRoleById)\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\n    return this.identityRoleService.get(payload).pipe(\n      tap(selectedRole =>\n        patchState({\n          selectedRole,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteRole)\n  deleteRole(_, { payload }: GetRoleById) {\n    return this.identityRoleService.delete(payload);\n  }\n\n  @Action(CreateRole)\n  addRole(_, { payload }: CreateRole) {\n    return this.identityRoleService.create(payload);\n  }\n\n  @Action(UpdateRole)\n  updateRole({ getState }: StateContext<Identity.State>, { payload }: UpdateRole) {\n    return this.identityRoleService.update(payload.id, { ...getState().selectedRole, ...payload });\n  }\n\n  @Action(GetUsers)\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\n    return this.identityUserService.getList(payload).pipe(\n      tap(users =>\n        patchState({\n          users,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetUserById)\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\n    return this.identityUserService.get(payload).pipe(\n      tap(selectedUser =>\n        patchState({\n          selectedUser,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteUser)\n  deleteUser(_, { payload }: GetUserById) {\n    return this.identityUserService.delete(payload);\n  }\n\n  @Action(CreateUser)\n  addUser(_, { payload }: CreateUser) {\n    return this.identityUserService.create(payload);\n  }\n\n  @Action(UpdateUser)\n  updateUser({ getState }: StateContext<Identity.State>, { payload }: UpdateUser) {\n    return this.identityUserService.update(payload.id, { ...getState().selectedUser, ...payload });\n  }\n\n  @Action(GetUserRoles)\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\n    return this.identityUserService.getRoles(payload).pipe(\n      pluck('items'),\n      tap(selectedUserRoles =>\n        patchState({\n          selectedUserRoles,\n        }),\n      ),\n    );\n  }\n}\n","import { ListService, PagedAndSortedResultRequestDto } from '@abp/ng.core';\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\nimport {\n  EXTENSIONS_IDENTIFIER,\n  FormPropData,\n  generateFormFromProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck } from 'rxjs/operators';\nimport {\n  CreateRole,\n  DeleteRole,\n  GetRoleById,\n  GetRoles,\n  UpdateRole,\n} from '../../actions/identity.actions';\nimport { eIdentityComponents } from '../../enums/components';\nimport { IdentityRoleDto } from '../../proxy/identity/models';\nimport { IdentityState } from '../../states/identity.state';\n\n@Component({\n  selector: 'abp-roles',\n  templateUrl: './roles.component.html',\n  providers: [\n    ListService,\n    {\n      provide: EXTENSIONS_IDENTIFIER,\n      useValue: eIdentityComponents.Roles,\n    },\n  ],\n})\nexport class RolesComponent implements OnInit {\n  @Select(IdentityState.getRoles)\n  data$: Observable<IdentityRoleDto[]>;\n\n  @Select(IdentityState.getRolesTotalCount)\n  totalCount$: Observable<number>;\n\n  form: FormGroup;\n\n  selected: IdentityRoleDto;\n\n  isModalVisible: boolean;\n\n  visiblePermissions = false;\n\n  providerKey: string;\n\n  modalBusy = false;\n\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\n\n  onVisiblePermissionChange = event => {\n    this.visiblePermissions = event;\n  };\n\n  constructor(\n    public readonly list: ListService<PagedAndSortedResultRequestDto>,\n    protected confirmationService: ConfirmationService,\n    protected store: Store,\n    protected injector: Injector,\n  ) {}\n\n  ngOnInit() {\n    this.hookToQuery();\n  }\n\n  buildForm() {\n    const data = new FormPropData(this.injector, this.selected);\n    this.form = generateFormFromProps(data);\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  add() {\n    this.selected = {} as IdentityRoleDto;\n    this.openModal();\n  }\n\n  edit(id: string) {\n    this.store\n      .dispatch(new GetRoleById(id))\n      .pipe(pluck('IdentityState', 'selectedRole'))\n      .subscribe(selectedRole => {\n        this.selected = selectedRole;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateRole({ ...this.selected, ...this.form.value, id: this.selected.id })\n          : new CreateRole(this.form.value),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.list.get();\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Confirmation.Status) => {\n        if (status === Confirmation.Status.confirm) {\n          this.store.dispatch(new DeleteRole(id)).subscribe(() => this.list.get());\n        }\n      });\n  }\n\n  private hookToQuery() {\n    this.list.hookToQuery(query => this.store.dispatch(new GetRoles(query))).subscribe();\n  }\n\n  openPermissionsModal(providerKey: string) {\n    this.providerKey = providerKey;\n    setTimeout(() => {\n      this.visiblePermissions = true;\n    }, 0);\n  }\n\n  sort(data) {\n    const { prop, dir } = data.sorts[0];\n    this.list.sortKey = prop;\n    this.list.sortOrder = dir;\n  }\n}\n","import { ListService } from '@abp/ng.core';\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\nimport {\n  EXTENSIONS_IDENTIFIER,\n  FormPropData,\n  generateFormFromProps,\n} from '@abp/ng.theme.shared/extensions';\nimport {\n  Component,\n  Injector,\n  OnInit,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport snq from 'snq';\nimport {\n  CreateUser,\n  DeleteUser,\n  GetUserById,\n  GetUserRoles,\n  GetUsers,\n  UpdateUser,\n} from '../../actions/identity.actions';\nimport { eIdentityComponents } from '../../enums/components';\nimport { Identity } from '../../models/identity';\nimport { IdentityUserService } from '../../proxy/identity/identity-user.service';\nimport {\n  GetIdentityUsersInput,\n  IdentityRoleDto,\n  IdentityUserDto,\n} from '../../proxy/identity/models';\nimport { IdentityState } from '../../states/identity.state';\n\n@Component({\n  selector: 'abp-users',\n  templateUrl: './users.component.html',\n  providers: [\n    ListService,\n    {\n      provide: EXTENSIONS_IDENTIFIER,\n      useValue: eIdentityComponents.Users,\n    },\n  ],\n})\nexport class UsersComponent implements OnInit {\n  @Select(IdentityState.getUsers)\n  data$: Observable<IdentityUserDto[]>;\n\n  @Select(IdentityState.getUsersTotalCount)\n  totalCount$: Observable<number>;\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  form: FormGroup;\n\n  selected: IdentityUserDto;\n\n  selectedUserRoles: IdentityRoleDto[];\n\n  roles: IdentityRoleDto[];\n\n  visiblePermissions = false;\n\n  providerKey: string;\n\n  isModalVisible: boolean;\n\n  modalBusy = false;\n\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\n\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\n\n  onVisiblePermissionChange = event => {\n    this.visiblePermissions = event;\n  };\n\n  get roleGroups(): FormGroup[] {\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\n  }\n\n  constructor(\n    public readonly list: ListService<GetIdentityUsersInput>,\n    protected confirmationService: ConfirmationService,\n    protected userService: IdentityUserService,\n    protected fb: FormBuilder,\n    protected store: Store,\n    protected injector: Injector,\n  ) {}\n\n  ngOnInit() {\n    this.hookToQuery();\n  }\n\n  buildForm() {\n    const data = new FormPropData(this.injector, this.selected);\n    this.form = generateFormFromProps(data);\n\n    this.userService.getAssignableRoles().subscribe(({ items }) => {\n      this.roles = items;\n      this.form.addControl(\n        'roleNames',\n        this.fb.array(\n          this.roles.map(role =>\n            this.fb.group({\n              [role.name]: [\n                this.selected.id\n                  ? !!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))\n                  : role.isDefault,\n              ],\n            }),\n          ),\n        ),\n      );\n    });\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  add() {\n    this.selected = {} as IdentityUserDto;\n    this.selectedUserRoles = [] as IdentityRoleDto[];\n    this.openModal();\n  }\n\n  edit(id: string) {\n    this.store\n      .dispatch(new GetUserById(id))\n      .pipe(\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\n        pluck('IdentityState'),\n        take(1),\n      )\n      .subscribe((state: Identity.State) => {\n        this.selected = state.selectedUser;\n        this.selectedUserRoles = state.selectedUserRoles || [];\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid || this.modalBusy) return;\n    this.modalBusy = true;\n\n    const { roleNames } = this.form.value;\n    const mappedRoleNames = snq(\n      () =>\n        roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\n      [],\n    );\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateUser({\n              ...this.selected,\n              ...this.form.value,\n              id: this.selected.id,\n              roleNames: mappedRoleNames,\n            })\n          : new CreateUser({\n              ...this.form.value,\n              roleNames: mappedRoleNames,\n            }),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.list.get();\n      });\n  }\n\n  delete(id: string, userName: string) {\n    this.confirmationService\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [userName],\n      })\n      .subscribe((status: Confirmation.Status) => {\n        if (status === Confirmation.Status.confirm) {\n          this.store.dispatch(new DeleteUser(id)).subscribe(() => this.list.get());\n        }\n      });\n  }\n\n  sort(data) {\n    const { prop, dir } = data.sorts[0];\n    this.list.sortKey = prop;\n    this.list.sortOrder = dir;\n  }\n\n  private hookToQuery() {\n    this.list.hookToQuery(query => this.store.dispatch(new GetUsers(query))).subscribe();\n  }\n\n  openPermissionsModal(providerKey: string) {\n    this.providerKey = providerKey;\n    setTimeout(() => {\n      this.visiblePermissions = true;\n    }, 0);\n  }\n}\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\nimport { RolesComponent } from '../components/roles/roles.component';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_ENTITY_ACTIONS = EntityAction.createMany<IdentityRoleDto>([\n  {\n    text: 'AbpIdentity::Edit',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.edit(data.record.id);\n    },\n    permission: 'AbpIdentity.Roles.Update',\n  },\n  {\n    text: 'AbpIdentity::Permissions',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.openPermissionsModal(data.record.name);\n    },\n    permission: 'AbpIdentity.Roles.ManagePermissions',\n  },\n  {\n    text: 'AbpIdentity::Delete',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.delete(data.record.id, data.record.name);\n    },\n    permission: 'AbpIdentity.Roles.Delete',\n    visible: data => !data.record.isStatic,\n  },\n]);\n","import { LocalizationService } from '@abp/ng.core';\nimport { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\nimport { of } from 'rxjs';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_ENTITY_PROPS = EntityProp.createMany<IdentityRoleDto>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpIdentity::RoleName',\n    sortable: true,\n    valueResolver: data => {\n      const l10n = data.getInjected(LocalizationService);\n      const t = l10n.instant.bind(l10n);\n      const { isDefault, isPublic, name } = data.record;\n\n      return of(\n        name +\n          (isDefault\n            ? `<span class=\"badge badge-pill badge-success ml-1\">${t(\n                'AbpIdentity::DisplayName:IsDefault',\n              )}</span>`\n            : '') +\n          (isPublic\n            ? `<span class=\"badge badge-pill badge-info ml-1\">${t(\n                'AbpIdentity::DisplayName:IsPublic',\n              )}</span>`\n            : ''),\n      );\n    },\n  },\n]);\n","import { ePropType, FormProp, PropData } from '@abp/ng.theme.shared/extensions';\nimport { Validators } from '@angular/forms';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_CREATE_FORM_PROPS = FormProp.createMany<IdentityRoleDto>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpIdentity::RoleName',\n    id: 'role-name',\n    disabled: (data: PropData<IdentityRoleDto>) => data.record && data.record.isStatic,\n    validators: () => [Validators.required],\n  },\n  {\n    type: ePropType.Boolean,\n    name: 'isDefault',\n    displayName: 'AbpIdentity::DisplayName:IsDefault',\n    id: 'role-is-default',\n    defaultValue: false,\n  },\n  {\n    type: ePropType.Boolean,\n    name: 'isPublic',\n    displayName: 'AbpIdentity::DisplayName:IsPublic',\n    id: 'role-is-public',\n    defaultValue: false,\n  },\n]);\n\nexport const DEFAULT_ROLES_EDIT_FORM_PROPS = DEFAULT_ROLES_CREATE_FORM_PROPS;\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\nimport { RolesComponent } from '../components/roles/roles.component';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_TOOLBAR_ACTIONS = ToolbarAction.createMany<IdentityRoleDto[]>([\n  {\n    text: 'AbpIdentity::NewRole',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.add();\n    },\n    permission: 'AbpIdentity.Roles.Create',\n    icon: 'fa fa-plus',\n  },\n]);\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\nimport { UsersComponent } from '../components/users/users.component';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_ENTITY_ACTIONS = EntityAction.createMany<IdentityUserDto>([\n  {\n    text: 'AbpIdentity::Edit',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.edit(data.record.id);\n    },\n    permission: 'AbpIdentity.Users.Update',\n  },\n  {\n    text: 'AbpIdentity::Permissions',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.openPermissionsModal(data.record.id);\n    },\n    permission: 'AbpIdentity.Users.ManagePermissions',\n  },\n  {\n    text: 'AbpIdentity::Delete',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.delete(data.record.id, data.record.name || data.record.userName);\n    },\n    permission: 'AbpIdentity.Users.Delete',\n  },\n]);\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_ENTITY_PROPS = EntityProp.createMany<IdentityUserDto>([\n  {\n    type: ePropType.String,\n    name: 'userName',\n    displayName: 'AbpIdentity::UserName',\n    sortable: true,\n    columnWidth: 250,\n  },\n  {\n    type: ePropType.String,\n    name: 'email',\n    displayName: 'AbpIdentity::EmailAddress',\n    sortable: true,\n    columnWidth: 250,\n  },\n  {\n    type: ePropType.String,\n    name: 'phoneNumber',\n    displayName: 'AbpIdentity::PhoneNumber',\n    sortable: true,\n    columnWidth: 250,\n  },\n]);\n","import { getPasswordValidators } from '@abp/ng.theme.shared';\nimport { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\nimport { Validators } from '@angular/forms';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_CREATE_FORM_PROPS = FormProp.createMany<IdentityUserDto>([\n  {\n    type: ePropType.String,\n    name: 'userName',\n    displayName: 'AbpIdentity::UserName',\n    id: 'user-name',\n    validators: () => [Validators.required, Validators.maxLength(256)],\n  },\n  {\n    type: ePropType.Password,\n    name: 'password',\n    displayName: 'AbpIdentity::Password',\n    id: 'password',\n    autocomplete: 'new-password',\n    validators: data => [Validators.required, ...getPasswordValidators({ get: data.getInjected })],\n  },\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpIdentity::DisplayName:Name',\n    id: 'name',\n    validators: () => [Validators.maxLength(64)],\n  },\n  {\n    type: ePropType.String,\n    name: 'surname',\n    displayName: 'AbpIdentity::DisplayName:Surname',\n    id: 'surname',\n    validators: () => [Validators.maxLength(64)],\n  },\n  {\n    type: ePropType.Email,\n    name: 'email',\n    displayName: 'AbpIdentity::EmailAddress',\n    id: 'email',\n    validators: () => [Validators.required, Validators.maxLength(256), Validators.email],\n  },\n  {\n    type: ePropType.String,\n    name: 'phoneNumber',\n    displayName: 'AbpIdentity::PhoneNumber',\n    id: 'phone-number',\n    validators: () => [Validators.maxLength(16)],\n  },\n  {\n    type: ePropType.Boolean,\n    name: 'lockoutEnabled',\n    displayName: 'AbpIdentity::DisplayName:LockoutEnabled',\n    id: 'lockout-checkbox',\n    defaultValue: true,\n  },\n]);\n\nexport const DEFAULT_USERS_EDIT_FORM_PROPS = DEFAULT_USERS_CREATE_FORM_PROPS.filter(\n  prop => prop.name !== 'password',\n);\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\nimport { UsersComponent } from '../components/users/users.component';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_TOOLBAR_ACTIONS = ToolbarAction.createMany<IdentityUserDto[]>([\n  {\n    text: 'AbpIdentity::NewUser',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.add();\n    },\n    permission: 'AbpIdentity.Users.Create',\n    icon: 'fa fa-plus',\n  },\n]);\n","import {\n  CreateFormPropContributorCallback,\n  EditFormPropContributorCallback,\n  EntityActionContributorCallback,\n  EntityPropContributorCallback,\n  ToolbarActionContributorCallback,\n} from '@abp/ng.theme.shared/extensions';\nimport { InjectionToken } from '@angular/core';\nimport { DEFAULT_ROLES_ENTITY_ACTIONS } from '../defaults/default-roles-entity-actions';\nimport { DEFAULT_ROLES_ENTITY_PROPS } from '../defaults/default-roles-entity-props';\nimport {\n  DEFAULT_ROLES_CREATE_FORM_PROPS,\n  DEFAULT_ROLES_EDIT_FORM_PROPS,\n} from '../defaults/default-roles-form-props';\nimport { DEFAULT_ROLES_TOOLBAR_ACTIONS } from '../defaults/default-roles-toolbar-actions';\nimport { DEFAULT_USERS_ENTITY_ACTIONS } from '../defaults/default-users-entity-actions';\nimport { DEFAULT_USERS_ENTITY_PROPS } from '../defaults/default-users-entity-props';\nimport {\n  DEFAULT_USERS_CREATE_FORM_PROPS,\n  DEFAULT_USERS_EDIT_FORM_PROPS,\n} from '../defaults/default-users-form-props';\nimport { DEFAULT_USERS_TOOLBAR_ACTIONS } from '../defaults/default-users-toolbar-actions';\nimport { eIdentityComponents } from '../enums/components';\nimport { IdentityRoleDto, IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_IDENTITY_ENTITY_ACTIONS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_ENTITY_ACTIONS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_ENTITY_ACTIONS,\n};\n\nexport const DEFAULT_IDENTITY_TOOLBAR_ACTIONS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_TOOLBAR_ACTIONS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_TOOLBAR_ACTIONS,\n};\n\nexport const DEFAULT_IDENTITY_ENTITY_PROPS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_ENTITY_PROPS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_ENTITY_PROPS,\n};\n\nexport const DEFAULT_IDENTITY_CREATE_FORM_PROPS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_CREATE_FORM_PROPS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_CREATE_FORM_PROPS,\n};\n\nexport const DEFAULT_IDENTITY_EDIT_FORM_PROPS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_EDIT_FORM_PROPS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_EDIT_FORM_PROPS,\n};\n\nexport const IDENTITY_ENTITY_ACTION_CONTRIBUTORS = new InjectionToken<EntityActionContributors>(\n  'IDENTITY_ENTITY_ACTION_CONTRIBUTORS',\n);\n\nexport const IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS = new InjectionToken<ToolbarActionContributors>(\n  'IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS',\n);\n\nexport const IDENTITY_ENTITY_PROP_CONTRIBUTORS = new InjectionToken<EntityPropContributors>(\n  'IDENTITY_ENTITY_PROP_CONTRIBUTORS',\n);\n\nexport const IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS = new InjectionToken<CreateFormPropContributors>(\n  'IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS',\n);\n\nexport const IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS = new InjectionToken<EditFormPropContributors>(\n  'IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS',\n);\n\n// Fix for TS4023 -> https://github.com/microsoft/TypeScript/issues/9944#issuecomment-254693497\ntype EntityActionContributors = Partial<{\n  [eIdentityComponents.Roles]: EntityActionContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: EntityActionContributorCallback<IdentityUserDto>[];\n}>;\ntype ToolbarActionContributors = Partial<{\n  [eIdentityComponents.Roles]: ToolbarActionContributorCallback<IdentityRoleDto[]>[];\n  [eIdentityComponents.Users]: ToolbarActionContributorCallback<IdentityUserDto[]>[];\n}>;\ntype EntityPropContributors = Partial<{\n  [eIdentityComponents.Roles]: EntityPropContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: EntityPropContributorCallback<IdentityUserDto>[];\n}>;\ntype CreateFormPropContributors = Partial<{\n  [eIdentityComponents.Roles]: CreateFormPropContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: CreateFormPropContributorCallback<IdentityUserDto>[];\n}>;\ntype EditFormPropContributors = Partial<{\n  [eIdentityComponents.Roles]: EditFormPropContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: EditFormPropContributorCallback<IdentityUserDto>[];\n}>;\n","import { ConfigStateService } from '@abp/ng.core';\nimport {\n  ExtensionsService,\n  getObjectExtensionEntitiesFromStore,\n  mapEntitiesToContributors,\n  mergeWithDefaultActions,\n  mergeWithDefaultProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { Injectable, Injector } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { eIdentityComponents } from '../enums/components';\nimport {\n  IdentityCreateFormPropContributors,\n  IdentityEditFormPropContributors,\n  IdentityEntityActionContributors,\n  IdentityEntityPropContributors,\n  IdentityToolbarActionContributors,\n} from '../models/config-options';\nimport {\n  DEFAULT_IDENTITY_CREATE_FORM_PROPS,\n  DEFAULT_IDENTITY_EDIT_FORM_PROPS,\n  DEFAULT_IDENTITY_ENTITY_ACTIONS,\n  DEFAULT_IDENTITY_ENTITY_PROPS,\n  DEFAULT_IDENTITY_TOOLBAR_ACTIONS,\n  IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_ENTITY_ACTION_CONTRIBUTORS,\n  IDENTITY_ENTITY_PROP_CONTRIBUTORS,\n  IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS,\n} from '../tokens/extensions.token';\n\n@Injectable()\nexport class IdentityExtensionsGuard implements CanActivate {\n  constructor(private injector: Injector) {}\n\n  canActivate(): Observable<boolean> {\n    const extensions: ExtensionsService = this.injector.get(ExtensionsService);\n    const actionContributors: IdentityEntityActionContributors =\n      this.injector.get(IDENTITY_ENTITY_ACTION_CONTRIBUTORS, null) || {};\n    const toolbarContributors: IdentityToolbarActionContributors =\n      this.injector.get(IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};\n    const propContributors: IdentityEntityPropContributors =\n      this.injector.get(IDENTITY_ENTITY_PROP_CONTRIBUTORS, null) || {};\n    const createFormContributors: IdentityCreateFormPropContributors =\n      this.injector.get(IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};\n    const editFormContributors: IdentityEditFormPropContributors =\n      this.injector.get(IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};\n\n    const configState = this.injector.get(ConfigStateService);\n    return getObjectExtensionEntitiesFromStore(configState, 'Identity').pipe(\n      map(entities => ({\n        [eIdentityComponents.Roles]: entities.Role,\n        [eIdentityComponents.Users]: entities.User,\n      })),\n      mapEntitiesToContributors(configState, 'AbpIdentity'),\n      tap(objectExtensionContributors => {\n        mergeWithDefaultActions(\n          extensions.entityActions,\n          DEFAULT_IDENTITY_ENTITY_ACTIONS,\n          actionContributors,\n        );\n        mergeWithDefaultActions(\n          extensions.toolbarActions,\n          DEFAULT_IDENTITY_TOOLBAR_ACTIONS,\n          toolbarContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.entityProps,\n          DEFAULT_IDENTITY_ENTITY_PROPS,\n          objectExtensionContributors.prop,\n          propContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.createFormProps,\n          DEFAULT_IDENTITY_CREATE_FORM_PROPS,\n          objectExtensionContributors.createForm,\n          createFormContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.editFormProps,\n          DEFAULT_IDENTITY_EDIT_FORM_PROPS,\n          objectExtensionContributors.editForm,\n          editFormContributors,\n        );\n      }),\n      mapTo(true),\n    );\n  }\n}\n","import {\n  AuthGuard,\n  DynamicLayoutComponent,\n  PermissionGuard,\n  ReplaceableComponents,\n  ReplaceableRouteContainerComponent,\n} from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { eIdentityComponents } from './enums/components';\nimport { IdentityExtensionsGuard } from './guards/extensions.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard, IdentityExtensionsGuard],\n    children: [\n      {\n        path: 'roles',\n        component: ReplaceableRouteContainerComponent,\n        data: {\n          requiredPolicy: 'AbpIdentity.Roles',\n          replaceableComponent: {\n            key: eIdentityComponents.Roles,\n            defaultComponent: RolesComponent,\n          } as ReplaceableComponents.RouteData<RolesComponent>,\n        },\n      },\n      {\n        path: 'users',\n        component: ReplaceableRouteContainerComponent,\n        data: {\n          requiredPolicy: 'AbpIdentity.Users',\n          replaceableComponent: {\n            key: eIdentityComponents.Users,\n            defaultComponent: UsersComponent,\n          } as ReplaceableComponents.RouteData<UsersComponent>,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IdentityRoutingModule {}\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\nimport { NgbDropdownModule, NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { IdentityExtensionsGuard } from './guards/extensions.guard';\nimport { IdentityRoutingModule } from './identity-routing.module';\nimport { IdentityConfigOptions } from './models/config-options';\nimport { IdentityState } from './states/identity.state';\nimport {\n  IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_ENTITY_ACTION_CONTRIBUTORS,\n  IDENTITY_ENTITY_PROP_CONTRIBUTORS,\n  IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS,\n} from './tokens/extensions.token';\n\n@NgModule({\n  declarations: [RolesComponent, UsersComponent],\n  exports: [RolesComponent, UsersComponent],\n  imports: [\n    NgxsModule.forFeature([IdentityState]),\n    CoreModule,\n    IdentityRoutingModule,\n    NgbNavModule,\n    ThemeSharedModule,\n    UiExtensionsModule,\n    NgbDropdownModule,\n    PermissionManagementModule,\n    NgxValidateCoreModule,\n  ],\n})\nexport class IdentityModule {\n  static forChild(options: IdentityConfigOptions = {}): ModuleWithProviders<IdentityModule> {\n    return {\n      ngModule: IdentityModule,\n      providers: [\n        {\n          provide: IDENTITY_ENTITY_ACTION_CONTRIBUTORS,\n          useValue: options.entityActionContributors,\n        },\n        {\n          provide: IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS,\n          useValue: options.toolbarActionContributors,\n        },\n        {\n          provide: IDENTITY_ENTITY_PROP_CONTRIBUTORS,\n          useValue: options.entityPropContributors,\n        },\n        {\n          provide: IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS,\n          useValue: options.createFormPropContributors,\n        },\n        {\n          provide: IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS,\n          useValue: options.editFormPropContributors,\n        },\n        IdentityExtensionsGuard,\n      ],\n    };\n  }\n\n  static forLazy(options: IdentityConfigOptions = {}): NgModuleFactory<IdentityModule> {\n    return new LazyModuleFactory(IdentityModule.forChild(options));\n  }\n}\n","import type { UserLookupCountInputDto, UserLookupSearchInputDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { ListResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport type { UserData } from '../users/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityUserLookupService {\n  apiName = 'AbpIdentity';\n\n  findById = (id: string) =>\n    this.restService.request<any, UserData>({\n      method: 'GET',\n      url: `/api/identity/users/lookup/${id}`,\n    },\n    { apiName: this.apiName });\n\n  findByUserName = (userName: string) =>\n    this.restService.request<any, UserData>({\n      method: 'GET',\n      url: `/api/identity/users/lookup/by-username/${userName}`,\n    },\n    { apiName: this.apiName });\n\n  getCount = (input: UserLookupCountInputDto) =>\n    this.restService.request<any, number>({\n      method: 'GET',\n      url: '/api/identity/users/lookup/count',\n      params: { filter: input.filter },\n    },\n    { apiName: this.apiName });\n\n  search = (input: UserLookupSearchInputDto) =>\n    this.restService.request<any, ListResultDto<UserData>>({\n      method: 'GET',\n      url: '/api/identity/users/lookup/search',\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import type { ChangePasswordInput, ProfileDto, UpdateProfileDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  apiName = 'AbpIdentity';\n\n  changePassword = (input: ChangePasswordInput) =>\n    this.restService.request<any, void>({\n      method: 'POST',\n      url: '/api/identity/my-profile/change-password',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  get = () =>\n    this.restService.request<any, ProfileDto>({\n      method: 'GET',\n      url: '/api/identity/my-profile',\n    },\n    { apiName: this.apiName });\n\n  update = (input: UpdateProfileDto) =>\n    this.restService.request<any, ProfileDto>({\n      method: 'PUT',\n      url: '/api/identity/my-profile',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { ABP } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport {\n  CreateRole,\n  CreateUser,\n  DeleteRole,\n  DeleteUser,\n  GetRoleById,\n  GetRoles,\n  GetUserById,\n  GetUsers,\n  UpdateRole,\n  UpdateUser,\n  GetUserRoles,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityState } from '../states/identity.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityStateService {\n  constructor(private store: Store) {}\n\n  getRoles() {\n    return this.store.selectSnapshot(IdentityState.getRoles);\n  }\n  getRolesTotalCount() {\n    return this.store.selectSnapshot(IdentityState.getRolesTotalCount);\n  }\n  getUsers() {\n    return this.store.selectSnapshot(IdentityState.getUsers);\n  }\n  getUsersTotalCount() {\n    return this.store.selectSnapshot(IdentityState.getUsersTotalCount);\n  }\n\n  dispatchGetRoles(...args: ConstructorParameters<typeof GetRoles>) {\n    return this.store.dispatch(new GetRoles(...args));\n  }\n\n  dispatchGetRoleById(...args: ConstructorParameters<typeof GetRoleById>) {\n    return this.store.dispatch(new GetRoleById(...args));\n  }\n\n  dispatchDeleteRole(...args: ConstructorParameters<typeof DeleteRole>) {\n    return this.store.dispatch(new DeleteRole(...args));\n  }\n\n  dispatchCreateRole(...args: ConstructorParameters<typeof CreateRole>) {\n    return this.store.dispatch(new CreateRole(...args));\n  }\n\n  dispatchUpdateRole(...args: ConstructorParameters<typeof UpdateRole>) {\n    return this.store.dispatch(new UpdateRole(...args));\n  }\n\n  dispatchGetUsers(...args: ConstructorParameters<typeof GetUsers>) {\n    return this.store.dispatch(new GetUsers(...args));\n  }\n\n  dispatchGetUserById(...args: ConstructorParameters<typeof GetUserById>) {\n    return this.store.dispatch(new GetUserById(...args));\n  }\n\n  dispatchDeleteUser(...args: ConstructorParameters<typeof DeleteUser>) {\n    return this.store.dispatch(new DeleteUser(...args));\n  }\n\n  dispatchCreateUser(...args: ConstructorParameters<typeof CreateUser>) {\n    return this.store.dispatch(new CreateUser(...args));\n  }\n\n  dispatchUpdateUser(...args: ConstructorParameters<typeof UpdateUser>) {\n    return this.store.dispatch(new UpdateUser(...args));\n  }\n\n  dispatchGetUserRoles(...args: ConstructorParameters<typeof GetUserRoles>) {\n    return this.store.dispatch(new GetUserRoles(...args));\n  }\n}\n"]}