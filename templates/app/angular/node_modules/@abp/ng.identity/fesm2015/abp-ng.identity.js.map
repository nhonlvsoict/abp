{"version":3,"file":"abp-ng.identity.js","sources":["../../../packages/identity/src/lib/actions/identity.actions.ts","../../../packages/identity/src/lib/proxy/identity/identity-role.service.ts","../../../packages/identity/src/lib/proxy/identity/identity-user.service.ts","../../../packages/identity/src/lib/states/identity.state.ts","../../../packages/identity/src/lib/components/roles/roles.component.ts","../../../packages/identity/src/lib/components/users/users.component.ts","../../../packages/identity/src/lib/defaults/default-roles-entity-actions.ts","../../../packages/identity/src/lib/defaults/default-roles-entity-props.ts","../../../packages/identity/src/lib/defaults/default-roles-form-props.ts","../../../packages/identity/src/lib/defaults/default-roles-toolbar-actions.ts","../../../packages/identity/src/lib/defaults/default-users-entity-actions.ts","../../../packages/identity/src/lib/defaults/default-users-entity-props.ts","../../../packages/identity/src/lib/defaults/default-users-form-props.ts","../../../packages/identity/src/lib/defaults/default-users-toolbar-actions.ts","../../../packages/identity/src/lib/tokens/extensions.token.ts","../../../packages/identity/src/lib/guards/extensions.guard.ts","../../../packages/identity/src/lib/identity-routing.module.ts","../../../packages/identity/src/lib/identity.module.ts","../../../packages/identity/src/lib/proxy/identity/identity-user-lookup.service.ts","../../../packages/identity/src/lib/proxy/identity/profile.service.ts","../../../packages/identity/src/lib/services/identity-state.service.ts","../../../packages/identity/src/abp-ng.identity.ts"],"sourcesContent":["import { Identity } from '../models/identity';\nimport { ABP, PagedAndSortedResultRequestDto } from '@abp/ng.core';\nimport {\n  GetIdentityUsersInput,\n  IdentityRoleCreateDto,\n  IdentityRoleUpdateDto,\n  IdentityUserCreateDto,\n  IdentityUserUpdateDto,\n} from '../proxy/identity/models';\n\nexport class GetRoles {\n  static readonly type = '[Identity] Get Roles';\n  constructor(public payload?: PagedAndSortedResultRequestDto) {}\n}\n\nexport class GetRoleById {\n  static readonly type = '[Identity] Get Role By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteRole {\n  static readonly type = '[Identity] Delete Role';\n  constructor(public payload: string) {}\n}\n\nexport class CreateRole {\n  static readonly type = '[Identity] Create Role';\n  constructor(public payload: IdentityRoleCreateDto) {}\n}\n\nexport class UpdateRole {\n  static readonly type = '[Identity] Update Role';\n  constructor(public payload: IdentityRoleUpdateDto & { id: string }) {}\n}\n\nexport class GetUsers {\n  static readonly type = '[Identity] Get Users';\n  constructor(public payload?: GetIdentityUsersInput) {}\n}\n\nexport class GetUserById {\n  static readonly type = '[Identity] Get User By Id';\n  constructor(public payload: string) {}\n}\n\nexport class DeleteUser {\n  static readonly type = '[Identity] Delete User';\n  constructor(public payload: string) {}\n}\n\nexport class CreateUser {\n  static readonly type = '[Identity] Create User';\n  constructor(public payload: IdentityUserCreateDto) {}\n}\n\nexport class UpdateUser {\n  static readonly type = '[Identity] Update User';\n  constructor(public payload: IdentityUserUpdateDto & { id: string }) {}\n}\n\nexport class GetUserRoles {\n  static readonly type = '[Identity] Get User Roles';\n  constructor(public payload: string) {}\n}\n","import type { ListResultDto, PagedAndSortedResultRequestDto, PagedResultDto } from '@abp/ng.core';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport type { IdentityRoleCreateDto, IdentityRoleDto, IdentityRoleUpdateDto } from './models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityRoleService {\n  apiName = 'AbpIdentity';\n\n  create = (input: IdentityRoleCreateDto) =>\n    this.restService.request<any, IdentityRoleDto>({\n      method: 'POST',\n      url: '/api/identity/roles',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  delete = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/identity/roles/${id}`,\n    },\n    { apiName: this.apiName });\n\n  get = (id: string) =>\n    this.restService.request<any, IdentityRoleDto>({\n      method: 'GET',\n      url: `/api/identity/roles/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getAllList = () =>\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: '/api/identity/roles/all',\n    },\n    { apiName: this.apiName });\n\n  getList = (input: PagedAndSortedResultRequestDto) =>\n    this.restService.request<any, PagedResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: '/api/identity/roles',\n      params: { sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  update = (id: string, input: IdentityRoleUpdateDto) =>\n    this.restService.request<any, IdentityRoleDto>({\n      method: 'PUT',\n      url: `/api/identity/roles/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import type {\n  GetIdentityUsersInput,\n  IdentityRoleDto,\n  IdentityUserCreateDto,\n  IdentityUserDto,\n  IdentityUserUpdateDto,\n  IdentityUserUpdateRolesDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { ListResultDto, PagedResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityUserService {\n  apiName = 'AbpIdentity';\n\n  create = (input: IdentityUserCreateDto) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'POST',\n      url: '/api/identity/users',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  delete = (id: string) =>\n    this.restService.request<any, void>({\n      method: 'DELETE',\n      url: `/api/identity/users/${id}`,\n    },\n    { apiName: this.apiName });\n\n  findByEmail = (email: string) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'GET',\n      url: `/api/identity/users/by-email/${email}`,\n    },\n    { apiName: this.apiName });\n\n  findByUsername = (username: string) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'GET',\n      url: '/api/identity/users/by-username/{userName}',\n    },\n    { apiName: this.apiName });\n\n  get = (id: string) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'GET',\n      url: `/api/identity/users/${id}`,\n    },\n    { apiName: this.apiName });\n\n  getAssignableRoles = () =>\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: '/api/identity/users/assignable-roles',\n    },\n    { apiName: this.apiName });\n\n  getList = (input: GetIdentityUsersInput) =>\n    this.restService.request<any, PagedResultDto<IdentityUserDto>>({\n      method: 'GET',\n      url: '/api/identity/users',\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  getRoles = (id: string) =>\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\n      method: 'GET',\n      url: `/api/identity/users/${id}/roles`,\n    },\n    { apiName: this.apiName });\n\n  update = (id: string, input: IdentityUserUpdateDto) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'PUT',\n      url: `/api/identity/users/${id}`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  updateRoles = (id: string, input: IdentityUserUpdateRolesDto) =>\n    this.restService.request<any, void>({\n      method: 'PUT',\n      url: `/api/identity/users/${id}/roles`,\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { pluck, tap } from 'rxjs/operators';\nimport {\n  CreateRole,\n  CreateUser,\n  DeleteRole,\n  DeleteUser,\n  GetRoleById,\n  GetRoles,\n  GetUserById,\n  GetUserRoles,\n  GetUsers,\n  UpdateRole,\n  UpdateUser,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityRoleService } from '../proxy/identity/identity-role.service';\nimport { IdentityUserService } from '../proxy/identity/identity-user.service';\nimport { IdentityRoleDto, IdentityUserDto } from '../proxy/identity/models';\n\n@State<Identity.State>({\n  name: 'IdentityState',\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\n})\n@Injectable()\nexport class IdentityState {\n  @Selector()\n  static getRoles({ roles }: Identity.State): IdentityRoleDto[] {\n    return roles.items || [];\n  }\n\n  @Selector()\n  static getRolesTotalCount({ roles }: Identity.State): number {\n    return roles.totalCount || 0;\n  }\n\n  @Selector()\n  static getUsers({ users }: Identity.State): IdentityUserDto[] {\n    return users.items || [];\n  }\n\n  @Selector()\n  static getUsersTotalCount({ users }: Identity.State): number {\n    return users.totalCount || 0;\n  }\n\n  constructor(\n    private identityUserService: IdentityUserService,\n    private identityRoleService: IdentityRoleService,\n  ) {}\n\n  @Action(GetRoles)\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\n    return this.identityRoleService.getList(payload).pipe(\n      tap(roles =>\n        patchState({\n          roles,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetRoleById)\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\n    return this.identityRoleService.get(payload).pipe(\n      tap(selectedRole =>\n        patchState({\n          selectedRole,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteRole)\n  deleteRole(_, { payload }: GetRoleById) {\n    return this.identityRoleService.delete(payload);\n  }\n\n  @Action(CreateRole)\n  addRole(_, { payload }: CreateRole) {\n    return this.identityRoleService.create(payload);\n  }\n\n  @Action(UpdateRole)\n  updateRole({ getState }: StateContext<Identity.State>, { payload }: UpdateRole) {\n    return this.identityRoleService.update(payload.id, { ...getState().selectedRole, ...payload });\n  }\n\n  @Action(GetUsers)\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\n    return this.identityUserService.getList(payload).pipe(\n      tap(users =>\n        patchState({\n          users,\n        }),\n      ),\n    );\n  }\n\n  @Action(GetUserById)\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\n    return this.identityUserService.get(payload).pipe(\n      tap(selectedUser =>\n        patchState({\n          selectedUser,\n        }),\n      ),\n    );\n  }\n\n  @Action(DeleteUser)\n  deleteUser(_, { payload }: GetUserById) {\n    return this.identityUserService.delete(payload);\n  }\n\n  @Action(CreateUser)\n  addUser(_, { payload }: CreateUser) {\n    return this.identityUserService.create(payload);\n  }\n\n  @Action(UpdateUser)\n  updateUser({ getState }: StateContext<Identity.State>, { payload }: UpdateUser) {\n    return this.identityUserService.update(payload.id, { ...getState().selectedUser, ...payload });\n  }\n\n  @Action(GetUserRoles)\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\n    return this.identityUserService.getRoles(payload).pipe(\n      pluck('items'),\n      tap(selectedUserRoles =>\n        patchState({\n          selectedUserRoles,\n        }),\n      ),\n    );\n  }\n}\n","import { ListService, PagedAndSortedResultRequestDto } from '@abp/ng.core';\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\nimport {\n  EXTENSIONS_IDENTIFIER,\n  FormPropData,\n  generateFormFromProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck } from 'rxjs/operators';\nimport {\n  CreateRole,\n  DeleteRole,\n  GetRoleById,\n  GetRoles,\n  UpdateRole,\n} from '../../actions/identity.actions';\nimport { eIdentityComponents } from '../../enums/components';\nimport { IdentityRoleDto } from '../../proxy/identity/models';\nimport { IdentityState } from '../../states/identity.state';\n\n@Component({\n  selector: 'abp-roles',\n  templateUrl: './roles.component.html',\n  providers: [\n    ListService,\n    {\n      provide: EXTENSIONS_IDENTIFIER,\n      useValue: eIdentityComponents.Roles,\n    },\n  ],\n})\nexport class RolesComponent implements OnInit {\n  @Select(IdentityState.getRoles)\n  data$: Observable<IdentityRoleDto[]>;\n\n  @Select(IdentityState.getRolesTotalCount)\n  totalCount$: Observable<number>;\n\n  form: FormGroup;\n\n  selected: IdentityRoleDto;\n\n  isModalVisible: boolean;\n\n  visiblePermissions = false;\n\n  providerKey: string;\n\n  modalBusy = false;\n\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\n\n  onVisiblePermissionChange = event => {\n    this.visiblePermissions = event;\n  };\n\n  constructor(\n    public readonly list: ListService<PagedAndSortedResultRequestDto>,\n    protected confirmationService: ConfirmationService,\n    protected store: Store,\n    protected injector: Injector,\n  ) {}\n\n  ngOnInit() {\n    this.hookToQuery();\n  }\n\n  buildForm() {\n    const data = new FormPropData(this.injector, this.selected);\n    this.form = generateFormFromProps(data);\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  add() {\n    this.selected = {} as IdentityRoleDto;\n    this.openModal();\n  }\n\n  edit(id: string) {\n    this.store\n      .dispatch(new GetRoleById(id))\n      .pipe(pluck('IdentityState', 'selectedRole'))\n      .subscribe(selectedRole => {\n        this.selected = selectedRole;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n    this.modalBusy = true;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateRole({ ...this.selected, ...this.form.value, id: this.selected.id })\n          : new CreateRole(this.form.value),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.list.get();\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Confirmation.Status) => {\n        if (status === Confirmation.Status.confirm) {\n          this.store.dispatch(new DeleteRole(id)).subscribe(() => this.list.get());\n        }\n      });\n  }\n\n  private hookToQuery() {\n    this.list.hookToQuery(query => this.store.dispatch(new GetRoles(query))).subscribe();\n  }\n\n  openPermissionsModal(providerKey: string) {\n    this.providerKey = providerKey;\n    setTimeout(() => {\n      this.visiblePermissions = true;\n    }, 0);\n  }\n\n  sort(data) {\n    const { prop, dir } = data.sorts[0];\n    this.list.sortKey = prop;\n    this.list.sortOrder = dir;\n  }\n}\n","import { ListService } from '@abp/ng.core';\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\nimport {\n  EXTENSIONS_IDENTIFIER,\n  FormPropData,\n  generateFormFromProps,\n} from '@abp/ng.theme.shared/extensions';\nimport {\n  Component,\n  Injector,\n  OnInit,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n} from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\nimport snq from 'snq';\nimport {\n  CreateUser,\n  DeleteUser,\n  GetUserById,\n  GetUserRoles,\n  GetUsers,\n  UpdateUser,\n} from '../../actions/identity.actions';\nimport { eIdentityComponents } from '../../enums/components';\nimport { Identity } from '../../models/identity';\nimport { IdentityUserService } from '../../proxy/identity/identity-user.service';\nimport {\n  GetIdentityUsersInput,\n  IdentityRoleDto,\n  IdentityUserDto,\n} from '../../proxy/identity/models';\nimport { IdentityState } from '../../states/identity.state';\n\n@Component({\n  selector: 'abp-users',\n  templateUrl: './users.component.html',\n  providers: [\n    ListService,\n    {\n      provide: EXTENSIONS_IDENTIFIER,\n      useValue: eIdentityComponents.Users,\n    },\n  ],\n})\nexport class UsersComponent implements OnInit {\n  @Select(IdentityState.getUsers)\n  data$: Observable<IdentityUserDto[]>;\n\n  @Select(IdentityState.getUsersTotalCount)\n  totalCount$: Observable<number>;\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  form: FormGroup;\n\n  selected: IdentityUserDto;\n\n  selectedUserRoles: IdentityRoleDto[];\n\n  roles: IdentityRoleDto[];\n\n  visiblePermissions = false;\n\n  providerKey: string;\n\n  isModalVisible: boolean;\n\n  modalBusy = false;\n\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\n\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\n\n  onVisiblePermissionChange = event => {\n    this.visiblePermissions = event;\n  };\n\n  get roleGroups(): FormGroup[] {\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\n  }\n\n  constructor(\n    public readonly list: ListService<GetIdentityUsersInput>,\n    protected confirmationService: ConfirmationService,\n    protected userService: IdentityUserService,\n    protected fb: FormBuilder,\n    protected store: Store,\n    protected injector: Injector,\n  ) {}\n\n  ngOnInit() {\n    this.hookToQuery();\n  }\n\n  buildForm() {\n    const data = new FormPropData(this.injector, this.selected);\n    this.form = generateFormFromProps(data);\n\n    this.userService.getAssignableRoles().subscribe(({ items }) => {\n      this.roles = items;\n      this.form.addControl(\n        'roleNames',\n        this.fb.array(\n          this.roles.map(role =>\n            this.fb.group({\n              [role.name]: [\n                this.selected.id\n                  ? !!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))\n                  : role.isDefault,\n              ],\n            }),\n          ),\n        ),\n      );\n    });\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  add() {\n    this.selected = {} as IdentityUserDto;\n    this.selectedUserRoles = [] as IdentityRoleDto[];\n    this.openModal();\n  }\n\n  edit(id: string) {\n    this.store\n      .dispatch(new GetUserById(id))\n      .pipe(\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\n        pluck('IdentityState'),\n        take(1),\n      )\n      .subscribe((state: Identity.State) => {\n        this.selected = state.selectedUser;\n        this.selectedUserRoles = state.selectedUserRoles || [];\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid || this.modalBusy) return;\n    this.modalBusy = true;\n\n    const { roleNames } = this.form.value;\n    const mappedRoleNames = snq(\n      () =>\n        roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\n      [],\n    );\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new UpdateUser({\n              ...this.selected,\n              ...this.form.value,\n              id: this.selected.id,\n              roleNames: mappedRoleNames,\n            })\n          : new CreateUser({\n              ...this.form.value,\n              roleNames: mappedRoleNames,\n            }),\n      )\n      .pipe(finalize(() => (this.modalBusy = false)))\n      .subscribe(() => {\n        this.isModalVisible = false;\n        this.list.get();\n      });\n  }\n\n  delete(id: string, userName: string) {\n    this.confirmationService\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [userName],\n      })\n      .subscribe((status: Confirmation.Status) => {\n        if (status === Confirmation.Status.confirm) {\n          this.store.dispatch(new DeleteUser(id)).subscribe(() => this.list.get());\n        }\n      });\n  }\n\n  sort(data) {\n    const { prop, dir } = data.sorts[0];\n    this.list.sortKey = prop;\n    this.list.sortOrder = dir;\n  }\n\n  private hookToQuery() {\n    this.list.hookToQuery(query => this.store.dispatch(new GetUsers(query))).subscribe();\n  }\n\n  openPermissionsModal(providerKey: string) {\n    this.providerKey = providerKey;\n    setTimeout(() => {\n      this.visiblePermissions = true;\n    }, 0);\n  }\n}\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\nimport { RolesComponent } from '../components/roles/roles.component';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_ENTITY_ACTIONS = EntityAction.createMany<IdentityRoleDto>([\n  {\n    text: 'AbpIdentity::Edit',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.edit(data.record.id);\n    },\n    permission: 'AbpIdentity.Roles.Update',\n  },\n  {\n    text: 'AbpIdentity::Permissions',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.openPermissionsModal(data.record.name);\n    },\n    permission: 'AbpIdentity.Roles.ManagePermissions',\n  },\n  {\n    text: 'AbpIdentity::Delete',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.delete(data.record.id, data.record.name);\n    },\n    permission: 'AbpIdentity.Roles.Delete',\n    visible: data => !data.record.isStatic,\n  },\n]);\n","import { LocalizationService } from '@abp/ng.core';\nimport { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\nimport { of } from 'rxjs';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_ENTITY_PROPS = EntityProp.createMany<IdentityRoleDto>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpIdentity::RoleName',\n    sortable: true,\n    valueResolver: data => {\n      const l10n = data.getInjected(LocalizationService);\n      const t = l10n.instant.bind(l10n);\n      const { isDefault, isPublic, name } = data.record;\n\n      return of(\n        name +\n          (isDefault\n            ? `<span class=\"badge badge-pill badge-success ml-1\">${t(\n                'AbpIdentity::DisplayName:IsDefault',\n              )}</span>`\n            : '') +\n          (isPublic\n            ? `<span class=\"badge badge-pill badge-info ml-1\">${t(\n                'AbpIdentity::DisplayName:IsPublic',\n              )}</span>`\n            : ''),\n      );\n    },\n  },\n]);\n","import { ePropType, FormProp, PropData } from '@abp/ng.theme.shared/extensions';\nimport { Validators } from '@angular/forms';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_CREATE_FORM_PROPS = FormProp.createMany<IdentityRoleDto>([\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpIdentity::RoleName',\n    id: 'role-name',\n    disabled: (data: PropData<IdentityRoleDto>) => data.record && data.record.isStatic,\n    validators: () => [Validators.required],\n  },\n  {\n    type: ePropType.Boolean,\n    name: 'isDefault',\n    displayName: 'AbpIdentity::DisplayName:IsDefault',\n    id: 'role-is-default',\n    defaultValue: false,\n  },\n  {\n    type: ePropType.Boolean,\n    name: 'isPublic',\n    displayName: 'AbpIdentity::DisplayName:IsPublic',\n    id: 'role-is-public',\n    defaultValue: false,\n  },\n]);\n\nexport const DEFAULT_ROLES_EDIT_FORM_PROPS = DEFAULT_ROLES_CREATE_FORM_PROPS;\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\nimport { RolesComponent } from '../components/roles/roles.component';\nimport { IdentityRoleDto } from '../proxy/identity/models';\n\nexport const DEFAULT_ROLES_TOOLBAR_ACTIONS = ToolbarAction.createMany<IdentityRoleDto[]>([\n  {\n    text: 'AbpIdentity::NewRole',\n    action: data => {\n      const component = data.getInjected(RolesComponent);\n      component.add();\n    },\n    permission: 'AbpIdentity.Roles.Create',\n    icon: 'fa fa-plus',\n  },\n]);\n","import { EntityAction } from '@abp/ng.theme.shared/extensions';\nimport { UsersComponent } from '../components/users/users.component';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_ENTITY_ACTIONS = EntityAction.createMany<IdentityUserDto>([\n  {\n    text: 'AbpIdentity::Edit',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.edit(data.record.id);\n    },\n    permission: 'AbpIdentity.Users.Update',\n  },\n  {\n    text: 'AbpIdentity::Permissions',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.openPermissionsModal(data.record.id);\n    },\n    permission: 'AbpIdentity.Users.ManagePermissions',\n  },\n  {\n    text: 'AbpIdentity::Delete',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.delete(data.record.id, data.record.name || data.record.userName);\n    },\n    permission: 'AbpIdentity.Users.Delete',\n  },\n]);\n","import { EntityProp, ePropType } from '@abp/ng.theme.shared/extensions';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_ENTITY_PROPS = EntityProp.createMany<IdentityUserDto>([\n  {\n    type: ePropType.String,\n    name: 'userName',\n    displayName: 'AbpIdentity::UserName',\n    sortable: true,\n    columnWidth: 250,\n  },\n  {\n    type: ePropType.String,\n    name: 'email',\n    displayName: 'AbpIdentity::EmailAddress',\n    sortable: true,\n    columnWidth: 250,\n  },\n  {\n    type: ePropType.String,\n    name: 'phoneNumber',\n    displayName: 'AbpIdentity::PhoneNumber',\n    sortable: true,\n    columnWidth: 250,\n  },\n]);\n","import { getPasswordValidators } from '@abp/ng.theme.shared';\nimport { ePropType, FormProp } from '@abp/ng.theme.shared/extensions';\nimport { Validators } from '@angular/forms';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_CREATE_FORM_PROPS = FormProp.createMany<IdentityUserDto>([\n  {\n    type: ePropType.String,\n    name: 'userName',\n    displayName: 'AbpIdentity::UserName',\n    id: 'user-name',\n    validators: () => [Validators.required, Validators.maxLength(256)],\n  },\n  {\n    type: ePropType.Password,\n    name: 'password',\n    displayName: 'AbpIdentity::Password',\n    id: 'password',\n    autocomplete: 'new-password',\n    validators: data => [Validators.required, ...getPasswordValidators({ get: data.getInjected })],\n  },\n  {\n    type: ePropType.String,\n    name: 'name',\n    displayName: 'AbpIdentity::DisplayName:Name',\n    id: 'name',\n    validators: () => [Validators.maxLength(64)],\n  },\n  {\n    type: ePropType.String,\n    name: 'surname',\n    displayName: 'AbpIdentity::DisplayName:Surname',\n    id: 'surname',\n    validators: () => [Validators.maxLength(64)],\n  },\n  {\n    type: ePropType.Email,\n    name: 'email',\n    displayName: 'AbpIdentity::EmailAddress',\n    id: 'email',\n    validators: () => [Validators.required, Validators.maxLength(256), Validators.email],\n  },\n  {\n    type: ePropType.String,\n    name: 'phoneNumber',\n    displayName: 'AbpIdentity::PhoneNumber',\n    id: 'phone-number',\n    validators: () => [Validators.maxLength(16)],\n  },\n  {\n    type: ePropType.Boolean,\n    name: 'lockoutEnabled',\n    displayName: 'AbpIdentity::DisplayName:LockoutEnabled',\n    id: 'lockout-checkbox',\n    defaultValue: true,\n  },\n]);\n\nexport const DEFAULT_USERS_EDIT_FORM_PROPS = DEFAULT_USERS_CREATE_FORM_PROPS.filter(\n  prop => prop.name !== 'password',\n);\n","import { ToolbarAction } from '@abp/ng.theme.shared/extensions';\nimport { UsersComponent } from '../components/users/users.component';\nimport { IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_USERS_TOOLBAR_ACTIONS = ToolbarAction.createMany<IdentityUserDto[]>([\n  {\n    text: 'AbpIdentity::NewUser',\n    action: data => {\n      const component = data.getInjected(UsersComponent);\n      component.add();\n    },\n    permission: 'AbpIdentity.Users.Create',\n    icon: 'fa fa-plus',\n  },\n]);\n","import {\n  CreateFormPropContributorCallback,\n  EditFormPropContributorCallback,\n  EntityActionContributorCallback,\n  EntityPropContributorCallback,\n  ToolbarActionContributorCallback,\n} from '@abp/ng.theme.shared/extensions';\nimport { InjectionToken } from '@angular/core';\nimport { DEFAULT_ROLES_ENTITY_ACTIONS } from '../defaults/default-roles-entity-actions';\nimport { DEFAULT_ROLES_ENTITY_PROPS } from '../defaults/default-roles-entity-props';\nimport {\n  DEFAULT_ROLES_CREATE_FORM_PROPS,\n  DEFAULT_ROLES_EDIT_FORM_PROPS,\n} from '../defaults/default-roles-form-props';\nimport { DEFAULT_ROLES_TOOLBAR_ACTIONS } from '../defaults/default-roles-toolbar-actions';\nimport { DEFAULT_USERS_ENTITY_ACTIONS } from '../defaults/default-users-entity-actions';\nimport { DEFAULT_USERS_ENTITY_PROPS } from '../defaults/default-users-entity-props';\nimport {\n  DEFAULT_USERS_CREATE_FORM_PROPS,\n  DEFAULT_USERS_EDIT_FORM_PROPS,\n} from '../defaults/default-users-form-props';\nimport { DEFAULT_USERS_TOOLBAR_ACTIONS } from '../defaults/default-users-toolbar-actions';\nimport { eIdentityComponents } from '../enums/components';\nimport { IdentityRoleDto, IdentityUserDto } from '../proxy/identity/models';\n\nexport const DEFAULT_IDENTITY_ENTITY_ACTIONS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_ENTITY_ACTIONS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_ENTITY_ACTIONS,\n};\n\nexport const DEFAULT_IDENTITY_TOOLBAR_ACTIONS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_TOOLBAR_ACTIONS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_TOOLBAR_ACTIONS,\n};\n\nexport const DEFAULT_IDENTITY_ENTITY_PROPS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_ENTITY_PROPS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_ENTITY_PROPS,\n};\n\nexport const DEFAULT_IDENTITY_CREATE_FORM_PROPS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_CREATE_FORM_PROPS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_CREATE_FORM_PROPS,\n};\n\nexport const DEFAULT_IDENTITY_EDIT_FORM_PROPS = {\n  [eIdentityComponents.Roles]: DEFAULT_ROLES_EDIT_FORM_PROPS,\n  [eIdentityComponents.Users]: DEFAULT_USERS_EDIT_FORM_PROPS,\n};\n\nexport const IDENTITY_ENTITY_ACTION_CONTRIBUTORS = new InjectionToken<EntityActionContributors>(\n  'IDENTITY_ENTITY_ACTION_CONTRIBUTORS',\n);\n\nexport const IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS = new InjectionToken<ToolbarActionContributors>(\n  'IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS',\n);\n\nexport const IDENTITY_ENTITY_PROP_CONTRIBUTORS = new InjectionToken<EntityPropContributors>(\n  'IDENTITY_ENTITY_PROP_CONTRIBUTORS',\n);\n\nexport const IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS = new InjectionToken<CreateFormPropContributors>(\n  'IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS',\n);\n\nexport const IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS = new InjectionToken<EditFormPropContributors>(\n  'IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS',\n);\n\n// Fix for TS4023 -> https://github.com/microsoft/TypeScript/issues/9944#issuecomment-254693497\ntype EntityActionContributors = Partial<{\n  [eIdentityComponents.Roles]: EntityActionContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: EntityActionContributorCallback<IdentityUserDto>[];\n}>;\ntype ToolbarActionContributors = Partial<{\n  [eIdentityComponents.Roles]: ToolbarActionContributorCallback<IdentityRoleDto[]>[];\n  [eIdentityComponents.Users]: ToolbarActionContributorCallback<IdentityUserDto[]>[];\n}>;\ntype EntityPropContributors = Partial<{\n  [eIdentityComponents.Roles]: EntityPropContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: EntityPropContributorCallback<IdentityUserDto>[];\n}>;\ntype CreateFormPropContributors = Partial<{\n  [eIdentityComponents.Roles]: CreateFormPropContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: CreateFormPropContributorCallback<IdentityUserDto>[];\n}>;\ntype EditFormPropContributors = Partial<{\n  [eIdentityComponents.Roles]: EditFormPropContributorCallback<IdentityRoleDto>[];\n  [eIdentityComponents.Users]: EditFormPropContributorCallback<IdentityUserDto>[];\n}>;\n","import { ConfigStateService } from '@abp/ng.core';\nimport {\n  ExtensionsService,\n  getObjectExtensionEntitiesFromStore,\n  mapEntitiesToContributors,\n  mergeWithDefaultActions,\n  mergeWithDefaultProps,\n} from '@abp/ng.theme.shared/extensions';\nimport { Injectable, Injector } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, mapTo, tap } from 'rxjs/operators';\nimport { eIdentityComponents } from '../enums/components';\nimport {\n  IdentityCreateFormPropContributors,\n  IdentityEditFormPropContributors,\n  IdentityEntityActionContributors,\n  IdentityEntityPropContributors,\n  IdentityToolbarActionContributors,\n} from '../models/config-options';\nimport {\n  DEFAULT_IDENTITY_CREATE_FORM_PROPS,\n  DEFAULT_IDENTITY_EDIT_FORM_PROPS,\n  DEFAULT_IDENTITY_ENTITY_ACTIONS,\n  DEFAULT_IDENTITY_ENTITY_PROPS,\n  DEFAULT_IDENTITY_TOOLBAR_ACTIONS,\n  IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_ENTITY_ACTION_CONTRIBUTORS,\n  IDENTITY_ENTITY_PROP_CONTRIBUTORS,\n  IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS,\n} from '../tokens/extensions.token';\n\n@Injectable()\nexport class IdentityExtensionsGuard implements CanActivate {\n  constructor(private injector: Injector) {}\n\n  canActivate(): Observable<boolean> {\n    const extensions: ExtensionsService = this.injector.get(ExtensionsService);\n    const actionContributors: IdentityEntityActionContributors =\n      this.injector.get(IDENTITY_ENTITY_ACTION_CONTRIBUTORS, null) || {};\n    const toolbarContributors: IdentityToolbarActionContributors =\n      this.injector.get(IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS, null) || {};\n    const propContributors: IdentityEntityPropContributors =\n      this.injector.get(IDENTITY_ENTITY_PROP_CONTRIBUTORS, null) || {};\n    const createFormContributors: IdentityCreateFormPropContributors =\n      this.injector.get(IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS, null) || {};\n    const editFormContributors: IdentityEditFormPropContributors =\n      this.injector.get(IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS, null) || {};\n\n    const configState = this.injector.get(ConfigStateService);\n    return getObjectExtensionEntitiesFromStore(configState, 'Identity').pipe(\n      map(entities => ({\n        [eIdentityComponents.Roles]: entities.Role,\n        [eIdentityComponents.Users]: entities.User,\n      })),\n      mapEntitiesToContributors(configState, 'AbpIdentity'),\n      tap(objectExtensionContributors => {\n        mergeWithDefaultActions(\n          extensions.entityActions,\n          DEFAULT_IDENTITY_ENTITY_ACTIONS,\n          actionContributors,\n        );\n        mergeWithDefaultActions(\n          extensions.toolbarActions,\n          DEFAULT_IDENTITY_TOOLBAR_ACTIONS,\n          toolbarContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.entityProps,\n          DEFAULT_IDENTITY_ENTITY_PROPS,\n          objectExtensionContributors.prop,\n          propContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.createFormProps,\n          DEFAULT_IDENTITY_CREATE_FORM_PROPS,\n          objectExtensionContributors.createForm,\n          createFormContributors,\n        );\n        mergeWithDefaultProps(\n          extensions.editFormProps,\n          DEFAULT_IDENTITY_EDIT_FORM_PROPS,\n          objectExtensionContributors.editForm,\n          editFormContributors,\n        );\n      }),\n      mapTo(true),\n    );\n  }\n}\n","import {\n  AuthGuard,\n  DynamicLayoutComponent,\n  PermissionGuard,\n  ReplaceableComponents,\n  ReplaceableRouteContainerComponent,\n} from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { eIdentityComponents } from './enums/components';\nimport { IdentityExtensionsGuard } from './guards/extensions.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard, IdentityExtensionsGuard],\n    children: [\n      {\n        path: 'roles',\n        component: ReplaceableRouteContainerComponent,\n        data: {\n          requiredPolicy: 'AbpIdentity.Roles',\n          replaceableComponent: {\n            key: eIdentityComponents.Roles,\n            defaultComponent: RolesComponent,\n          } as ReplaceableComponents.RouteData<RolesComponent>,\n        },\n      },\n      {\n        path: 'users',\n        component: ReplaceableRouteContainerComponent,\n        data: {\n          requiredPolicy: 'AbpIdentity.Users',\n          replaceableComponent: {\n            key: eIdentityComponents.Users,\n            defaultComponent: UsersComponent,\n          } as ReplaceableComponents.RouteData<UsersComponent>,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IdentityRoutingModule {}\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UiExtensionsModule } from '@abp/ng.theme.shared/extensions';\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\nimport { NgbDropdownModule, NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { UsersComponent } from './components/users/users.component';\nimport { IdentityExtensionsGuard } from './guards/extensions.guard';\nimport { IdentityRoutingModule } from './identity-routing.module';\nimport { IdentityConfigOptions } from './models/config-options';\nimport { IdentityState } from './states/identity.state';\nimport {\n  IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS,\n  IDENTITY_ENTITY_ACTION_CONTRIBUTORS,\n  IDENTITY_ENTITY_PROP_CONTRIBUTORS,\n  IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS,\n} from './tokens/extensions.token';\n\n@NgModule({\n  declarations: [RolesComponent, UsersComponent],\n  exports: [RolesComponent, UsersComponent],\n  imports: [\n    NgxsModule.forFeature([IdentityState]),\n    CoreModule,\n    IdentityRoutingModule,\n    NgbNavModule,\n    ThemeSharedModule,\n    UiExtensionsModule,\n    NgbDropdownModule,\n    PermissionManagementModule,\n    NgxValidateCoreModule,\n  ],\n})\nexport class IdentityModule {\n  static forChild(options: IdentityConfigOptions = {}): ModuleWithProviders<IdentityModule> {\n    return {\n      ngModule: IdentityModule,\n      providers: [\n        {\n          provide: IDENTITY_ENTITY_ACTION_CONTRIBUTORS,\n          useValue: options.entityActionContributors,\n        },\n        {\n          provide: IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS,\n          useValue: options.toolbarActionContributors,\n        },\n        {\n          provide: IDENTITY_ENTITY_PROP_CONTRIBUTORS,\n          useValue: options.entityPropContributors,\n        },\n        {\n          provide: IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS,\n          useValue: options.createFormPropContributors,\n        },\n        {\n          provide: IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS,\n          useValue: options.editFormPropContributors,\n        },\n        IdentityExtensionsGuard,\n      ],\n    };\n  }\n\n  static forLazy(options: IdentityConfigOptions = {}): NgModuleFactory<IdentityModule> {\n    return new LazyModuleFactory(IdentityModule.forChild(options));\n  }\n}\n","import type { UserLookupCountInputDto, UserLookupSearchInputDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport type { ListResultDto } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport type { UserData } from '../users/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityUserLookupService {\n  apiName = 'AbpIdentity';\n\n  findById = (id: string) =>\n    this.restService.request<any, UserData>({\n      method: 'GET',\n      url: `/api/identity/users/lookup/${id}`,\n    },\n    { apiName: this.apiName });\n\n  findByUserName = (userName: string) =>\n    this.restService.request<any, UserData>({\n      method: 'GET',\n      url: `/api/identity/users/lookup/by-username/${userName}`,\n    },\n    { apiName: this.apiName });\n\n  getCount = (input: UserLookupCountInputDto) =>\n    this.restService.request<any, number>({\n      method: 'GET',\n      url: '/api/identity/users/lookup/count',\n      params: { filter: input.filter },\n    },\n    { apiName: this.apiName });\n\n  search = (input: UserLookupSearchInputDto) =>\n    this.restService.request<any, ListResultDto<UserData>>({\n      method: 'GET',\n      url: '/api/identity/users/lookup/search',\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import type { ChangePasswordInput, ProfileDto, UpdateProfileDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  apiName = 'AbpIdentity';\n\n  changePassword = (input: ChangePasswordInput) =>\n    this.restService.request<any, void>({\n      method: 'POST',\n      url: '/api/identity/my-profile/change-password',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  get = () =>\n    this.restService.request<any, ProfileDto>({\n      method: 'GET',\n      url: '/api/identity/my-profile',\n    },\n    { apiName: this.apiName });\n\n  update = (input: UpdateProfileDto) =>\n    this.restService.request<any, ProfileDto>({\n      method: 'PUT',\n      url: '/api/identity/my-profile',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { ABP } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport {\n  CreateRole,\n  CreateUser,\n  DeleteRole,\n  DeleteUser,\n  GetRoleById,\n  GetRoles,\n  GetUserById,\n  GetUsers,\n  UpdateRole,\n  UpdateUser,\n  GetUserRoles,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityState } from '../states/identity.state';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityStateService {\n  constructor(private store: Store) {}\n\n  getRoles() {\n    return this.store.selectSnapshot(IdentityState.getRoles);\n  }\n  getRolesTotalCount() {\n    return this.store.selectSnapshot(IdentityState.getRolesTotalCount);\n  }\n  getUsers() {\n    return this.store.selectSnapshot(IdentityState.getUsers);\n  }\n  getUsersTotalCount() {\n    return this.store.selectSnapshot(IdentityState.getUsersTotalCount);\n  }\n\n  dispatchGetRoles(...args: ConstructorParameters<typeof GetRoles>) {\n    return this.store.dispatch(new GetRoles(...args));\n  }\n\n  dispatchGetRoleById(...args: ConstructorParameters<typeof GetRoleById>) {\n    return this.store.dispatch(new GetRoleById(...args));\n  }\n\n  dispatchDeleteRole(...args: ConstructorParameters<typeof DeleteRole>) {\n    return this.store.dispatch(new DeleteRole(...args));\n  }\n\n  dispatchCreateRole(...args: ConstructorParameters<typeof CreateRole>) {\n    return this.store.dispatch(new CreateRole(...args));\n  }\n\n  dispatchUpdateRole(...args: ConstructorParameters<typeof UpdateRole>) {\n    return this.store.dispatch(new UpdateRole(...args));\n  }\n\n  dispatchGetUsers(...args: ConstructorParameters<typeof GetUsers>) {\n    return this.store.dispatch(new GetUsers(...args));\n  }\n\n  dispatchGetUserById(...args: ConstructorParameters<typeof GetUserById>) {\n    return this.store.dispatch(new GetUserById(...args));\n  }\n\n  dispatchDeleteUser(...args: ConstructorParameters<typeof DeleteUser>) {\n    return this.store.dispatch(new DeleteUser(...args));\n  }\n\n  dispatchCreateUser(...args: ConstructorParameters<typeof CreateUser>) {\n    return this.store.dispatch(new CreateUser(...args));\n  }\n\n  dispatchUpdateUser(...args: ConstructorParameters<typeof UpdateUser>) {\n    return this.store.dispatch(new UpdateUser(...args));\n  }\n\n  dispatchGetUserRoles(...args: ConstructorParameters<typeof GetUserRoles>) {\n    return this.store.dispatch(new GetUserRoles(...args));\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CreateRole as ɵi,CreateUser as ɵn,DeleteRole as ɵh,DeleteUser as ɵm,GetRoleById as ɵg,GetRoles as ɵf,GetUserById as ɵl,GetUserRoles as ɵp,GetUsers as ɵk,UpdateRole as ɵj,UpdateUser as ɵo} from './lib/actions/identity.actions';\nexport {RolesComponent as ɵa} from './lib/components/roles/roles.component';\nexport {UsersComponent as ɵt} from './lib/components/users/users.component';\nexport {eIdentityComponents as ɵb} from './lib/enums/components';\nexport {IdentityExtensionsGuard as ɵv} from './lib/guards/extensions.guard';\nexport {IdentityRoutingModule as ɵu} from './lib/identity-routing.module';\nexport {IdentityRoleService as ɵe} from './lib/proxy/identity/identity-role.service';\nexport {IdentityUserService as ɵd} from './lib/proxy/identity/identity-user.service';\nexport {GetIdentityUsersInput as ɵq,IdentityRoleCreateDto as ɵr,IdentityUserCreateDto as ɵs} from './lib/proxy/identity/models';\nexport {IdentityState as ɵc} from './lib/states/identity.state';\nexport {IDENTITY_CREATE_FORM_PROP_CONTRIBUTORS as ɵz,IDENTITY_EDIT_FORM_PROP_CONTRIBUTORS as ɵba,IDENTITY_ENTITY_ACTION_CONTRIBUTORS as ɵw,IDENTITY_ENTITY_PROP_CONTRIBUTORS as ɵy,IDENTITY_TOOLBAR_ACTION_CONTRIBUTORS as ɵx} from './lib/tokens/extensions.token';"],"names":[],"mappings":"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"}