{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/account/src/lib/proxy/account/account.service.ts","../../../packages/account/src/lib/components/forgot-password/forgot-password.component.ts","../../../packages/account/src/lib/tokens/config-options.token.ts","../../../packages/account/src/lib/utils/auth-utils.ts","../../../packages/account/src/lib/components/login/login.component.ts","../../../packages/account/src/lib/services/manage-profile.state.service.ts","../../../packages/account/src/lib/components/manage-profile/manage-profile.component.ts","../../../packages/account/src/lib/components/register/register.component.ts","../../../packages/account/src/lib/components/reset-password/reset-password.component.ts","../../../packages/account/src/lib/guards/authentication-flow.guard.ts","../../../packages/account/src/lib/account-routing.module.ts","../../../packages/account/src/lib/components/change-password/change-password.component.ts","../../../packages/account/src/lib/components/personal-settings/personal-settings.component.ts","../../../packages/account/src/lib/utils/factory-utils.ts","../../../packages/account/src/lib/account.module.ts","../../../packages/account/src/lib/proxy/account/web/areas/account/controllers/models/login-result-type.enum.ts","../../../packages/account/src/lib/proxy/account/web/areas/account/controllers/account.service.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","restService","_this","this","apiName","register","input","request","method","url","body","resetPassword","sendPasswordResetCode","Injectable","args","providedIn","RestService","ForgotPasswordComponent","fb","accountService","isEmailSent","form","group","email","Validators","required","prototype","onSubmit","invalid","inProgress","get","appName","pipe","finalize","subscribe","Component","selector","template","FormBuilder","AccountService","ACCOUNT_CONFIG_OPTIONS","InjectionToken","getRedirectUrl","injector","route","ActivatedRoute","options","snapshot","queryParams","returnUrl","redirectUrl","maxLength","LoginComponent","toasterService","authService","configState","isSelfRegistrationEnabled","authWrapperKey","ngOnInit","init","buildForm","getSetting","toLowerCase","username","password","rememberMe","_a","login","catchError","err","snq","error_description","message","life","throwError","Injector","ToasterService","AuthService","ConfigStateService","ManageProfileStateService","store","InternalStore","defineProperty","sliceUpdate","getProfile$","sliceState","state","profile","getProfile","setProfile","patch","ManageProfileComponent","profileService","manageProfileState","selectedTab","changePasswordKey","personalSettingsKey","profile$","isExternal","hideChangePasswordTab","animations","trigger","transition","useAnimation","fadeIn","ProfileService","RegisterComponent","warn","key","defaultValue","getPasswordValidators","newUser","userName","emailAddress","switchMap","PASSWORD_FIELDS","ResetPasswordComponent","router","isPasswordReset","mapErrorsFn","errors","groupErrors","control","indexOf","String","name","filter","userId","resetToken","navigateByUrl","confirmPassword","validators","comparePasswords","Router","AuthenticationFlowGuard","canActivate","isInternalAuth","navigateToLogin","replaceableComponent","defaultComponent","ɵ1","ɵ2","ɵ3","tenantBoxVisible","ɵ4","routes","path","pathMatch","redirectTo","component","DynamicLayoutComponent","children","ReplaceableRouteContainerComponent","data","ɵ0","AuthGuard","NgModule","imports","RouterModule","forChild","exports","ChangePasswordComponent","_b","hideCurrentPassword","hasPassword","passwordValidations","newPassword","repeatNewPassword","removeControl","changePassword","assign","currentPassword","reset","success","addControl","FormControl","exportAs","PersonalSettingsComponent","surname","phoneNumber","submit","update","accountConfigOptionsFactory","LoginResultType","declarations","AccountModule","ngModule","providers","provide","useValue","useFactory","deps","forLazy","LazyModuleFactory","CoreModule","AccountRoutingModule","ThemeSharedModule","NgbDropdownModule","NgxValidateCoreModule","loginResultTypeOptions","mapEnumToOptions","checkPasswordByLogin","loginByLogin","logout"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import type { RegisterDto, ResetPasswordDto, SendPasswordResetCodeDto } from './models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport type { IdentityUserDto } from '../identity/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  apiName = 'AbpAccount';\n\n  register = (input: RegisterDto) =>\n    this.restService.request<any, IdentityUserDto>({\n      method: 'POST',\n      url: '/api/account/register',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  resetPassword = (input: ResetPasswordDto) =>\n    this.restService.request<any, void>({\n      method: 'POST',\n      url: '/api/account/reset-password',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  sendPasswordResetCode = (input: SendPasswordResetCodeDto) =>\n    this.restService.request<any, void>({\n      method: 'POST',\n      url: '/api/account/send-password-reset-code',\n      body: input,\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { AccountService } from '../../proxy/account/account.service';\n\n@Component({\n  selector: 'abp-forgot-password',\n  templateUrl: 'forgot-password.component.html',\n})\nexport class ForgotPasswordComponent {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  isEmailSent = false;\n\n  constructor(private fb: FormBuilder, private accountService: AccountService) {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n\n    this.inProgress = true;\n\n    this.accountService\n      .sendPasswordResetCode({ email: this.form.get('email').value, appName: 'Angular' })\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe(() => {\n        this.isEmailSent = true;\n      });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { AccountConfigOptions } from '../models/config-options';\n\nexport const ACCOUNT_CONFIG_OPTIONS = new InjectionToken<AccountConfigOptions>(\n  'ACCOUNT_CONFIG_OPTIONS',\n);\n","import { Injector } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ACCOUNT_CONFIG_OPTIONS } from '../tokens/config-options.token';\n\nexport function getRedirectUrl(injector: Injector) {\n  const route = injector.get(ActivatedRoute);\n  const options = injector.get(ACCOUNT_CONFIG_OPTIONS);\n  return route.snapshot.queryParams.returnUrl || options.redirectUrl || '/';\n}\n","import { ConfigStateService, AuthService } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngxs/store';\nimport { throwError } from 'rxjs';\nimport { catchError, finalize } from 'rxjs/operators';\nimport snq from 'snq';\nimport { eAccountComponents } from '../../enums/components';\nimport { getRedirectUrl } from '../../utils/auth-utils';\n\nconst { maxLength, required } = Validators;\n\n@Component({\n  selector: 'abp-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  isSelfRegistrationEnabled = true;\n\n  authWrapperKey = eAccountComponents.AuthWrapper;\n\n  constructor(\n    protected injector: Injector,\n    protected fb: FormBuilder,\n    protected toasterService: ToasterService,\n    protected authService: AuthService,\n    protected configState: ConfigStateService,\n  ) {}\n\n  ngOnInit() {\n    this.init();\n    this.buildForm();\n  }\n\n  protected init() {\n    this.isSelfRegistrationEnabled =\n      (\n        (this.configState.getSetting('Abp.Account.IsSelfRegistrationEnabled') as string) || ''\n      ).toLowerCase() !== 'false';\n  }\n\n  protected buildForm() {\n    this.form = this.fb.group({\n      username: ['', [required, maxLength(255)]],\n      password: ['', [required, maxLength(128)]],\n      rememberMe: [false],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n\n    this.inProgress = true;\n\n    const { username, password, rememberMe } = this.form.value;\n\n    const redirectUrl = getRedirectUrl(this.injector);\n\n    this.authService\n      .login({ username, password, rememberMe, redirectUrl })\n      .pipe(\n        catchError(err => {\n          this.toasterService.error(\n            snq(() => err.error.error_description) ||\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n            'Error',\n            { life: 7000 },\n          );\n          return throwError(err);\n        }),\n        finalize(() => (this.inProgress = false)),\n      )\n      .subscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InternalStore, Profile } from '@abp/ng.core';\nimport { Observable } from 'rxjs';\n\nexport interface ManageProfileState {\n  profile: Profile.Response;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class ManageProfileStateService {\n  private readonly store = new InternalStore({} as ManageProfileState);\n\n  get createOnUpdateStream() {\n    return this.store.sliceUpdate;\n  }\n\n  getProfile$(): Observable<Profile.Response> {\n    return this.store.sliceState(state => state.profile);\n  }\n\n  getProfile(): Profile.Response {\n    return this.store.state.profile;\n  }\n\n  setProfile(profile: Profile.Response) {\n    this.store.patch({ profile });\n  }\n}\n","import { Profile, ProfileService } from '@abp/ng.core';\nimport { fadeIn } from '@abp/ng.theme.shared';\nimport { transition, trigger, useAnimation } from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { eAccountComponents } from '../../enums/components';\nimport { ManageProfileStateService } from '../../services/manage-profile.state.service';\n\n@Component({\n  selector: 'abp-manage-profile',\n  templateUrl: './manage-profile.component.html',\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\n  styles: [\n    `\n      .min-h-400 {\n        min-height: 400px;\n      }\n    `,\n  ],\n})\nexport class ManageProfileComponent implements OnInit {\n  selectedTab = 0;\n\n  changePasswordKey = eAccountComponents.ChangePassword;\n\n  personalSettingsKey = eAccountComponents.PersonalSettings;\n\n  profile$ = this.manageProfileState.getProfile$();\n\n  hideChangePasswordTab: boolean;\n\n  constructor(\n    protected profileService: ProfileService,\n    protected manageProfileState: ManageProfileStateService,\n  ) {}\n\n  ngOnInit() {\n    this.profileService.get().subscribe(profile => {\n      this.manageProfileState.setProfile(profile);\n      if (profile.isExternal) {\n        this.hideChangePasswordTab = true;\n        this.selectedTab = 1;\n      }\n    });\n  }\n}\n","import { AuthService, ConfigStateService } from '@abp/ng.core';\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport { catchError, finalize, switchMap } from 'rxjs/operators';\nimport snq from 'snq';\nimport { eAccountComponents } from '../../enums/components';\nimport { AccountService } from '../../proxy/account/account.service';\nimport { RegisterDto } from '../../proxy/account/models';\nimport { getRedirectUrl } from '../../utils/auth-utils';\nconst { maxLength, required, email } = Validators;\n\n@Component({\n  selector: 'abp-register',\n  templateUrl: './register.component.html',\n})\nexport class RegisterComponent implements OnInit {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  isSelfRegistrationEnabled = true;\n\n  authWrapperKey = eAccountComponents.AuthWrapper;\n\n  constructor(\n    protected fb: FormBuilder,\n    protected accountService: AccountService,\n    protected configState: ConfigStateService,\n    protected toasterService: ToasterService,\n    protected authService: AuthService,\n    protected injector: Injector,\n  ) {}\n\n  ngOnInit() {\n    this.init();\n    this.buildForm();\n  }\n\n  protected init() {\n    this.isSelfRegistrationEnabled =\n      (this.configState.getSetting('Abp.Account.IsSelfRegistrationEnabled') || '').toLowerCase() !==\n      'false';\n\n    if (!this.isSelfRegistrationEnabled) {\n      this.toasterService.warn(\n        {\n          key: 'AbpAccount::SelfRegistrationDisabledMessage',\n          defaultValue: 'Self registration is disabled.',\n        },\n        null,\n        { life: 10000 },\n      );\n      return;\n    }\n  }\n\n  protected buildForm() {\n    this.form = this.fb.group({\n      username: ['', [required, maxLength(255)]],\n      password: ['', [required, ...getPasswordValidators(this.injector)]],\n      email: ['', [required, email]],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n\n    this.inProgress = true;\n\n    const newUser = {\n      userName: this.form.get('username').value,\n      password: this.form.get('password').value,\n      emailAddress: this.form.get('email').value,\n      appName: 'Angular',\n    } as RegisterDto;\n\n    this.accountService\n      .register(newUser)\n      .pipe(\n        switchMap(() =>\n          this.authService.login({\n            username: newUser.userName,\n            password: newUser.password,\n            redirectUrl: getRedirectUrl(this.injector),\n          }),\n        ),\n        catchError(err => {\n          this.toasterService.error(\n            snq(() => err.error.error_description) ||\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n            'Error',\n            { life: 7000 },\n          );\n          return throwError(err);\n        }),\n        finalize(() => (this.inProgress = false)),\n      )\n      .subscribe();\n  }\n}\n","import { getPasswordValidators } from '@abp/ng.theme.shared';\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { comparePasswords, Validation } from '@ngx-validate/core';\nimport { finalize } from 'rxjs/operators';\nimport { AccountService } from '../../proxy/account/account.service';\n\nconst PASSWORD_FIELDS = ['password', 'confirmPassword'];\n\n@Component({\n  selector: 'abp-reset-password',\n  templateUrl: './reset-password.component.html',\n})\nexport class ResetPasswordComponent implements OnInit {\n  form: FormGroup;\n\n  inProgress = false;\n\n  isPasswordReset = false;\n\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\n    if (PASSWORD_FIELDS.indexOf(String(control.name)) < 0) return errors;\n\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private accountService: AccountService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private injector: Injector,\n  ) {}\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(({ userId, resetToken }) => {\n      if (!userId || !resetToken) this.router.navigateByUrl('/account/login');\n\n      this.form = this.fb.group(\n        {\n          userId: [userId, [Validators.required]],\n          resetToken: [resetToken, [Validators.required]],\n          password: ['', [Validators.required, ...getPasswordValidators(this.injector)]],\n          confirmPassword: ['', [Validators.required, ...getPasswordValidators(this.injector)]],\n        },\n        {\n          validators: [comparePasswords(PASSWORD_FIELDS)],\n        },\n      );\n    });\n  }\n\n  onSubmit() {\n    if (this.form.invalid || this.inProgress) return;\n\n    this.inProgress = true;\n\n    this.accountService\n      .resetPassword({\n        userId: this.form.get('userId').value,\n        resetToken: this.form.get('resetToken').value,\n        password: this.form.get('password').value,\n      })\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe(() => {\n        this.isPasswordReset = true;\n      });\n  }\n}\n","import { AuthService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable()\nexport class AuthenticationFlowGuard implements CanActivate {\n  constructor(private authService: AuthService) {}\n\n  canActivate() {\n    if (this.authService.isInternalAuth) return true;\n\n    this.authService.navigateToLogin();\n    return false;\n  }\n}\n","import {\n  AuthGuard,\n  DynamicLayoutComponent,\n  ReplaceableComponents,\n  ReplaceableRouteContainerComponent,\n} from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { eAccountComponents } from './enums/components';\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: ReplaceableRouteContainerComponent,\n        canActivate: [AuthenticationFlowGuard],\n        data: {\n          replaceableComponent: {\n            key: eAccountComponents.Login,\n            defaultComponent: LoginComponent,\n          } as ReplaceableComponents.RouteData<LoginComponent>,\n        },\n      },\n      {\n        path: 'register',\n        component: ReplaceableRouteContainerComponent,\n        canActivate: [AuthenticationFlowGuard],\n        data: {\n          replaceableComponent: {\n            key: eAccountComponents.Register,\n            defaultComponent: RegisterComponent,\n          } as ReplaceableComponents.RouteData<RegisterComponent>,\n        },\n      },\n      {\n        path: 'forgot-password',\n        component: ReplaceableRouteContainerComponent,\n        canActivate: [AuthenticationFlowGuard],\n        data: {\n          replaceableComponent: {\n            key: eAccountComponents.ForgotPassword,\n            defaultComponent: ForgotPasswordComponent,\n          } as ReplaceableComponents.RouteData<ForgotPasswordComponent>,\n        },\n      },\n      {\n        path: 'reset-password',\n        component: ReplaceableRouteContainerComponent,\n        canActivate: [],\n        data: {\n          tenantBoxVisible: false,\n          replaceableComponent: {\n            key: eAccountComponents.ResetPassword,\n            defaultComponent: ResetPasswordComponent,\n          } as ReplaceableComponents.RouteData<ResetPasswordComponent>,\n        },\n      },\n      {\n        path: 'manage',\n        component: ReplaceableRouteContainerComponent,\n        canActivate: [AuthGuard],\n        data: {\n          replaceableComponent: {\n            key: eAccountComponents.ManageProfile,\n            defaultComponent: ManageProfileComponent,\n          } as ReplaceableComponents.RouteData<ManageProfileComponent>,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { Profile, ProfileService } from '@abp/ng.core';\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\nimport { Component, Injector, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { comparePasswords, Validation } from '@ngx-validate/core';\nimport { finalize } from 'rxjs/operators';\nimport snq from 'snq';\nimport { Account } from '../../models/account';\nimport { ManageProfileStateService } from '../../services/manage-profile.state.service';\n\nconst { required } = Validators;\n\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\n\n@Component({\n  selector: 'abp-change-password-form',\n  templateUrl: './change-password.component.html',\n  exportAs: 'abpChangePasswordForm',\n})\nexport class ChangePasswordComponent\n  implements OnInit, Account.ChangePasswordComponentInputs, Account.ChangePasswordComponentOutputs {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  hideCurrentPassword: boolean;\n\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\n    if (PASSWORD_FIELDS.indexOf(String(control.name)) < 0) return errors;\n\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private injector: Injector,\n    private toasterService: ToasterService,\n    private profileService: ProfileService,\n    private manageProfileState: ManageProfileStateService,\n  ) {}\n\n  ngOnInit(): void {\n    this.hideCurrentPassword = !this.manageProfileState.getProfile()?.hasPassword;\n\n    const passwordValidations = getPasswordValidators(this.injector);\n\n    this.form = this.fb.group(\n      {\n        password: ['', required],\n        newPassword: [\n          '',\n          {\n            validators: [required, ...passwordValidations],\n          },\n        ],\n        repeatNewPassword: [\n          '',\n          {\n            validators: [required, ...passwordValidations],\n          },\n        ],\n      },\n      {\n        validators: [comparePasswords(PASSWORD_FIELDS)],\n      },\n    );\n\n    if (this.hideCurrentPassword) this.form.removeControl('password');\n  }\n\n  onSubmit() {\n    if (this.form.invalid) return;\n    this.inProgress = true;\n    this.profileService\n      .changePassword({\n        ...(!this.hideCurrentPassword && { currentPassword: this.form.get('password').value }),\n        newPassword: this.form.get('newPassword').value,\n      })\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe({\n        next: () => {\n          this.form.reset();\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', '', {\n            life: 5000,\n          });\n\n          if (this.hideCurrentPassword) {\n            this.hideCurrentPassword = false;\n            this.form.addControl('password', new FormControl('', [required]));\n          }\n        },\n        error: err => {\n          this.toasterService.error(\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\n          );\n        },\n      });\n  }\n}\n","import { ProfileService } from '@abp/ng.core';\nimport { ToasterService } from '@abp/ng.theme.shared';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { Account } from '../../models/account';\nimport { ManageProfileStateService } from '../../services/manage-profile.state.service';\n\nconst { maxLength, required, email } = Validators;\n\n@Component({\n  selector: 'abp-personal-settings-form',\n  templateUrl: './personal-settings.component.html',\n  exportAs: 'abpPersonalSettingsForm',\n})\nexport class PersonalSettingsComponent\n  implements\n    OnInit,\n    Account.PersonalSettingsComponentInputs,\n    Account.PersonalSettingsComponentOutputs {\n  form: FormGroup;\n\n  inProgress: boolean;\n\n  constructor(\n    private fb: FormBuilder,\n    private toasterService: ToasterService,\n    private profileService: ProfileService,\n    private manageProfileState: ManageProfileStateService,\n  ) {}\n\n  ngOnInit() {\n    this.buildForm();\n  }\n\n  buildForm() {\n    const profile = this.manageProfileState.getProfile();\n    this.form = this.fb.group({\n      userName: [profile.userName, [required, maxLength(256)]],\n      email: [profile.email, [required, email, maxLength(256)]],\n      name: [profile.name || '', [maxLength(64)]],\n      surname: [profile.surname || '', [maxLength(64)]],\n      phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\n    });\n  }\n\n  submit() {\n    if (this.form.invalid) return;\n    this.inProgress = true;\n    this.profileService\n      .update(this.form.value)\n      .pipe(finalize(() => (this.inProgress = false)))\n      .subscribe(profile => {\n        this.manageProfileState.setProfile(profile);\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\n      });\n  }\n}\n","import { AccountConfigOptions } from '../models/config-options';\n\nexport function accountConfigOptionsFactory(options: AccountConfigOptions) {\n  return {\n    redirectUrl: '/',\n    ...options,\n  };\n}\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AccountConfigOptions } from './models/config-options';\nimport { ACCOUNT_CONFIG_OPTIONS } from './tokens/config-options.token';\nimport { accountConfigOptionsFactory } from './utils/factory-utils';\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\n\nconst declarations = [\n  LoginComponent,\n  RegisterComponent,\n  ChangePasswordComponent,\n  ManageProfileComponent,\n  PersonalSettingsComponent,\n  ForgotPasswordComponent,\n  ResetPasswordComponent,\n];\n\n@NgModule({\n  declarations: [...declarations],\n  imports: [\n    CoreModule,\n    AccountRoutingModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n    NgxValidateCoreModule,\n  ],\n  exports: [...declarations],\n})\nexport class AccountModule {\n  static forChild(options = {} as AccountConfigOptions): ModuleWithProviders<AccountModule> {\n    return {\n      ngModule: AccountModule,\n      providers: [\n        AuthenticationFlowGuard,\n        { provide: ACCOUNT_CONFIG_OPTIONS, useValue: options },\n        {\n          provide: 'ACCOUNT_OPTIONS',\n          useFactory: accountConfigOptionsFactory,\n          deps: [ACCOUNT_CONFIG_OPTIONS],\n        },\n      ],\n    };\n  }\n\n  static forLazy(options = {} as AccountConfigOptions): NgModuleFactory<AccountModule> {\n    return new LazyModuleFactory(AccountModule.forChild(options));\n  }\n}\n","import { mapEnumToOptions } from '@abp/ng.core';\n\nexport enum LoginResultType {\n  Success = 1,\n  InvalidUserNameOrPassword = 2,\n  NotAllowed = 3,\n  LockedOut = 4,\n  RequiresTwoFactor = 5,\n}\n\nexport const loginResultTypeOptions = mapEnumToOptions(LoginResultType);\n","import type { AbpLoginResult, UserLoginInfo } from './models/models';\nimport { RestService } from '@abp/ng.core';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  apiName = 'AbpAccount';\n\n  checkPasswordByLogin = (login: UserLoginInfo) =>\n    this.restService.request<any, AbpLoginResult>({\n      method: 'POST',\n      url: '/api/account/check-password',\n      body: login,\n    },\n    { apiName: this.apiName });\n\n  loginByLogin = (login: UserLoginInfo) =>\n    this.restService.request<any, AbpLoginResult>({\n      method: 'POST',\n      url: '/api/account/login',\n      body: login,\n    },\n    { apiName: this.apiName });\n\n  logout = () =>\n    this.restService.request<any, void>({\n      method: 'GET',\n      url: '/api/account/logout',\n    },\n    { apiName: this.apiName });\n\n  constructor(private restService: RestService) {}\n}\n"]}