import { AuthGuard, DynamicLayoutComponent, ReplaceableRouteContainerComponent, } from '@abp/ng.core';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';
import { LoginComponent } from './components/login/login.component';
import { ManageProfileComponent } from './components/manage-profile/manage-profile.component';
import { RegisterComponent } from './components/register/register.component';
import { ResetPasswordComponent } from './components/reset-password/reset-password.component';
import { AuthenticationFlowGuard } from './guards/authentication-flow.guard';
const ɵ0 = {
    replaceableComponent: {
        key: "Account.LoginComponent" /* Login */,
        defaultComponent: LoginComponent,
    },
}, ɵ1 = {
    replaceableComponent: {
        key: "Account.RegisterComponent" /* Register */,
        defaultComponent: RegisterComponent,
    },
}, ɵ2 = {
    replaceableComponent: {
        key: "Account.ForgotPasswordComponent" /* ForgotPassword */,
        defaultComponent: ForgotPasswordComponent,
    },
}, ɵ3 = {
    tenantBoxVisible: false,
    replaceableComponent: {
        key: "Account.ResetPasswordComponent" /* ResetPassword */,
        defaultComponent: ResetPasswordComponent,
    },
}, ɵ4 = {
    replaceableComponent: {
        key: "Account.ManageProfileComponent" /* ManageProfile */,
        defaultComponent: ManageProfileComponent,
    },
};
const routes = [
    { path: '', pathMatch: 'full', redirectTo: 'login' },
    {
        path: '',
        component: DynamicLayoutComponent,
        children: [
            {
                path: 'login',
                component: ReplaceableRouteContainerComponent,
                canActivate: [AuthenticationFlowGuard],
                data: ɵ0,
            },
            {
                path: 'register',
                component: ReplaceableRouteContainerComponent,
                canActivate: [AuthenticationFlowGuard],
                data: ɵ1,
            },
            {
                path: 'forgot-password',
                component: ReplaceableRouteContainerComponent,
                canActivate: [AuthenticationFlowGuard],
                data: ɵ2,
            },
            {
                path: 'reset-password',
                component: ReplaceableRouteContainerComponent,
                canActivate: [],
                data: ɵ3,
            },
            {
                path: 'manage',
                component: ReplaceableRouteContainerComponent,
                canActivate: [AuthGuard],
                data: ɵ4,
            },
        ],
    },
];
export class AccountRoutingModule {
}
AccountRoutingModule.decorators = [
    { type: NgModule, args: [{
                imports: [RouterModule.forChild(routes)],
                exports: [RouterModule],
            },] }
];
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC1yb3V0aW5nLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3BhY2thZ2VzL2FjY291bnQvc3JjL2xpYi9hY2NvdW50LXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1Qsc0JBQXNCLEVBRXRCLGtDQUFrQyxHQUNuQyxNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQVUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNqRyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDcEUsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFDOUYsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDN0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sc0RBQXNELENBQUM7QUFFOUYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7V0FZL0Q7SUFDSixvQkFBb0IsRUFBRTtRQUNwQixHQUFHLHNDQUEwQjtRQUM3QixnQkFBZ0IsRUFBRSxjQUFjO0tBQ2tCO0NBQ3JELE9BTUs7SUFDSixvQkFBb0IsRUFBRTtRQUNwQixHQUFHLDRDQUE2QjtRQUNoQyxnQkFBZ0IsRUFBRSxpQkFBaUI7S0FDa0I7Q0FDeEQsT0FNSztJQUNKLG9CQUFvQixFQUFFO1FBQ3BCLEdBQUcsd0RBQW1DO1FBQ3RDLGdCQUFnQixFQUFFLHVCQUF1QjtLQUNrQjtDQUM5RCxPQU1LO0lBQ0osZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixvQkFBb0IsRUFBRTtRQUNwQixHQUFHLHNEQUFrQztRQUNyQyxnQkFBZ0IsRUFBRSxzQkFBc0I7S0FDa0I7Q0FDN0QsT0FNSztJQUNKLG9CQUFvQixFQUFFO1FBQ3BCLEdBQUcsc0RBQWtDO1FBQ3JDLGdCQUFnQixFQUFFLHNCQUFzQjtLQUNrQjtDQUM3RDtBQTVEVCxNQUFNLE1BQU0sR0FBVztJQUNyQixFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFO0lBQ3BEO1FBQ0UsSUFBSSxFQUFFLEVBQUU7UUFDUixTQUFTLEVBQUUsc0JBQXNCO1FBQ2pDLFFBQVEsRUFBRTtZQUNSO2dCQUNFLElBQUksRUFBRSxPQUFPO2dCQUNiLFNBQVMsRUFBRSxrQ0FBa0M7Z0JBQzdDLFdBQVcsRUFBRSxDQUFDLHVCQUF1QixDQUFDO2dCQUN0QyxJQUFJLElBS0g7YUFDRjtZQUNEO2dCQUNFLElBQUksRUFBRSxVQUFVO2dCQUNoQixTQUFTLEVBQUUsa0NBQWtDO2dCQUM3QyxXQUFXLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztnQkFDdEMsSUFBSSxJQUtIO2FBQ0Y7WUFDRDtnQkFDRSxJQUFJLEVBQUUsaUJBQWlCO2dCQUN2QixTQUFTLEVBQUUsa0NBQWtDO2dCQUM3QyxXQUFXLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztnQkFDdEMsSUFBSSxJQUtIO2FBQ0Y7WUFDRDtnQkFDRSxJQUFJLEVBQUUsZ0JBQWdCO2dCQUN0QixTQUFTLEVBQUUsa0NBQWtDO2dCQUM3QyxXQUFXLEVBQUUsRUFBRTtnQkFDZixJQUFJLElBTUg7YUFDRjtZQUNEO2dCQUNFLElBQUksRUFBRSxRQUFRO2dCQUNkLFNBQVMsRUFBRSxrQ0FBa0M7Z0JBQzdDLFdBQVcsRUFBRSxDQUFDLFNBQVMsQ0FBQztnQkFDeEIsSUFBSSxJQUtIO2FBQ0Y7U0FDRjtLQUNGO0NBQ0YsQ0FBQztBQU1GLE1BQU0sT0FBTyxvQkFBb0I7OztZQUpoQyxRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztnQkFDeEMsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO2FBQ3hCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQXV0aEd1YXJkLFxuICBEeW5hbWljTGF5b3V0Q29tcG9uZW50LFxuICBSZXBsYWNlYWJsZUNvbXBvbmVudHMsXG4gIFJlcGxhY2VhYmxlUm91dGVDb250YWluZXJDb21wb25lbnQsXG59IGZyb20gJ0BhYnAvbmcuY29yZSc7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlLCBSb3V0ZXMgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgRm9yZ290UGFzc3dvcmRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvZm9yZ290LXBhc3N3b3JkL2ZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9naW5Db21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50JztcbmltcG9ydCB7IE1hbmFnZVByb2ZpbGVDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvbWFuYWdlLXByb2ZpbGUvbWFuYWdlLXByb2ZpbGUuY29tcG9uZW50JztcbmltcG9ydCB7IFJlZ2lzdGVyQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBSZXNldFBhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9jb21wb25lbnRzL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBlQWNjb3VudENvbXBvbmVudHMgfSBmcm9tICcuL2VudW1zL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgQXV0aGVudGljYXRpb25GbG93R3VhcmQgfSBmcm9tICcuL2d1YXJkcy9hdXRoZW50aWNhdGlvbi1mbG93Lmd1YXJkJztcblxuY29uc3Qgcm91dGVzOiBSb3V0ZXMgPSBbXG4gIHsgcGF0aDogJycsIHBhdGhNYXRjaDogJ2Z1bGwnLCByZWRpcmVjdFRvOiAnbG9naW4nIH0sXG4gIHtcbiAgICBwYXRoOiAnJyxcbiAgICBjb21wb25lbnQ6IER5bmFtaWNMYXlvdXRDb21wb25lbnQsXG4gICAgY2hpbGRyZW46IFtcbiAgICAgIHtcbiAgICAgICAgcGF0aDogJ2xvZ2luJyxcbiAgICAgICAgY29tcG9uZW50OiBSZXBsYWNlYWJsZVJvdXRlQ29udGFpbmVyQ29tcG9uZW50LFxuICAgICAgICBjYW5BY3RpdmF0ZTogW0F1dGhlbnRpY2F0aW9uRmxvd0d1YXJkXSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHJlcGxhY2VhYmxlQ29tcG9uZW50OiB7XG4gICAgICAgICAgICBrZXk6IGVBY2NvdW50Q29tcG9uZW50cy5Mb2dpbixcbiAgICAgICAgICAgIGRlZmF1bHRDb21wb25lbnQ6IExvZ2luQ29tcG9uZW50LFxuICAgICAgICAgIH0gYXMgUmVwbGFjZWFibGVDb21wb25lbnRzLlJvdXRlRGF0YTxMb2dpbkNvbXBvbmVudD4sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXRoOiAncmVnaXN0ZXInLFxuICAgICAgICBjb21wb25lbnQ6IFJlcGxhY2VhYmxlUm91dGVDb250YWluZXJDb21wb25lbnQsXG4gICAgICAgIGNhbkFjdGl2YXRlOiBbQXV0aGVudGljYXRpb25GbG93R3VhcmRdLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgcmVwbGFjZWFibGVDb21wb25lbnQ6IHtcbiAgICAgICAgICAgIGtleTogZUFjY291bnRDb21wb25lbnRzLlJlZ2lzdGVyLFxuICAgICAgICAgICAgZGVmYXVsdENvbXBvbmVudDogUmVnaXN0ZXJDb21wb25lbnQsXG4gICAgICAgICAgfSBhcyBSZXBsYWNlYWJsZUNvbXBvbmVudHMuUm91dGVEYXRhPFJlZ2lzdGVyQ29tcG9uZW50PixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdGg6ICdmb3Jnb3QtcGFzc3dvcmQnLFxuICAgICAgICBjb21wb25lbnQ6IFJlcGxhY2VhYmxlUm91dGVDb250YWluZXJDb21wb25lbnQsXG4gICAgICAgIGNhbkFjdGl2YXRlOiBbQXV0aGVudGljYXRpb25GbG93R3VhcmRdLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgcmVwbGFjZWFibGVDb21wb25lbnQ6IHtcbiAgICAgICAgICAgIGtleTogZUFjY291bnRDb21wb25lbnRzLkZvcmdvdFBhc3N3b3JkLFxuICAgICAgICAgICAgZGVmYXVsdENvbXBvbmVudDogRm9yZ290UGFzc3dvcmRDb21wb25lbnQsXG4gICAgICAgICAgfSBhcyBSZXBsYWNlYWJsZUNvbXBvbmVudHMuUm91dGVEYXRhPEZvcmdvdFBhc3N3b3JkQ29tcG9uZW50PixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdGg6ICdyZXNldC1wYXNzd29yZCcsXG4gICAgICAgIGNvbXBvbmVudDogUmVwbGFjZWFibGVSb3V0ZUNvbnRhaW5lckNvbXBvbmVudCxcbiAgICAgICAgY2FuQWN0aXZhdGU6IFtdLFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgdGVuYW50Qm94VmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgcmVwbGFjZWFibGVDb21wb25lbnQ6IHtcbiAgICAgICAgICAgIGtleTogZUFjY291bnRDb21wb25lbnRzLlJlc2V0UGFzc3dvcmQsXG4gICAgICAgICAgICBkZWZhdWx0Q29tcG9uZW50OiBSZXNldFBhc3N3b3JkQ29tcG9uZW50LFxuICAgICAgICAgIH0gYXMgUmVwbGFjZWFibGVDb21wb25lbnRzLlJvdXRlRGF0YTxSZXNldFBhc3N3b3JkQ29tcG9uZW50PixcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdGg6ICdtYW5hZ2UnLFxuICAgICAgICBjb21wb25lbnQ6IFJlcGxhY2VhYmxlUm91dGVDb250YWluZXJDb21wb25lbnQsXG4gICAgICAgIGNhbkFjdGl2YXRlOiBbQXV0aEd1YXJkXSxcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgIHJlcGxhY2VhYmxlQ29tcG9uZW50OiB7XG4gICAgICAgICAgICBrZXk6IGVBY2NvdW50Q29tcG9uZW50cy5NYW5hZ2VQcm9maWxlLFxuICAgICAgICAgICAgZGVmYXVsdENvbXBvbmVudDogTWFuYWdlUHJvZmlsZUNvbXBvbmVudCxcbiAgICAgICAgICB9IGFzIFJlcGxhY2VhYmxlQ29tcG9uZW50cy5Sb3V0ZURhdGE8TWFuYWdlUHJvZmlsZUNvbXBvbmVudD4sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIF0sXG4gIH0sXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbUm91dGVyTW9kdWxlLmZvckNoaWxkKHJvdXRlcyldLFxuICBleHBvcnRzOiBbUm91dGVyTW9kdWxlXSxcbn0pXG5leHBvcnQgY2xhc3MgQWNjb3VudFJvdXRpbmdNb2R1bGUge31cbiJdfQ==