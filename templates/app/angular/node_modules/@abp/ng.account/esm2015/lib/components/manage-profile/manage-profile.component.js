import { ProfileService } from '@abp/ng.core';
import { fadeIn } from '@abp/ng.theme.shared';
import { transition, trigger, useAnimation } from '@angular/animations';
import { Component } from '@angular/core';
import { ManageProfileStateService } from '../../services/manage-profile.state.service';
export class ManageProfileComponent {
    constructor(profileService, manageProfileState) {
        this.profileService = profileService;
        this.manageProfileState = manageProfileState;
        this.selectedTab = 0;
        this.changePasswordKey = "Account.ChangePasswordComponent" /* ChangePassword */;
        this.personalSettingsKey = "Account.PersonalSettingsComponent" /* PersonalSettings */;
        this.profile$ = this.manageProfileState.getProfile$();
    }
    ngOnInit() {
        this.profileService.get().subscribe(profile => {
            this.manageProfileState.setProfile(profile);
            if (profile.isExternal) {
                this.hideChangePasswordTab = true;
                this.selectedTab = 1;
            }
        });
    }
}
ManageProfileComponent.decorators = [
    { type: Component, args: [{
                selector: 'abp-manage-profile',
                template: "<div id=\"AbpContentToolbar\"></div>\n\n<div class=\"card border-0 shadow-sm min-h-400\" [abpLoading]=\"!(profile$ | async)\">\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-12 col-md-3\">\n        <ul class=\"nav flex-column nav-pills\" id=\"nav-tab\" role=\"tablist\">\n          <li\n            *ngIf=\"!hideChangePasswordTab && (profile$ | async)\"\n            class=\"nav-item\"\n            (click)=\"selectedTab = 0\"\n          >\n            <a\n              class=\"nav-link\"\n              [ngClass]=\"{ active: selectedTab === 0 }\"\n              role=\"tab\"\n              href=\"javascript:void(0)\"\n              >{{ 'AbpUi::ChangePassword' | abpLocalization }}</a\n            >\n          </li>\n          <li class=\"nav-item mb-2\" (click)=\"selectedTab = 1\">\n            <a\n              class=\"nav-link\"\n              [ngClass]=\"{ active: selectedTab === 1 }\"\n              role=\"tab\"\n              href=\"javascript:void(0)\"\n              >{{ 'AbpAccount::PersonalSettings' | abpLocalization }}</a\n            >\n          </li>\n        </ul>\n      </div>\n      <div *ngIf=\"profile$ | async\" class=\"col-12 col-md-9\">\n        <div class=\"tab-content\" *ngIf=\"selectedTab === 0\" [@fadeIn]>\n          <div class=\"tab-pane active\" role=\"tabpanel\">\n            <h4>\n              {{ 'AbpIdentity::ChangePassword' | abpLocalization }}\n              <hr />\n            </h4>\n            <abp-change-password-form\n              *abpReplaceableTemplate=\"{\n                componentKey: changePasswordKey\n              }\"\n            ></abp-change-password-form>\n          </div>\n        </div>\n        <div class=\"tab-content\" *ngIf=\"selectedTab === 1\" [@fadeIn]>\n          <div class=\"tab-pane active\" role=\"tabpanel\">\n            <h4>\n              {{ 'AbpIdentity::PersonalSettings' | abpLocalization }}\n              <hr />\n            </h4>\n            <abp-personal-settings-form\n              *abpReplaceableTemplate=\"{\n                componentKey: personalSettingsKey\n              }\"\n            ></abp-personal-settings-form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
                animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],
                styles: [`
      .min-h-400 {
        min-height: 400px;
      }
    `]
            },] }
];
ManageProfileComponent.ctorParameters = () => [
    { type: ProfileService },
    { type: ManageProfileStateService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlLXByb2ZpbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYWNjb3VudC9zcmMvbGliL2NvbXBvbmVudHMvbWFuYWdlLXByb2ZpbGUvbWFuYWdlLXByb2ZpbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBVyxjQUFjLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDdkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFFbEQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFjeEYsTUFBTSxPQUFPLHNCQUFzQjtJQVdqQyxZQUNZLGNBQThCLEVBQzlCLGtCQUE2QztRQUQ3QyxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUEyQjtRQVp6RCxnQkFBVyxHQUFHLENBQUMsQ0FBQztRQUVoQixzQkFBaUIsMERBQXFDO1FBRXRELHdCQUFtQiw4REFBdUM7UUFFMUQsYUFBUSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQU85QyxDQUFDO0lBRUosUUFBUTtRQUNOLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQzVDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDNUMsSUFBSSxPQUFPLENBQUMsVUFBVSxFQUFFO2dCQUN0QixJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSxDQUFDO2dCQUNsQyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQzthQUN0QjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7O1lBcENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsb0JBQW9CO2dCQUM5Qixvc0VBQThDO2dCQUM5QyxVQUFVLEVBQUUsQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7eUJBRTNFOzs7O0tBSUM7YUFFSjs7O1lBbEJpQixjQUFjO1lBS3ZCLHlCQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb2ZpbGUsIFByb2ZpbGVTZXJ2aWNlIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcbmltcG9ydCB7IGZhZGVJbiB9IGZyb20gJ0BhYnAvbmcudGhlbWUuc2hhcmVkJztcbmltcG9ydCB7IHRyYW5zaXRpb24sIHRyaWdnZXIsIHVzZUFuaW1hdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGVBY2NvdW50Q29tcG9uZW50cyB9IGZyb20gJy4uLy4uL2VudW1zL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTWFuYWdlUHJvZmlsZVN0YXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21hbmFnZS1wcm9maWxlLnN0YXRlLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhYnAtbWFuYWdlLXByb2ZpbGUnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWFuYWdlLXByb2ZpbGUuY29tcG9uZW50Lmh0bWwnLFxuICBhbmltYXRpb25zOiBbdHJpZ2dlcignZmFkZUluJywgW3RyYW5zaXRpb24oJzplbnRlcicsIHVzZUFuaW1hdGlvbihmYWRlSW4pKV0pXSxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgICAgLm1pbi1oLTQwMCB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDQwMHB4O1xuICAgICAgfVxuICAgIGAsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE1hbmFnZVByb2ZpbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBzZWxlY3RlZFRhYiA9IDA7XG5cbiAgY2hhbmdlUGFzc3dvcmRLZXkgPSBlQWNjb3VudENvbXBvbmVudHMuQ2hhbmdlUGFzc3dvcmQ7XG5cbiAgcGVyc29uYWxTZXR0aW5nc0tleSA9IGVBY2NvdW50Q29tcG9uZW50cy5QZXJzb25hbFNldHRpbmdzO1xuXG4gIHByb2ZpbGUkID0gdGhpcy5tYW5hZ2VQcm9maWxlU3RhdGUuZ2V0UHJvZmlsZSQoKTtcblxuICBoaWRlQ2hhbmdlUGFzc3dvcmRUYWI6IGJvb2xlYW47XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIHByb2ZpbGVTZXJ2aWNlOiBQcm9maWxlU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgbWFuYWdlUHJvZmlsZVN0YXRlOiBNYW5hZ2VQcm9maWxlU3RhdGVTZXJ2aWNlLFxuICApIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5wcm9maWxlU2VydmljZS5nZXQoKS5zdWJzY3JpYmUocHJvZmlsZSA9PiB7XG4gICAgICB0aGlzLm1hbmFnZVByb2ZpbGVTdGF0ZS5zZXRQcm9maWxlKHByb2ZpbGUpO1xuICAgICAgaWYgKHByb2ZpbGUuaXNFeHRlcm5hbCkge1xuICAgICAgICB0aGlzLmhpZGVDaGFuZ2VQYXNzd29yZFRhYiA9IHRydWU7XG4gICAgICAgIHRoaXMuc2VsZWN0ZWRUYWIgPSAxO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG4iXX0=