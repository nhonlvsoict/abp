import { RestService } from '@abp/ng.core';
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@abp/ng.core";
export class AccountService {
    constructor(restService) {
        this.restService = restService;
        this.apiName = 'AbpAccount';
        this.checkPasswordByLogin = (login) => this.restService.request({
            method: 'POST',
            url: '/api/account/check-password',
            body: login,
        }, { apiName: this.apiName });
        this.loginByLogin = (login) => this.restService.request({
            method: 'POST',
            url: '/api/account/login',
            body: login,
        }, { apiName: this.apiName });
        this.logout = () => this.restService.request({
            method: 'GET',
            url: '/api/account/logout',
        }, { apiName: this.apiName });
    }
}
AccountService.ɵprov = i0.ɵɵdefineInjectable({ factory: function AccountService_Factory() { return new AccountService(i0.ɵɵinject(i1.RestService)); }, token: AccountService, providedIn: "root" });
AccountService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root',
            },] }
];
AccountService.ctorParameters = () => [
    { type: RestService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3VudC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvYWNjb3VudC9zcmMvbGliL3Byb3h5L2FjY291bnQvd2ViL2FyZWFzL2FjY291bnQvY29udHJvbGxlcnMvYWNjb3VudC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDM0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBSzNDLE1BQU0sT0FBTyxjQUFjO0lBMEJ6QixZQUFvQixXQUF3QjtRQUF4QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtRQXpCNUMsWUFBTyxHQUFHLFlBQVksQ0FBQztRQUV2Qix5QkFBb0IsR0FBRyxDQUFDLEtBQW9CLEVBQUUsRUFBRSxDQUM5QyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBc0I7WUFDNUMsTUFBTSxFQUFFLE1BQU07WUFDZCxHQUFHLEVBQUUsNkJBQTZCO1lBQ2xDLElBQUksRUFBRSxLQUFLO1NBQ1osRUFDRCxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztRQUU3QixpQkFBWSxHQUFHLENBQUMsS0FBb0IsRUFBRSxFQUFFLENBQ3RDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFzQjtZQUM1QyxNQUFNLEVBQUUsTUFBTTtZQUNkLEdBQUcsRUFBRSxvQkFBb0I7WUFDekIsSUFBSSxFQUFFLEtBQUs7U0FDWixFQUNELEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO1FBRTdCLFdBQU0sR0FBRyxHQUFHLEVBQUUsQ0FDWixJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBWTtZQUNsQyxNQUFNLEVBQUUsS0FBSztZQUNiLEdBQUcsRUFBRSxxQkFBcUI7U0FDM0IsRUFDRCxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztJQUVrQixDQUFDOzs7O1lBN0JqRCxVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7OztZQUxRLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IEFicExvZ2luUmVzdWx0LCBVc2VyTG9naW5JbmZvIH0gZnJvbSAnLi9tb2RlbHMvbW9kZWxzJztcbmltcG9ydCB7IFJlc3RTZXJ2aWNlIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEFjY291bnRTZXJ2aWNlIHtcbiAgYXBpTmFtZSA9ICdBYnBBY2NvdW50JztcblxuICBjaGVja1Bhc3N3b3JkQnlMb2dpbiA9IChsb2dpbjogVXNlckxvZ2luSW5mbykgPT5cbiAgICB0aGlzLnJlc3RTZXJ2aWNlLnJlcXVlc3Q8YW55LCBBYnBMb2dpblJlc3VsdD4oe1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICB1cmw6ICcvYXBpL2FjY291bnQvY2hlY2stcGFzc3dvcmQnLFxuICAgICAgYm9keTogbG9naW4sXG4gICAgfSxcbiAgICB7IGFwaU5hbWU6IHRoaXMuYXBpTmFtZSB9KTtcblxuICBsb2dpbkJ5TG9naW4gPSAobG9naW46IFVzZXJMb2dpbkluZm8pID0+XG4gICAgdGhpcy5yZXN0U2VydmljZS5yZXF1ZXN0PGFueSwgQWJwTG9naW5SZXN1bHQ+KHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgdXJsOiAnL2FwaS9hY2NvdW50L2xvZ2luJyxcbiAgICAgIGJvZHk6IGxvZ2luLFxuICAgIH0sXG4gICAgeyBhcGlOYW1lOiB0aGlzLmFwaU5hbWUgfSk7XG5cbiAgbG9nb3V0ID0gKCkgPT5cbiAgICB0aGlzLnJlc3RTZXJ2aWNlLnJlcXVlc3Q8YW55LCB2b2lkPih7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgdXJsOiAnL2FwaS9hY2NvdW50L2xvZ291dCcsXG4gICAgfSxcbiAgICB7IGFwaU5hbWU6IHRoaXMuYXBpTmFtZSB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHJlc3RTZXJ2aWNlOiBSZXN0U2VydmljZSkge31cbn1cbiJdfQ==